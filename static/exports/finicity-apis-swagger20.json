{
  "swagger": "2.0",
  "info": {
    "version": "1.8.0",
    "title": "Finicity APIs",
    "description": "OpenAPI specification for Finicity APIs\n\n![](https://raw.githubusercontent.com/Mastercard/finicity-openapi/main/res/logo.png)",
    "contact": {
      "email": "business.development@finicity.com",
      "name": "Finicity",
      "url": "https://www.finicity.com/contact/"
    }
  },
  "host": "api.finicity.com",
  "basePath": "/",
  "securityDefinitions": {
    "FinicityAppKey": {
      "type": "apiKey",
      "description": "The \"Finicity-App-Key\" from the developer dashboard",
      "name": "Finicity-App-Key",
      "in": "header"
    },
    "FinicityAppToken": {
      "type": "apiKey",
      "description": "A token returned by the `/authentication` API",
      "name": "Finicity-App-Token",
      "in": "header"
    }
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/aggregation/v1/customers/{customerId}/institutionLogins/{institutionLoginId}/accounts": {
      "get": {
        "description": "Get all accounts associated with the given institution login. All accounts returned are accessible by a single set of credentials on a single institution.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GetCustomerAccountsByInstitutionLogin",
        "tags": [
          "Accounts"
        ],
        "operationId": "GetCustomerAccountsByInstitutionLogin",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "institutionLoginId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The institution login ID"
          }
        ],
        "responses": {
          "200": {
            "description": "The account list was successfully retrieved",
            "schema": {
              "$ref": "#/definitions/CustomerAccounts"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Refresh account and transaction data for all accounts associated with a given `institutionLoginId` with a connection to the institution.\n\nClient apps are not permitted to automate calls to the Refresh services. Active accounts are automatically refreshed by Finicity once per day. Because many financial institutions only post transactions once per day, calling Refresh repeatedly is usually a waste of resources and is not recommended.\n\nApps may call Refresh services for a specific customer when there is a specific business case for the need of data that is up to date as of the moment. Please discuss with your account manager and systems engineer for further clarification.\n\nThe recommended timeout setting for this request is 120 seconds in order to receive a response. However, you can terminate the connection after making the call the operation will still complete. You will have to pull the account records to check for an updated aggregation attempt date to know when the refresh is complete.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "RefreshCustomerAccountsByInstitutionLogin",
        "tags": [
          "Accounts"
        ],
        "operationId": "RefreshCustomerAccountsByInstitutionLogin",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "institutionLoginId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The institution login ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "No payload expected",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "The account list was successfully refreshed",
            "schema": {
              "$ref": "#/definitions/CustomerAccounts"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/aggregation/v1/customers/{customerId}/institutionLogins/{institutionLoginId}": {
      "delete": {
        "description": "Remove from Finicity aggregation the set of accounts matching the institution login ID.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "DeleteCustomerAccountsByInstitutionLogin",
        "tags": [
          "Accounts"
        ],
        "operationId": "DeleteCustomerAccountsByInstitutionLogin",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "institutionLoginId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The institution login ID"
          }
        ],
        "responses": {
          "204": {
            "description": "The customer accounts were successfully deleted",
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/aggregation/v2/customers/{customerId}/accounts/{accountId}": {
      "get": {
        "description": "Get a customer account by ID.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GetCustomerAccount",
        "tags": [
          "Accounts"
        ],
        "operationId": "GetCustomerAccount",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The account ID"
          }
        ],
        "responses": {
          "200": {
            "description": "The account was successfully retrieved",
            "schema": {
              "$ref": "#/definitions/CustomerAccount"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/aggregation/v1/customers/{customerId}/accounts/{accountId}": {
      "delete": {
        "description": "Remove the given account from Finicity aggregation.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "DeleteCustomerAccount",
        "tags": [
          "Accounts"
        ],
        "operationId": "DeleteCustomerAccount",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The account ID"
          }
        ],
        "responses": {
          "204": {
            "description": "The customer account was successfully deleted",
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/aggregation/v1/customers/{customerId}/accounts": {
      "get": {
        "description": "Get all accounts owned by the given customer.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GetCustomerAccounts",
        "tags": [
          "Accounts"
        ],
        "operationId": "GetCustomerAccounts",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A filter to fetch account in the given status"
          }
        ],
        "responses": {
          "200": {
            "description": "The account list was successfully retrieved",
            "schema": {
              "$ref": "#/definitions/CustomerAccounts"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Refresh account and transaction data for all accounts associated with the  given `customerId` with a connection to the institution.\n\nClient apps are not permitted to automate calls to the Refresh services. Active accounts are automatically refreshed by Finicity once per day. Because many financial institutions only post transactions once per day, calling Refresh repeatedly is usually a waste of resources and is not recommended.\n\nApps may call Refresh services for a specific customer when there is a specific business case for the need of data that is up to date as of the moment. Please discuss with your account manager and systems engineer for further clarification.\n\nThe recommended timeout setting for this request is 120 seconds in order to receive a response. However, you can terminate the connection after making the call the operation will still complete. You will have to pull the account records to check for an updated aggregation attempt date to know when the refresh is complete.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "RefreshCustomerAccounts",
        "tags": [
          "Accounts"
        ],
        "operationId": "RefreshCustomerAccounts",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "No payload expected",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "The account list was successfully refreshed",
            "schema": {
              "$ref": "#/definitions/CustomerAccounts"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/aggregation/v1/customers/{customerId}/institutions/{institutionId}/accounts": {
      "get": {
        "description": "Get all active accounts owned by the given customer at the given institution.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GetCustomerAccountsByInstitution",
        "tags": [
          "Accounts"
        ],
        "operationId": "GetCustomerAccountsByInstitution",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "institutionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": "The institution ID"
          }
        ],
        "responses": {
          "200": {
            "description": "The account list was successfully retrieved",
            "schema": {
              "$ref": "#/definitions/CustomerAccounts"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/analytics/ca360/v1/customers/{customerId}/analytics": {
      "post": {
        "description": "Generate a Consumer Attributes report for the given customer. The \"to\" and \"from\" date range is the last 12 months of consumer data, based on the date at which the report was generated.\n\nAn analytic ID is created and associated with the customer's ID. If you generate multiple Consumer Attributes reports for the same customer, then each report will have its own analytic ID.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GenerateConsumerAttributes",
        "tags": [
          "Analytics and Attributes"
        ],
        "operationId": "GenerateConsumerAttributes",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConsumerAttributeAccountIDs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Consumer Attributes report was successfully generated",
            "schema": {
              "$ref": "#/definitions/ConsumerAttributesAnalyticId"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      },
      "get": {
        "description": "Retrieve a list of all analytic IDs previously created for a customer using the Generate Consumer Attributes APIs.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "ListConsumerAttributes",
        "tags": [
          "Analytics and Attributes"
        ],
        "operationId": "ListConsumerAttributes",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Attributes IDs were successfully retrieved",
            "schema": {
              "$ref": "#/definitions/ConsumerAttributeList"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/analytics/ca360/v1/customers/{customerId}/analytics/fcra": {
      "post": {
        "description": "_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GenerateFCRAConsumerAttributes",
        "tags": [
          "Analytics and Attributes"
        ],
        "operationId": "GenerateFCRAConsumerAttributes",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConsumerAttributeAccountIDs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Consumer Attributes report was successfully generated",
            "schema": {
              "$ref": "#/definitions/ConsumerAttributesAnalyticId"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/analytics/ca360/v1/customers/{customerId}/analytics/{analyticsId}": {
      "get": {
        "description": "Retrieve a Consumer Attributes report for a customer.\n\nUse the analytic and customer IDs to retrieve 12 months of data attributes according to the \"to\" and \"from\" date range of the report at the time it was created. \n\nIf the current date is before the end of the calendar month, then the most recent month provides all available data up to the current date.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GetConsumerAttributesByID",
        "tags": [
          "Analytics and Attributes"
        ],
        "operationId": "GetConsumerAttributesByID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "analyticsId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The analytic ID"
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          }
        ],
        "responses": {
          "200": {
            "description": "The Consumer Attributes report was successfully retrieved",
            "schema": {
              "$ref": "#/definitions/ConsumerAttributes"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/analytics/ca360/v1/customers/{customerId}/analytics/{analyticsId}/fcra": {
      "get": {
        "description": "Retrieve a FCRA Consumer Attributes report for a customer.\n\nUse the analytic and customer IDs to retrieve 12 months of FCRA data attributes according to the `To` and `From` date range of the report at the time it was created. \n\nIf the current date is before the end of the calendar month, then the most recent month provides all available data up to the current date.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GetFCRAConsumerAttributesByID",
        "tags": [
          "Analytics and Attributes"
        ],
        "operationId": "GetFCRAConsumerAttributesByID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "analyticsId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The analytic ID"
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "purpose",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "2-digit code from [Permissible Purpose Codes](https://docs.finicity.com/permissible-purpose-codes/), specifying the reason for retrieving this report. Required for retrieving some reports."
          }
        ],
        "responses": {
          "200": {
            "description": "The Consumer Attributes report was successfully retrieved",
            "schema": {
              "$ref": "#/definitions/ConsumerAttributes"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/aggregation/v1/partners/applications": {
      "post": {
        "description": "Register a new application to access financial institutions using OAuth connections.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "RegisterApp",
        "tags": [
          "App Registration"
        ],
        "operationId": "RegisterApp",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Application"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The app registration was successfully created",
            "schema": {
              "$ref": "#/definitions/RegisteredApplication"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/aggregation/v1/partners/applications/{preAppId}": {
      "put": {
        "description": "Update a registered application.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "ModifyAppRegistration",
        "tags": [
          "App Registration"
        ],
        "operationId": "ModifyAppRegistration",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "preAppId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The application registration tracking ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Application"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The app registration was updated",
            "schema": {
              "$ref": "#/definitions/RegisteredApplication"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/aggregation/v2/partners/applications": {
      "get": {
        "description": "Get the status of your application registration(s).\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GetAppRegistrationStatus",
        "tags": [
          "App Registration"
        ],
        "operationId": "GetAppRegistrationStatus",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "preAppId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The application registration tracking ID"
          },
          {
            "name": "applicationId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The application ID"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Look up app registration requests by status"
          },
          {
            "name": "appName",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Look up app registration requests by app name"
          },
          {
            "name": "submittedDate",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "description": "Look up app registration requests by the date they were submitted"
          },
          {
            "name": "modifiedDate",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "description": "Look up app registration requests by the date the request was updated. This can be used to determine when a request was updated to \"A\" or \"R\"."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "description": "Index of the page of results to return"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of results per page"
          }
        ],
        "responses": {
          "200": {
            "description": "The app registration statuses were returned",
            "schema": {
              "$ref": "#/definitions/AppStatuses"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/aggregation/v1/customers/{customerId}/applications/{applicationId}": {
      "put": {
        "description": "If you have multiple applications for a single client, and you want to register their applications to access financial institutions using OAuth connections, then use this API to assign applications to an existing customer.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "SetCustomerAppID",
        "tags": [
          "App Registration"
        ],
        "operationId": "SetCustomerAppID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The application ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "No payload expected",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "The app was successfully assigned",
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/aggregation/v2/customers/{customerId}/institutionLogins/{institutionLoginId}/migration": {
      "put": {
        "description": "The `institutionLoginId` parameter uses Finicity's internal FI mapping to move accounts from the current FI legacy connection to the new OAuth FI connection.\n\nThis API returns a list of accounts for the given institution login ID.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "MigrateInstitutionLoginAccounts",
        "tags": [
          "App Registration"
        ],
        "operationId": "MigrateInstitutionLoginAccounts",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "institutionLoginId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The institution login ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "No payload expected",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "The migration succeeded",
            "schema": {
              "$ref": "#/definitions/CustomerAccounts"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/aggregation/v1/customers/{customerId}/assets/{assetId}": {
      "get": {
        "description": "Retrieve a binary file for the given asset ID.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GetAssetByCustomerID",
        "tags": [
          "Assets"
        ],
        "operationId": "GetAssetByCustomerID",
        "deprecated": false,
        "produces": [
          "application/octet-stream",
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The asset ID"
          }
        ],
        "responses": {
          "200": {
            "description": "The asset was successfully downloaded",
            "schema": {
              "type": "string",
              "default": "",
              "format": "binary"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/aggregation/v2/partners/authentication": {
      "post": {
        "description": "Send Partner ID and Partner Secret to the Partner Authentication service to obtain a token for accessing Finicity APIs.\n* The token is valid for two hours and is required on all calls to the Finicity APIs\n* As a best practice, use a single token for all calls. Assign a timestamp for each token, and then check the current timestamp before making any calls. If the token is greater than 90 minutes, generate a new one.\n* ⚠️ After five failed attempts to authenticate, your account will be locked. Contact [support@finicity.com](mailto:support@finicity.com) to get help resetting your account.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "CreateToken",
        "tags": [
          "Authentication"
        ],
        "operationId": "CreateToken",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PartnerCredentials"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The access token was successfully created",
            "schema": {
              "$ref": "#/definitions/AccessToken"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check Partner ID, Partner Secret or Finicity-App-Key.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "FinicityAppKey": []
          }
        ]
      },
      "put": {
        "description": "Change the Partner Secret used to authenticate this partner.\n\nThe secret does not expire, but can be changed by calling this API. A valid Partner Secret may contain upper and lowercase characters, numbers, and the characters !, @, #, $, %, &, *, _, -, +. It must include at least one number and at least one letter, and its length should be between 12 and 255 characters.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "ModifyPartnerSecret",
        "tags": [
          "Authentication"
        ],
        "operationId": "ModifyPartnerSecret",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PartnerCredentialsWithNewSecret"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The Partner Secret was successfully updated",
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check Partner ID, Partner Secret or Finicity-App-Key.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "FinicityAppKey": []
          }
        ]
      }
    },
    "/analytics/balance/v1/customer/{customerId}": {
      "post": {
        "description": "Balance Analytics for Business analyzes bank balances over time to report metrics and identify behavior that may indicate risk.\n\nCalculated metrics include:\n* Current/available account balances\n* Minimum/maximum/average account balances over the requested time\n  period and broken down by month\n\n* Daily ending balance of accounts for each day in the requested time\n  period\n\n* Propensity of the customer's account balances to increase week over\n  week\n\n* Number of days in the requested time period ending with a negative\n  balance\n\n\nThis version of the API is intended for piloting and integration testing your application with the Balance Analytics product. It does not adhere to FCRA requirements, and should not be used for production/lending purposes. See _Generate Balance Analytics - FCRA_ for the FCRA compliant version of this API.\n\nA successful call to this API will generate analytics and store a report within Finicity. The report can be retrieved via _Get Balance Analytics Report_ (operation: _GetObbAnalyticsReport_).\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GenerateBalanceAnalytics",
        "tags": [
          "Balance Analytics"
        ],
        "operationId": "GenerateBalanceAnalytics",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/BalanceAndCashFlowAnalyticsReportConstraints"
            }
          },
          {
            "name": "reference-number",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Partner-provided reference number to correlate reports."
          }
        ],
        "responses": {
          "200": {
            "description": "Response given when balance analytics were generated successfully, providing the caller with a report ID which can be used to retrieve the report as JSON or a PDF.",
            "schema": {
              "$ref": "#/definitions/BalanceAndCashFlowAnalyticsReportAck"
            },
            "examples": {
              "application/json": {
                "accountIds": [
                  10001,
                  10002,
                  10003
                ],
                "businessId": 123,
                "createdDate": "2022-02-10T05:00:00-07:00",
                "customerId": 10001,
                "reportId": "145cabe0-2b38-4175-9b7e-115431359839",
                "reportPin": "qert",
                "requesterName": "Mortage ABC LLC",
                "title": "Finicity Balance Analytics"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A bad request was provided",
            "schema": {
              "$ref": "#/definitions/ObbErrorMessage"
            },
            "examples": {
              "application/json": {
                "errorCode": 400,
                "message": "Missing required parameter 'customerId'"
              }
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/ObbErrorMessage"
            },
            "examples": {
              "application/json": {
                "errorCode": 401,
                "message": "Invalid Finicity-App-Key"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "$ref": "#/definitions/ObbErrorMessage"
            },
            "examples": {
              "application/json": {
                "errorCode": 403,
                "message": "Partner does not have access to this resource"
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/ObbErrorMessage"
            },
            "examples": {
              "application/json": {
                "errorCode": 404,
                "message": "Customer not found"
              }
            },
            "headers": {}
          },
          "409": {
            "description": "Resource conflict",
            "schema": {
              "$ref": "#/definitions/ObbErrorMessage"
            },
            "examples": {
              "application/json": {
                "errorCode": 409,
                "message": "Customer is not registered as a business"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/analytics/balance/v1/customer/{customerId}/fcra": {
      "post": {
        "description": "Balance Analytics for Business analyzes bank balances over time to report metrics and identify behavior that may indicate risk.\n\nCalculated metrics include:\n* Current/available account balances\n* Minimum/maximum/average account balances over the requested time\n  period and broken down by month\n\n* Daily ending balance of accounts for each day in the requested time\n  period\n\n* Propensity of the customer's account balances to increase week over\n  week\n\n* Number of days in the requested time period ending with a negative\n  balance\n\n\nThis version of the API is intended for production use. It maintains and enforces all compliance with FCRA rules and requirements.\n\n*Note:* this is a premium service, billable per every successful API call for non-testing customers.\n\nA successful call to this API will generate analytics and store a report within Finicity. The report can be retrieved via _Get Balance Analytics Report - FCRA_ (operation: _GetObbAnalyticsReportFCRA_).\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GenerateBalanceAnalyticsFcra",
        "tags": [
          "Balance Analytics"
        ],
        "operationId": "GenerateBalanceAnalyticsFcra",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/BalanceAndCashFlowAnalyticsReportConstraints"
            }
          },
          {
            "name": "reference-number",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Partner-provided reference number to correlate reports."
          }
        ],
        "responses": {
          "200": {
            "description": "Response given when balance analytics (FCRA) were generated successfully, providing the caller with a report ID which can be used to retrieve the report as JSON or a PDF.",
            "schema": {
              "$ref": "#/definitions/BalanceAndCashFlowAnalyticsReportAck"
            },
            "examples": {
              "application/json": {
                "accountIds": [
                  10001,
                  10002,
                  10003
                ],
                "businessId": 123,
                "createdDate": "2022-02-10T05:00:00-07:00",
                "customerId": 10001,
                "reportId": "145cabe0-2b38-4175-9b7e-115431359839",
                "reportPin": "qert",
                "requesterName": "Mortage ABC LLC",
                "title": "Finicity Balance Analytics"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A bad request was provided",
            "schema": {
              "$ref": "#/definitions/ObbErrorMessage"
            },
            "examples": {
              "application/json": {
                "errorCode": 400,
                "message": "Missing required parameter 'customerId'"
              }
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/ObbErrorMessage"
            },
            "examples": {
              "application/json": {
                "errorCode": 401,
                "message": "Invalid Finicity-App-Key"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "$ref": "#/definitions/ObbErrorMessage"
            },
            "examples": {
              "application/json": {
                "errorCode": 403,
                "message": "Partner does not have access to this resource"
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/ObbErrorMessage"
            },
            "examples": {
              "application/json": {
                "errorCode": 404,
                "message": "Customer not found"
              }
            },
            "headers": {}
          },
          "409": {
            "description": "Resource conflict",
            "schema": {
              "$ref": "#/definitions/ObbErrorMessage"
            },
            "examples": {
              "application/json": {
                "errorCode": 409,
                "message": "Customer is not registered as a business"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/analytics/data/v1/{obb_report_id}": {
      "get": {
        "description": "Retrieve the report saved by _Generate Balance Analytics_ or _Generate Cash Flow Analytics_. Requires the report ID generated by the previous call.\n\nReport data can either be retrieved as a JSON document or PDF file.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GetObbAnalyticsReport",
        "tags": [
          "Balance Analytics",
          "Cash Flow Analytics"
        ],
        "operationId": "GetObbAnalyticsReport",
        "deprecated": false,
        "produces": [
          "application/json",
          "application/pdf"
        ],
        "parameters": [
          {
            "name": "obb_report_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Report ID generated and returned by OBB products"
          }
        ],
        "responses": {
          "200": {
            "description": "OBB Analytics report data as JSON or PDF",
            "schema": {
              "$ref": "#/definitions/GetObbAnalyticsReportResponse"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/analytics/data/v1/{obb_report_id}/fcra": {
      "get": {
        "description": "Retrieve the report saved by _Generate Balance Analytics - FCRA_ or _Generate Cash Flow Analytics - FCRA_. Requires the report ID generated by the previous call.\n\nReport data can either be retrieved as a JSON document or PDF file.\n\n*Note:* this is a premium service, billable per every successful API call for non-testing customers.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GetObbAnalyticsReportFcra",
        "tags": [
          "Balance Analytics",
          "Cash Flow Analytics"
        ],
        "operationId": "GetObbAnalyticsReportFcra",
        "deprecated": false,
        "produces": [
          "application/json",
          "application/pdf"
        ],
        "parameters": [
          {
            "name": "obb_report_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Report ID generated and returned by OBB products"
          },
          {
            "name": "purpose",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "2-digit code from [Permissible Purpose Codes](https://docs.finicity.com/permissible-purpose-codes/), specifying the reason for retrieving this report. Required for retrieving some reports."
          }
        ],
        "responses": {
          "200": {
            "description": "OBB Analytics FCRA report data as JSON or PDF",
            "schema": {
              "$ref": "#/definitions/GetObbAnalyticsReportFcraResponse"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/aggregation/v1/customers/{customerId}/accounts/{accountId}/statement": {
      "get": {
        "description": "Retrieve the customer's bank statements in PDF format. Up to 24 months of history is available depending on the financial institution. Since this is a premium service, charges incur per each successful statement retrieved. \n\nFor certified financial institutions, statements are available for the following account types:\n* Checking\n* Savings\n* Money market\n* CDs\n* Investments\n* Mortgage\n* Credit cards\n* Loans\n* Line of credit\n* Student Loans\n\nNote: setting the timeout to 180 seconds is recommended to allow enough time for a response.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GetCustomerAccountStatement",
        "tags": [
          "Bank Statements"
        ],
        "operationId": "GetCustomerAccountStatement",
        "deprecated": false,
        "produces": [
          "application/octet-stream",
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The account ID"
          },
          {
            "name": "index",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "maximum": 24.0,
            "exclusiveMaximum": false,
            "description": "Request statements from 1-24. By default, 1 is the most recent statement. Increase the index value to count back (by month) and retrieve its most recent statement."
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The type of statement to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "The statement was successfully downloaded as a PDF file",
            "schema": {
              "type": "string",
              "default": "",
              "format": "binary"
            },
            "headers": {}
          },
          "203": {
            "description": "The response contains an MFA challenge in XML or JSON format. Contact your Account Manager or Systems Engineers to determine the best route to handle this error.",
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/decisioning/v2/customers/{customerId}/statement": {
      "post": {
        "description": "Generate a Statement Report report for the given accounts under the given customer.\n\nThis is a premium service. A billable event will be created upon the successful generation of the Statement Report. \n\nBefore calling this API, a consumer must be created for the given customer ID (see Consumers APIs).\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GenerateStatementReport",
        "tags": [
          "Bank Statements"
        ],
        "operationId": "GenerateStatementReport",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/StatementReportConstraints"
            }
          },
          {
            "name": "callbackUrl",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code."
          }
        ],
        "responses": {
          "202": {
            "description": "The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.",
            "schema": {
              "$ref": "#/definitions/StatementReportAck"
            },
            "examples": {
              "application/json": {
                "id": "38dknche83oh-statement",
                "portfolioId": "sy7aa68w2ugx-1-port",
                "customerType": "active",
                "customerId": 1010560999,
                "requestId": "ny7x32stfq",
                "requesterName": "Demo",
                "createdDate": 1596226182,
                "title": "Finicity Statement Report",
                "consumerId": "555595ec74c8ec57adf44dadddb6a35",
                "consumerSsn": "1234",
                "constraints": {
                  "statementReportData": {
                    "accountId": 1000076901,
                    "index": 1
                  },
                  "reportCustomFields": [
                    {
                      "label": "loanID",
                      "value": "123456",
                      "shown": true
                    }
                  ]
                },
                "type": "statement",
                "status": "inProgress"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/decisioning/v2/customers/{customerId}/cashFlowBusiness": {
      "post": {
        "description": "Generate a Cash Flow Report (Business) report for all checking and savings under the given customer. This service retrieves up to two years of transaction history for the given account. It then uses this information to generate the CFR report. A consumer is not required to generate this report.\n\nThis report is not provided under FCRA rules, and this report is not available in the Finicity Consumer Portal for the borrower to view.\n\nIf no account type of checking or savings is found, the service will return HTTP 400 Bad Request.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GenerateCashFlowBusinessReport",
        "tags": [
          "Cash Flow"
        ],
        "operationId": "GenerateCashFlowBusinessReport",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CashFlowReportConstraints"
            }
          },
          {
            "name": "callbackUrl",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code."
          }
        ],
        "responses": {
          "202": {
            "description": "The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.",
            "schema": {
              "$ref": "#/definitions/CashFlowReportAck"
            },
            "examples": {
              "application/json": {
                "id": "383z55zudewm-cfrb",
                "customerType": "active",
                "customerId": 1275320,
                "requestId": "7a7qyps2iy",
                "requesterName": "Decisioning API",
                "createdDate": 1579819592,
                "title": "Finicity Cash Flow Report - Business",
                "consumerId": "3f7ff2cf0ffb3d0cd59875e070c9b1d4",
                "consumerSsn": "1234",
                "constraints": {
                  "accountIds": [
                    "1000535275"
                  ],
                  "reportCustomFields": [
                    {
                      "label": "loanID",
                      "value": "12345",
                      "shown": true
                    },
                    {
                      "label": "trackingID",
                      "value": "5555",
                      "shown": true
                    },
                    {
                      "label": "loanType",
                      "value": "car",
                      "shown": false
                    },
                    {
                      "label": "vendorID",
                      "value": "1613aa23",
                      "shown": true
                    },
                    {
                      "label": "vendorName",
                      "value": "PSC Finance",
                      "shown": false
                    }
                  ]
                },
                "type": "cfrb",
                "status": "inProgress"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/decisioning/v2/customers/{customerId}/cashFlowPersonal": {
      "post": {
        "description": "Generate a Cash Flow Report (Personal) report for all checking and savings under the given customer. This service retrieves up to two years of transaction history for the given account. It then uses this information to generate the CFR report.\n\nThis report is provided under FCRA rules, with Finicity acting as the CRA (Consumer Reporting Agency). If an individual account is included in the report - for example, with an individual acting as an personal guarantor on the loan - then this version of the report should be used. In case of an adverse action on the loan where the decision was based on this report, then the borrower can be referred to the [Finicity Consumer Portal](https://consumer.finicityreports.com) where they can view this report and submit a dispute if they feel any information in this report is inaccurate.\n\nBefore calling this API, a consumer must be created for the given customer ID (see Consumers APIs).\n\nIf no account type of checking or savings is found, the service will return HTTP 400 Bad Request.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GenerateCashFlowPersonalReport",
        "tags": [
          "Cash Flow"
        ],
        "operationId": "GenerateCashFlowPersonalReport",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CashFlowReportConstraints"
            }
          },
          {
            "name": "callbackUrl",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code."
          }
        ],
        "responses": {
          "202": {
            "description": "The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.",
            "schema": {
              "$ref": "#/definitions/CashFlowReportAck"
            },
            "examples": {
              "application/json": {
                "id": "383z51zurqwo-cfrp",
                "customerType": "active",
                "customerId": 1275320,
                "requestId": "7a7qyps2iy",
                "requesterName": "Decisioning API",
                "createdDate": 1579819592,
                "title": "Finicity Cash Flow Report - Personal",
                "consumerId": "3f7ff2cf0ffb3d0cd59875e070c9b1d4",
                "consumerSsn": "1234",
                "constraints": {
                  "accountIds": [
                    "1000535275"
                  ],
                  "reportCustomFields": [
                    {
                      "label": "loanID",
                      "value": "12345",
                      "shown": true
                    },
                    {
                      "label": "trackingID",
                      "value": "5555",
                      "shown": true
                    },
                    {
                      "label": "loanType",
                      "value": "car",
                      "shown": false
                    },
                    {
                      "label": "vendorID",
                      "value": "1613aa23",
                      "shown": true
                    },
                    {
                      "label": "vendorName",
                      "value": "PSC Finance",
                      "shown": false
                    }
                  ]
                },
                "type": "cfrp",
                "status": "inProgress"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/analytics/cashflow/v1/customer/{customerId}": {
      "post": {
        "description": "Cash Flow Analytics for Business analyzes cash flow over time to report metrics and identify behavior that may indicate risk.\n\nCalculated metrics include:\n* Average transaction value by month over the requested time period\n* Net cash flow over the requested time period and broken down by month\n* Count and report of weeks in the requested time period where there\n  were zero transactions posted to the customer's accounts\n\n* Minimum/maximum/average/sum/count of deposits by month\n* Minimum/maximum/average/sum/count of withdrawals by month\n* Estimated amount of deposits that can be classified as business\n  revenue\n\n* Number of transactions posted incurring a non-sufficient funds (NSF)\n  fee, and net amount charged in NSF fees\n\n\nThis version of the API is intended for piloting and integration testing your application with the Cash Flow Analytics product. It does not adhere to FCRA requirements, and should not be used for production/lending purposes. See _Generate Cash Flow Analytics - FCRA_ for the FCRA compliant version of this API.\n\nA successful call to this API will generate analytics and store a report within Finicity. The report can be retrieved via _Get Cash Flow Analytics Report_ (operation: _GetCashFlowAnalyticsReport_).\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GenerateCashFlowAnalytics",
        "tags": [
          "Cash Flow Analytics"
        ],
        "operationId": "GenerateCashFlowAnalytics",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/BalanceAndCashFlowAnalyticsReportConstraints"
            }
          },
          {
            "name": "reference-number",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Partner-provided reference number to correlate reports."
          }
        ],
        "responses": {
          "200": {
            "description": "Response given when cash flow analytics were generated successfully, providing the caller with a report ID which can be used to retrieve the report as JSON or a PDF.",
            "schema": {
              "$ref": "#/definitions/BalanceAndCashFlowAnalyticsReportAck"
            },
            "examples": {
              "application/json": {
                "accountIds": [
                  10001,
                  10002,
                  10003
                ],
                "businessId": 123,
                "createdDate": "2022-02-10T05:00:00-07:00",
                "customerId": 10001,
                "reportId": "145cabe0-2b38-4175-9b7e-115431359839",
                "reportPin": "qert",
                "requesterName": "Mortage ABC LLC",
                "title": "Finicity Cashflow Analytics"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A bad request was provided",
            "schema": {
              "$ref": "#/definitions/ObbErrorMessage"
            },
            "examples": {
              "application/json": {
                "errorCode": 400,
                "message": "Missing required parameter 'customerId'"
              }
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/ObbErrorMessage"
            },
            "examples": {
              "application/json": {
                "errorCode": 401,
                "message": "Invalid Finicity-App-Key"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "$ref": "#/definitions/ObbErrorMessage"
            },
            "examples": {
              "application/json": {
                "errorCode": 403,
                "message": "Partner does not have access to this resource"
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/ObbErrorMessage"
            },
            "examples": {
              "application/json": {
                "errorCode": 404,
                "message": "Customer not found"
              }
            },
            "headers": {}
          },
          "409": {
            "description": "Resource conflict",
            "schema": {
              "$ref": "#/definitions/ObbErrorMessage"
            },
            "examples": {
              "application/json": {
                "errorCode": 409,
                "message": "Customer is not registered as a business"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/analytics/cashflow/v1/customer/{customerId}/fcra": {
      "post": {
        "description": "Cash Flow Analytics for Business analyzes cash flow over time to report metrics and identify behavior that may indicate risk.\n\nCalculated metrics include:\n* Average transaction value by month over the requested time period\n* Net cash flow over the requested time period and broken down by month\n* Count and report of weeks in the requested time period where there\n  were zero transactions posted to the customer's accounts\n\n* Minimum/maximum/average/sum/count of deposits by month\n* Minimum/maximum/average/sum/count of withdrawals by month\n* Estimated amount of deposits that can be classified as business\n  revenue\n\n* Number of transactions posted incurring a non-sufficient funds (NSF)\n  fee, and net amount charged in NSF fees\n\n\nThis version of the API is intended for production use. It maintains and enforces all compliance with FCRA rules and requirements.\n\n*Note:* this is a premium service, billable per every successful API call for non-testing customers.\n\nA successful call to this API will generate analytics and store a report within Finicity. The report can be retrieved via _Get Cash Flow Analytics Report - FCRA_ (operation: _GetCashFlowAnalyticsReportFCRA_).\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GenerateCashFlowAnalyticsFcra",
        "tags": [
          "Cash Flow Analytics"
        ],
        "operationId": "GenerateCashFlowAnalyticsFcra",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/BalanceAndCashFlowAnalyticsReportConstraints"
            }
          },
          {
            "name": "reference-number",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Partner-provided reference number to correlate reports."
          }
        ],
        "responses": {
          "200": {
            "description": "Response given when cash flow analytics (FCRA) were generated successfully, providing the caller with a report ID which can be used to retrieve the report as JSON or a PDF.",
            "schema": {
              "$ref": "#/definitions/BalanceAndCashFlowAnalyticsReportAck"
            },
            "examples": {
              "application/json": {
                "accountIds": [
                  10001,
                  10002,
                  10003
                ],
                "businessId": 123,
                "createdDate": "2022-02-10T05:00:00-07:00",
                "customerId": 10001,
                "reportId": "145cabe0-2b38-4175-9b7e-115431359839",
                "reportPin": "qert",
                "requesterName": "Mortage ABC LLC",
                "title": "Finicity Cashflow Analytics"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A bad request was provided",
            "schema": {
              "$ref": "#/definitions/ObbErrorMessage"
            },
            "examples": {
              "application/json": {
                "errorCode": 400,
                "message": "Missing required parameter 'customerId'"
              }
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/ObbErrorMessage"
            },
            "examples": {
              "application/json": {
                "errorCode": 401,
                "message": "Invalid Finicity-App-Key"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "$ref": "#/definitions/ObbErrorMessage"
            },
            "examples": {
              "application/json": {
                "errorCode": 403,
                "message": "Partner does not have access to this resource"
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/ObbErrorMessage"
            },
            "examples": {
              "application/json": {
                "errorCode": 404,
                "message": "Customer not found"
              }
            },
            "headers": {}
          },
          "409": {
            "description": "Resource conflict",
            "schema": {
              "$ref": "#/definitions/ObbErrorMessage"
            },
            "examples": {
              "application/json": {
                "errorCode": 409,
                "message": "Customer is not registered as a business"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/connect/v2/generate": {
      "post": {
        "description": "Generate a Connect 2.0 URL link to add within your own applications.\n\nIn option, use the `experience` parameter to call Connect (per session) in the body of the request. Configure the `experience` parameter to change the brand color, logo, icon, which credit decisioning report to generate when the Connect application completes, and more.\n\nNote: contact your Sales Account Team to set up the `experience` parameter.\n\nMVS Developers: You can pre-populate the consumer's SSN on the \"Find employment records\" page at the beginning of the MVS payroll app. Pass the SSN value for the consumer in the body of the request call.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GenerateConnectUrl",
        "tags": [
          "Connect 🔗"
        ],
        "operationId": "GenerateConnectUrl",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConnectParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The URL link was successfully generated",
            "schema": {
              "$ref": "#/definitions/ConnectUrl"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/connect/v2/generate/lite": {
      "post": {
        "description": "Connect Lite is a variation of Connect Full (`POST /connect/v2/generate`), which has a limited set of features.\n* Sign in, user's credentials, and Multi-Factor Authentication (MFA)\n* No user account management\n\nThe Connect Web SDK isn't a requirement when using Connect lite. However, if you want to use the SDK events, routes, and user events, then you must integrate with the Connect Web SDK.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GenerateLiteConnectUrl",
        "tags": [
          "Connect 🔗"
        ],
        "operationId": "GenerateLiteConnectUrl",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/LiteConnectParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The URL link was successfully generated",
            "schema": {
              "$ref": "#/definitions/ConnectUrl"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/connect/v2/generate/fix": {
      "post": {
        "description": "Use the Connect Fix API when the following conditions occur:\n* The connection to the user's financial institution is lost\n* The user's credentials were updated (for any number of reasons)\n* The user's MFA challenge has expired\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GenerateFixConnectUrl",
        "tags": [
          "Connect 🔗"
        ],
        "operationId": "GenerateFixConnectUrl",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/FixConnectParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The URL link was successfully generated",
            "schema": {
              "$ref": "#/definitions/ConnectUrl"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/connect/v2/send/email": {
      "post": {
        "description": "Same as Connect Full (`POST /connect/v2/generate`) but send a Connect email to a consumer.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "SendConnectEmail",
        "tags": [
          "Connect 🔗"
        ],
        "operationId": "SendConnectEmail",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConnectEmailParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The URL link was successfully generated and the email sent",
            "schema": {
              "$ref": "#/definitions/ConnectEmailUrl"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/connect/v2/generate/jointBorrower": {
      "post": {
        "description": "Same as Connect Full (`POST /connect/v2/generate`) but for joint borrowers.\n\nMVS prompts both the primary and joint borrower to enter each of their financial, payroll, and paystub information in the same Connect session.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GenerateJointBorrowerConnectUrl",
        "tags": [
          "Connect 🔗"
        ],
        "operationId": "GenerateJointBorrowerConnectUrl",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConnectJointBorrowerParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The URL link was successfully generated",
            "schema": {
              "$ref": "#/definitions/ConnectUrl"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/connect/v2/send/email/jointBorrower": {
      "post": {
        "description": "Same as Connect Joint Borrower (`POST /connect/v2/generate/jointBorrower`) but send a Connect email  to at least one of the joint borrower's email addresses. \n\nWhen the consumer opens the email, MVS prompts both the primary and joint borrower to enter each of their financial, payroll, and paystub information in the same Connect session.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "SendJointBorrowerConnectEmail",
        "tags": [
          "Connect 🔗"
        ],
        "operationId": "SendJointBorrowerConnectEmail",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConnectJointBorrowerEmailParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The URL link was successfully generated and the email sent",
            "schema": {
              "$ref": "#/definitions/ConnectEmailUrl"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/decisioning/v1/customers/{customerId}/consumer": {
      "post": {
        "description": "Create a consumer record associated with the given customer. A consumer persists as the owner of any reports that are generated, even after the original customer is deleted from the system.\n\nA consumer must be created for the given customer before calling any of the Generate Report services.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "CreateConsumer",
        "tags": [
          "Consumers"
        ],
        "operationId": "CreateConsumer",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/NewConsumer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The consumer was successfully created",
            "schema": {
              "$ref": "#/definitions/CreatedConsumer"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "409": {
            "description": "The resource already exists",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      },
      "get": {
        "description": "Get the details of a consumer record by customer ID.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GetConsumerForCustomer",
        "tags": [
          "Consumers"
        ],
        "operationId": "GetConsumerForCustomer",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          }
        ],
        "responses": {
          "200": {
            "description": "The consumer was successfully retrieved",
            "schema": {
              "$ref": "#/definitions/Consumer"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/decisioning/v1/consumers/{consumerId}": {
      "get": {
        "description": "Get the details of a consumer record by consumer ID.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GetConsumer",
        "tags": [
          "Consumers"
        ],
        "operationId": "GetConsumer",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "consumerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The consumer ID"
          }
        ],
        "responses": {
          "200": {
            "description": "The consumer was successfully retrieved",
            "schema": {
              "$ref": "#/definitions/Consumer"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Modify an existing consumer. All fields are required for a consumer record, but individual fields for this call are optional because fields that are not specified will be left unchanged.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "ModifyConsumer",
        "tags": [
          "Consumers"
        ],
        "operationId": "ModifyConsumer",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "consumerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The consumer ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConsumerUpdate"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The consumer was successfully updated",
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/aggregation/v2/customers/testing": {
      "post": {
        "description": "Enroll a testing customer ([Test Drive](https://signup.finicity.com/) accounts).\n\nFor using testing customers with FinBank OAuth, you must register a test application with your systems engineer or account manager. Then, use that testing `applicationId` when creating testing customers.\n\nTesting Customers can access FinBank profiles (except \"FinBank Billable\" profiles), and cannot access live financial institutions.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "AddTestingCustomer",
        "tags": [
          "Customers"
        ],
        "operationId": "AddTestingCustomer",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/NewCustomer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The customer was successfully created",
            "schema": {
              "$ref": "#/definitions/CreatedCustomer"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/aggregation/v2/customers/active": {
      "post": {
        "description": "Enroll an active customer, which is the actual owner of one or more real-world accounts. This is a billable customer.\n\nActive customers must use the \"FinBank Billable\" profiles for testing purposes. \n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "AddCustomer",
        "tags": [
          "Customers"
        ],
        "operationId": "AddCustomer",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/NewCustomer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The customer was successfully created",
            "schema": {
              "$ref": "#/definitions/CreatedCustomer"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "429": {
            "description": "The service can't accept more requests or is not available from the [Test Drive](https://signup.finicity.com/).",
            "headers": {}
          }
        }
      }
    },
    "/aggregation/v1/customers": {
      "get": {
        "description": "Find all customers enrolled by the current partner, where the search text is found in the customer's username or any combination of `firstName` and `lastName` fields. If no search text is provided, all customers will be returned.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GetCustomers",
        "tags": [
          "Customers"
        ],
        "operationId": "GetCustomers",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Username for exact match (will return 0 or 1 record)"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "\"testing\" or \"active\" to return only customers of that type, or leave empty to return all customers"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The text you wish to match. Leave this empty if you wish to return all customers. Must be URL-encoded (see: [Handling Spaces in Queries](https://docs.finicity.com/endpoint-syntax-and-format/))."
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "description": "Index of the page of results to return"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "default": 25,
            "type": "integer",
            "format": "int32",
            "maximum": 1000.0,
            "exclusiveMaximum": false,
            "description": "Maximum number of results per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Customers were successfully retrieved",
            "schema": {
              "$ref": "#/definitions/Customers"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/aggregation/v1/customers/{customerId}/application": {
      "get": {
        "description": "Retrieve a customer along with additional details about the OAuth application.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GetCustomerWithAppData",
        "tags": [
          "Customers"
        ],
        "operationId": "GetCustomerWithAppData",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          }
        ],
        "responses": {
          "200": {
            "description": "The customer was successfully retrieved",
            "schema": {
              "$ref": "#/definitions/CustomerWithAppData"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/aggregation/v1/customers/{customerId}": {
      "get": {
        "description": "Retrieve a customer by ID.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GetCustomer",
        "tags": [
          "Customers"
        ],
        "operationId": "GetCustomer",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          }
        ],
        "responses": {
          "200": {
            "description": "The customer was successfully retrieved",
            "schema": {
              "$ref": "#/definitions/Customer"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Modify an enrolled customer by ID.\n\nYou must specify either `firstName`, `lastName`, or both in the request.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "ModifyCustomer",
        "tags": [
          "Customers"
        ],
        "operationId": "ModifyCustomer",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerUpdate"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The customer was successfully updated",
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Completely remove a customer from the system. This will remove the customer and all associated accounts and transactions.\n\n⚠️ Use this service carefully! It will not pause for confirmation before performing the operation!\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "DeleteCustomer",
        "tags": [
          "Customers"
        ],
        "operationId": "DeleteCustomer",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          }
        ],
        "responses": {
          "204": {
            "description": "The customer was successfully deleted",
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/institution/v2/certifiedInstitutions/rssd": {
      "get": {
        "description": "Search for certified financial institutions w/RSSD.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GetCertifiedInstitutionsWithRSSD",
        "tags": [
          "Institutions"
        ],
        "operationId": "GetCertifiedInstitutionsWithRSSD",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Search term (financial institution `name` field). Leave empty for all FIs."
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "description": "Index of the page of results to return"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "default": 25,
            "type": "integer",
            "format": "int32",
            "maximum": 1000.0,
            "exclusiveMaximum": false,
            "description": "Maximum number of results per page"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A product type: \"transAgg\", \"ach\", \"stateAgg\", \"voi\", \"voa\", \"aha\", \"availBalance\", \"accountOwner\""
          }
        ],
        "responses": {
          "200": {
            "description": "Institutions were successfully retrieved",
            "schema": {
              "$ref": "#/definitions/CertifiedInstitutions"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/institution/v2/institutions": {
      "get": {
        "description": "Search for financial institutions.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GetInstitutions",
        "tags": [
          "Institutions"
        ],
        "operationId": "GetInstitutions",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Search term (financial institution `name` field). Leave empty for all FIs."
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "description": "Index of the page of results to return"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "default": 25,
            "type": "integer",
            "format": "int32",
            "maximum": 1000.0,
            "exclusiveMaximum": false,
            "description": "Maximum number of results per page"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A product type: \"transAgg\", \"ach\", \"stateAgg\", \"voi\", \"voa\", \"aha\", \"availBalance\", \"accountOwner\""
          }
        ],
        "responses": {
          "200": {
            "description": "Institutions were successfully retrieved",
            "schema": {
              "$ref": "#/definitions/Institutions"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/institution/v2/certifiedInstitutions": {
      "get": {
        "description": "Search for financial institutions by certified product.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GetCertifiedInstitutions",
        "tags": [
          "Institutions"
        ],
        "operationId": "GetCertifiedInstitutions",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Search term (financial institution `name` field). Leave empty for all FIs."
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "description": "Index of the page of results to return"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "default": 25,
            "type": "integer",
            "format": "int32",
            "maximum": 1000.0,
            "exclusiveMaximum": false,
            "description": "Maximum number of results per page"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A product type: \"transAgg\", \"ach\", \"stateAgg\", \"voi\", \"voa\", \"aha\", \"availBalance\", \"accountOwner\""
          }
        ],
        "responses": {
          "200": {
            "description": "Institutions were successfully retrieved",
            "schema": {
              "$ref": "#/definitions/CertifiedInstitutions"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/institution/v2/institutions/{institutionId}": {
      "get": {
        "description": "Get financial institution details by ID.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GetInstitution",
        "tags": [
          "Institutions"
        ],
        "operationId": "GetInstitution",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "institutionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": "The institution ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Institution was successfully retrieved",
            "schema": {
              "$ref": "#/definitions/InstitutionWrapper"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/institution/v2/institutions/{institutionId}/branding": {
      "get": {
        "description": "Return the branding information for a financial institution.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GetInstitutionBranding",
        "tags": [
          "Institutions"
        ],
        "operationId": "GetInstitutionBranding",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "institutionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": "The institution ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Institution branding was successfully retrieved",
            "schema": {
              "$ref": "#/definitions/BrandingWrapper"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/aggregation/v1/customers/{customerId}/payStatements": {
      "post": {
        "description": "Upload pay statements for a customer.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "StoreCustomerPayStatement",
        "tags": [
          "Pay Statements"
        ],
        "operationId": "StoreCustomerPayStatement",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PayStatement"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The pay statement was successfully uploaded",
            "schema": {
              "$ref": "#/definitions/Asset"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/aggregation/v1/customers/{customerId}/accounts/{accountId}/owner": {
      "get": {
        "description": "Retrieve the names and addresses of the account owner from a financial institution.\n\nNote: this is a premium service, billable per every successful API call.\n\nThis service retrieves account data from the institution. This usually returns quickly, but in some scenarios may take a few minutes to complete. In the event of a timeout condition, retry the call.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GetAccountOwner",
        "tags": [
          "Payments"
        ],
        "operationId": "GetAccountOwner",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The account ID"
          }
        ],
        "responses": {
          "200": {
            "description": "The account owner was successfully retrieved",
            "schema": {
              "$ref": "#/definitions/AccountOwner"
            },
            "headers": {}
          },
          "203": {
            "description": "The response contains an MFA challenge in XML or JSON format. Contact your Account Manager or Systems Engineers to determine the best route to handle this error.",
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/aggregation/v2/customers/{customerId}/accounts/{accountId}/loanDetails": {
      "get": {
        "description": "Return the loan payment details of the customer for a loan-type account.\n\nNote: this is a premium service, billable per every successful API call.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GetLoanPaymentDetails",
        "tags": [
          "Payments"
        ],
        "operationId": "GetLoanPaymentDetails",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The account ID"
          }
        ],
        "responses": {
          "200": {
            "description": "The loan payment details were successfully retrieved",
            "schema": {
              "$ref": "#/definitions/LoanPaymentDetails"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/aggregation/v1/customers/{customerId}/accounts/{accountId}/details": {
      "get": {
        "description": "Return the real account number and routing number details for an ACH payment.\n\nNote: this is a premium service, billable per every successful API call.\n\n_Supported account types_: \"checking\", \"savings\", \"moneyMarket\", \"loan\"\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GetAccountACHDetails",
        "tags": [
          "Payments"
        ],
        "operationId": "GetAccountACHDetails",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The account ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Account ACH details were successfully retrieved",
            "schema": {
              "$ref": "#/definitions/ACHDetails"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/aggregation/v1/customers/{customerId}/accounts/{accountId}/availableBalance/live": {
      "get": {
        "description": "Retrieve the available and cleared account balances for a single account in real-time directly from a financial institution.\n\nNote: this is a premium service, billable per every successful API call.\n\n_Supported account types_: \"checking\", \"savings\", \"moneyMarket\", \"cd\"\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GetAvailableBalanceLive",
        "tags": [
          "Payments"
        ],
        "operationId": "GetAvailableBalanceLive",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The account ID"
          }
        ],
        "responses": {
          "200": {
            "description": "The live balance was successfully retrieved",
            "schema": {
              "$ref": "#/definitions/AvailableBalance"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/aggregation/v1/customers/{customerId}/accounts/{accountId}/availableBalance": {
      "get": {
        "description": "Retrieve the latest cached available and cleared account balances for a customer. Since we update and store balances throughout the day, this is the most accurate balance information available when a connection to a financial institution is unavailable or when a faster response is needed. Only deposit account types are supported: Checking, Savings, Money Market, and CD.\n\nNote: this is a premium service, billable per every successful API call. Enrollment is required.        \n\n_Supported account types_: \"checking\", \"savings\", \"moneyMarket\", \"cd\"\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GetAvailableBalance",
        "tags": [
          "Payments"
        ],
        "operationId": "GetAvailableBalance",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The account ID"
          }
        ],
        "responses": {
          "200": {
            "description": "The balance was successfully retrieved",
            "schema": {
              "$ref": "#/definitions/AvailableBalance"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/decisioning/v1/customers/{customerId}/portfolios/{portfolioId}": {
      "get": {
        "description": "Return a portfolio of most recently generated reports for each report type for the given customer. If there are multiple reports that were generated for a report type (VOA, VOI, etc.), only the most recently generated report for the type will be returned.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)\n",
        "summary": "GetPortfolioByCustomer",
        "tags": [
          "Portfolios"
        ],
        "operationId": "GetPortfolioByCustomer",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A portfolio ID with the portfolio version number. Using the portfolio number without a version number will return the most recently generated reports."
          }
        ],
        "responses": {
          "200": {
            "description": "The portfolio was successfully retrieved",
            "schema": {
              "$ref": "#/definitions/PortfolioSummary"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/decisioning/v1/consumers/{consumerId}/portfolios/{portfolioId}": {
      "get": {
        "description": "Return a portfolio of most recently generated reports for each report type for a given consumer. If there are multiple reports that were generated for a report type (VOA, VOI, etc.), only the most recently generated report for the type will be returned.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GetPortfolioByConsumer",
        "tags": [
          "Portfolios"
        ],
        "operationId": "GetPortfolioByConsumer",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "consumerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The consumer ID"
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A portfolio ID with the portfolio version number. Using the portfolio number without a version number will return the most recently generated reports."
          }
        ],
        "responses": {
          "200": {
            "description": "The portfolio was successfully retrieved",
            "schema": {
              "$ref": "#/definitions/PortfolioWithConsumerSummary"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/decisioning/v3/customers/{customerId}/reports/{reportId}": {
      "get": {
        "description": "Get a report that has been generated by a previous call to one of the Generate Report services.\n\nThe report's `status` field contains \"inProgress\", \"failure\", or \"success\". If the status shows \"inProgress\", the client app should wait 20 seconds and then call this API again.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GetReportByCustomer",
        "tags": [
          "Reports"
        ],
        "operationId": "GetReportByCustomer",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "reportId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the report"
          },
          {
            "name": "onBehalfOf",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The name of the entity you are retrieving the report on behalf of"
          },
          {
            "name": "purpose",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "2-digit code from [Permissible Purpose Codes](https://docs.finicity.com/permissible-purpose-codes/), specifying the reason for retrieving this report. Required for retrieving some reports."
          }
        ],
        "responses": {
          "200": {
            "description": "The report was successfully retrieved",
            "schema": {
              "$ref": "#/definitions/Report"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/decisioning/v3/consumers/{consumerId}/reports/{reportId}": {
      "get": {
        "description": "Get a report that has been generated by a previous call to one of the Generate Report services.\n\nThe report's `status` field contains \"inProgress\", \"failure\", or \"success\". If the status shows \"inProgress\", the client app should wait 20 seconds and then call this API again.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GetReportByConsumer",
        "tags": [
          "Reports"
        ],
        "operationId": "GetReportByConsumer",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "consumerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The consumer ID"
          },
          {
            "name": "reportId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the report"
          },
          {
            "name": "purpose",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "2-digit code from [Permissible Purpose Codes](https://docs.finicity.com/permissible-purpose-codes/), specifying the reason for retrieving this report. Required for retrieving some reports."
          },
          {
            "name": "onBehalfOf",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The name of the entity you are retrieving the report on behalf of"
          }
        ],
        "responses": {
          "200": {
            "description": "The report was successfully retrieved",
            "schema": {
              "$ref": "#/definitions/Report"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/decisioning/v1/customers/{customerId}/reports": {
      "get": {
        "description": "Get all reports that have been generated by previous calls to Generate Report services for the given customer.\n\nThe `status` fields in the returned list contain \"inProgress\", \"failure\", or \"success\". If the status shows \"inProgress\", the client app should wait 20 seconds and then call this API again.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GetReportsByCustomerId",
        "tags": [
          "Reports"
        ],
        "operationId": "GetReportsByCustomerId",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "purpose",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "2-digit code from [Permissible Purpose Codes](https://docs.finicity.com/permissible-purpose-codes/), specifying the reason for retrieving this report. Required for retrieving some reports."
          }
        ],
        "responses": {
          "200": {
            "description": "The reports summaries were successfully retrieved",
            "schema": {
              "$ref": "#/definitions/ReportSummaries"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "429": {
            "description": "The service can't accept more requests or is not available from the [Test Drive](https://signup.finicity.com/).",
            "headers": {}
          }
        }
      }
    },
    "/decisioning/v1/consumers/{consumerId}/reports": {
      "get": {
        "description": "Get all reports that have been generated by previous calls to Generate Report services for the given consumer.\n\nThe `status` fields in the returned list contain \"inProgress\", \"failure\", or \"success\". If the status shows \"inProgress\", the client app should wait 20 seconds and then call this API again.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GetReportsByConsumerId",
        "tags": [
          "Reports"
        ],
        "operationId": "GetReportsByConsumerId",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "consumerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The consumer ID"
          },
          {
            "name": "purpose",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "2-digit code from [Permissible Purpose Codes](https://docs.finicity.com/permissible-purpose-codes/), specifying the reason for retrieving this report. Required for retrieving some reports."
          }
        ],
        "responses": {
          "200": {
            "description": "The reports summaries were successfully retrieved",
            "schema": {
              "$ref": "#/definitions/ReportSummaries"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "429": {
            "description": "The service can't accept more requests or is not available from the [Test Drive](https://signup.finicity.com/).",
            "headers": {}
          }
        }
      }
    },
    "/aggregation/v1/customers/{customerId}/accounts/{accountId}/transactions/historic": {
      "post": {
        "description": "Connect to the account's financial institution and load up to 24 months of historic transactions for the account. Length of history varies by institution.\n\nThis is a premium service. The billable event is a call to this service specifying a customer ID that has not been seen before by this service. (If this service is called multiple times with the same customer ID, to load transactions from multiple accounts, only one billable event has occurred.)\n\nThe recommended timeout setting for this request is 180 seconds in order to receive a response. However, you can terminate the connection after making the call the operation will still complete. You will have to pull the account records to check for an updated aggregation attempt date to know when the refresh is complete.\n\nThe date range sent to the institution is calculated from the account's `createdDate`. This means that calling this service a second time for the same account normally will not add any new transactions for the account. For this reason, a second call to this service for a known account ID will usually return immediately.\n\nIn a few specific scenarios, it may be desirable to force a second connection to the institution for a known account ID. Some examples are:\n\n* The institution's policy has changed, making more transactions available\n* Finicity has now added a longer transaction history support for the institution\n* The first call encountered an error, and the resulting Aggregation Ticket has now been fixed by the Finicity Support Team\n\nIn these cases, the POST request can contain the parameter `force=true` in the request body to force the second connection.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "LoadHistoricTransactionsForCustomerAccount",
        "tags": [
          "Transactions"
        ],
        "operationId": "LoadHistoricTransactionsForCustomerAccount",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The account ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "No payload expected",
            "schema": {}
          }
        ],
        "responses": {
          "203": {
            "description": "The response contains an MFA challenge in XML or JSON format. Contact your Account Manager or Systems Engineers to determine the best route to handle this error.",
            "headers": {}
          },
          "204": {
            "description": "Historic transactions have been loaded successfully. The transactions are now available by calling the Get Customer Account Transactions API.",
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/aggregation/v3/customers/{customerId}/transactions": {
      "get": {
        "description": "Get all transactions available for this customer within the given date range, across all accounts. This service supports paging and sorting by `transactionDate` (or `postedDate` if no transaction date is provided), with a maximum of 1000 transactions per request.\n\nStandard consumer aggregation provides up to 180 days of transactions prior to the date each account was added to the Finicity system. To access older transactions, you must first call the service Load Historic Transactions for Account.\n\nThere is no limit for the size of the window between `fromDate` and `toDate`, however, the maximum number of transactions returned on one page is 1000.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GetAllCustomerTransactions",
        "tags": [
          "Transactions"
        ],
        "operationId": "GetAllCustomerTransactions",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": "A start date"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": "A end date"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "description": "Index of the page of results to return"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "default": 25,
            "type": "integer",
            "format": "int32",
            "maximum": 1000.0,
            "exclusiveMaximum": false,
            "description": "Maximum number of results per page"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "default": "desc",
            "type": "string",
            "description": "Date sort order: \"asc\" for ascending, \"desc\" for descending"
          },
          {
            "name": "includePending",
            "in": "query",
            "required": false,
            "default": false,
            "type": "boolean",
            "description": "If pending transactions must be included"
          }
        ],
        "responses": {
          "200": {
            "description": "The transactions were successfully retrieved",
            "schema": {
              "$ref": "#/definitions/Transactions"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/aggregation/v2/customers/{customerId}/transactions/{transactionId}": {
      "get": {
        "description": "Get details for the given transaction.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GetCustomerTransaction",
        "tags": [
          "Transactions"
        ],
        "operationId": "GetCustomerTransaction",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": "A transaction ID"
          }
        ],
        "responses": {
          "200": {
            "description": "The transaction was successfully retrieved",
            "schema": {
              "$ref": "#/definitions/Transaction"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/aggregation/v4/customers/{customerId}/accounts/{accountId}/transactions": {
      "get": {
        "description": "Get all transactions available for this customer account within the given date range. This service supports paging and sorting by `transactionDate` (or `postedDate` if no transaction date is provided), with a maximum of 1000 transactions per request.\n\nStandard consumer aggregation provides up to 180 days of transactions prior to the date each account was added to the Finicity system. To access older transactions, you must first call the Cash Flow Verification service Load Historic Transactions for Account.\n\nThere is no limit for the size of the window between `fromDate` and `toDate`, however, the maximum number of transactions returned on one page is 1000.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GetCustomerAccountTransactions",
        "tags": [
          "Transactions"
        ],
        "operationId": "GetCustomerAccountTransactions",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The account ID"
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": "A start date"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": "A end date"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "description": "Index of the page of results to return"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "default": 25,
            "type": "integer",
            "format": "int32",
            "maximum": 1000.0,
            "exclusiveMaximum": false,
            "description": "Maximum number of results per page"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "default": "desc",
            "type": "string",
            "description": "Date sort order: \"asc\" for ascending, \"desc\" for descending"
          },
          {
            "name": "includePending",
            "in": "query",
            "required": false,
            "default": false,
            "type": "boolean",
            "description": "If pending transactions must be included"
          }
        ],
        "responses": {
          "200": {
            "description": "The transactions were successfully retrieved",
            "schema": {
              "$ref": "#/definitions/Transactions"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/decisioning/v2/customers/{customerId}/transactions": {
      "post": {
        "description": "Generate a Transaction Report for the given accounts under the given customer. This service retrieves up to 24 months of transaction history for the given customer. It then uses this information to generate the Transaction Report.\n\nThis is a premium service. A billable event will be created upon the successful generation of the Transactions Report. \n\nBefore calling this API, a consumer must be created for the given customer ID (see Consumers APIs).\n\nThere cannot be more than 24 months between `fromDate` and `toDate`.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GenerateTransactionsReport",
        "tags": [
          "Transactions"
        ],
        "operationId": "GenerateTransactionsReport",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": "A end date"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TransactionsReportConstraints"
            }
          },
          {
            "name": "callbackUrl",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code."
          },
          {
            "name": "includePending",
            "in": "query",
            "required": false,
            "default": false,
            "type": "boolean",
            "description": "If pending transactions must be included"
          }
        ],
        "responses": {
          "202": {
            "description": "The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.",
            "schema": {
              "$ref": "#/definitions/TransactionsReportAck"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/aggregation/v1/customers/{customerId}/accounts/{accountId}/txpush": {
      "post": {
        "description": "Register a client app's TxPush Listener to receive TxPush notifications related to the given account.\n\nEach call to this service will return two records, one with class account and one with class transaction. Account events are sent when values change in the account's fields (such as `balance` or `interestRate`). Transaction events are sent whenever a new transaction is posted for the account. For institutions that do not provide TxPush services, notifications are sent as soon as Finicity finds a new transaction or new account data through regular aggregation processes.\n\nThe listener's URL must be secure (HTTPS) for any real-world account. In addition, the client's TxPush Listener will need to be verified. HTTP and HTTPS connections are only allowed on the standard ports 80 (HTTP) and 443 (HTTPS). The use of other ports will result with the call failing.\n\nFor additional details on this process, see [TxPush Listener Service](https://docs.finicity.com/txpush-listener-service/).\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "SubscribeToTxPushNotifications",
        "tags": [
          "TxPush"
        ],
        "operationId": "SubscribeToTxPushNotifications",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The account ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TxPushSubscriptionParameters"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The subscription was successfully created",
            "schema": {
              "$ref": "#/definitions/TxPushSubscriptions"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete all TxPush subscriptions with their notifications for the given account. No more notifications will be sent for account or transaction events.\n\nFor additional details on this process, see [TxPush Listener Service](https://docs.finicity.com/txpush-listener-service/).\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "DisableTxPushNotifications",
        "tags": [
          "TxPush"
        ],
        "operationId": "DisableTxPushNotifications",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The account ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Subscriptions were successfully deleted for the given account",
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/aggregation/v1/customers/{customerId}/accounts/{accountId}/transactions": {
      "post": {
        "description": "Inject a transaction into the transaction list for a testing account. This allows an app to trigger TxPush notifications for the account in order to test the app's TxPush Listener service. This causes the platform to send one transaction event and one account event (showing that the account balance has changed). This service is only supported for testing accounts.\n\nFor additional details on this process, see [TxPush Listener Service](https://docs.finicity.com/txpush-listener-service/).\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "CreateTxPushTestTransaction",
        "tags": [
          "TxPush"
        ],
        "operationId": "CreateTxPushTestTransaction",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The account ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TestTxPushTransaction"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The test notification was successfully sent",
            "schema": {
              "$ref": "#/definitions/CreatedTestTxPushTransaction"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/aggregation/v1/customers/{customerId}/subscriptions/{subscriptionId}": {
      "delete": {
        "description": "Delete a specific subscription to TxPush notifications for the given account. This could be individual deleting the account or transactions events. No more events will be sent for that specific subscription.\n\nFor additional details on this process, see [TxPush Listener Service](https://docs.finicity.com/txpush-listener-service/).\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "DeleteTxPushSubscription",
        "tags": [
          "TxPush"
        ],
        "operationId": "DeleteTxPushSubscription",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": "The subscription ID"
          }
        ],
        "responses": {
          "204": {
            "description": "The subscription was successfully deleted",
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/decisioning/v2/customers/{customerId}/voa": {
      "post": {
        "description": "Generate a Verification of Assets (VOA) report for all checking, savings, money market, and investment accounts for the given customer. This service retrieves up to twelve months of transaction history for each account and uses this information to generate the VOA report.\n\nThis is a premium service. The billing rate is the variable rate for Verification of Assets under the current subscription plan. The billable event is the successful generation of a VOA report.\n\nBefore calling this API, a consumer must be created for the given customer ID (see Consumers APIs).\n\nIf no account of type checking, savings, money market, or investment is found, the service will return HTTP 400 Bad Request.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GenerateVOAReport",
        "tags": [
          "Verify Assets"
        ],
        "operationId": "GenerateVOAReport",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/VOAReportConstraints"
            }
          },
          {
            "name": "callbackUrl",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code."
          }
        ],
        "responses": {
          "202": {
            "description": "The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.",
            "schema": {
              "$ref": "#/definitions/VOAReportAck"
            },
            "examples": {
              "application/json": {
                "id": "u4hstnnak45g",
                "portfolioId": "dyr6qvqd2yhb-1-port",
                "customerType": "active",
                "customerId": 1000006677,
                "requestId": "sfb7xp439w",
                "requesterName": "Decisioning API",
                "createdDate": 1588350269,
                "title": "Finicity Verification of Assets",
                "consumerId": "ac39e237c7619a4ecf014b8d399c0696",
                "consumerSsn": "6789",
                "constraints": {
                  "accountIds": [
                    "1000535275",
                    "1000535276"
                  ],
                  "fromDate": 1577986990,
                  "showNsf": false,
                  "reportCustomFields": [
                    {
                      "label": "loanID",
                      "value": "12345",
                      "shown": true
                    },
                    {
                      "label": "trackingID",
                      "value": "5555",
                      "shown": true
                    },
                    {
                      "label": "loanType",
                      "value": "car",
                      "shown": false
                    },
                    {
                      "label": "vendorID",
                      "value": "1613aa23",
                      "shown": true
                    },
                    {
                      "label": "vendorName",
                      "value": "PSC Finance",
                      "shown": false
                    }
                  ]
                },
                "type": "voa",
                "status": "inProgress"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/decisioning/v2/customers/{customerId}/voaHistory": {
      "post": {
        "description": "Generate a Verification of Assets with Income (VOAI) report for all checking, savings, money market, and investment accounts for the given customer. This service retrieves up to 24 months of transaction history for each account and uses this information to generate the VOAI report. The report includes 1 - 6 months of all debit and credit transactions for asset verification. By default, the history is set to 61 days, however, you can change the transaction history in this section by setting the `fromDate` parameter. The report also includes up to 24 months of income credit transactions (ordered by account and confidence level) regardless of `fromDate` for income verification.\n\nThis is a premium service. The billable event is the successful generation of a VOAI report.\n\nBefore calling this API, a consumer must be created for the given customer ID (see Consumers APIs).\n\nIf no account of type checking, savings, money market, or investment is found, the service will return HTTP 400 Bad Request.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GenerateVOAWithIncomeReport",
        "tags": [
          "Verify Assets"
        ],
        "operationId": "GenerateVOAWithIncomeReport",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/VOAWithIncomeReportConstraints"
            }
          },
          {
            "name": "callbackUrl",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code."
          }
        ],
        "responses": {
          "202": {
            "description": "The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.",
            "schema": {
              "$ref": "#/definitions/VOAWithIncomeReportAck"
            },
            "examples": {
              "application/json": {
                "id": "u4hstnyak45g",
                "portfolioId": "dyr6weqd2yhb-1-port",
                "customerType": "active",
                "customerId": 1000006677,
                "requestId": "sfb7x1we9w",
                "requesterName": "Decisioning API",
                "createdDate": 1588350269,
                "title": "Verification of Asset and Income - Transactions",
                "consumerId": "ac39e237c7619a4ecf014b8d399c0696",
                "consumerSsn": "6789",
                "constraints": {
                  "accountIds": [
                    "1000535275"
                  ],
                  "fromDate": 1580558400,
                  "reportCustomFields": [
                    {
                      "label": "loanID",
                      "value": "12345",
                      "shown": true
                    },
                    {
                      "label": "trackingID",
                      "value": "5555",
                      "shown": true
                    },
                    {
                      "label": "loanType",
                      "value": "car",
                      "shown": false
                    },
                    {
                      "label": "vendorID",
                      "value": "1613aa23",
                      "shown": true
                    },
                    {
                      "label": "vendorName",
                      "value": "PSC Finance",
                      "shown": false
                    }
                  ],
                  "showNsf": false,
                  "incomeStreamConfidenceMinimum": 50
                },
                "type": "voaHistory",
                "status": "inProgress"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/decisioning/v2/customers/{customerId}/preQualVoa": {
      "post": {
        "description": "Retrieve all checking, savings, money market, and investment accounts for a consumer. The account, owner information, and the number of insufficient funds (NSFs) for checking accounts are also provided.\n\nIf no account of type checking, savings, money market, or investment is found, the service will return HTTP 400 Bad Request.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GeneratePrequalificationCRAReport",
        "tags": [
          "Verify Assets"
        ],
        "operationId": "GeneratePrequalificationCRAReport",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PrequalificationReportConstraints"
            }
          },
          {
            "name": "callbackUrl",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code."
          }
        ],
        "responses": {
          "202": {
            "description": "The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.",
            "schema": {
              "$ref": "#/definitions/PrequalificationReportAck"
            },
            "examples": {
              "application/json": {
                "id": "88w4fbssrbja-prequalvoa",
                "portfolioId": "0whcism47a34-5-port",
                "customerType": "active",
                "customerId": 1000006677,
                "requestId": "sfb7xacr9w",
                "requesterName": "Decisioning API",
                "createdDate": 1588350269,
                "title": "Asset Ready Report (CRA)",
                "consumerId": "cb619e10185177cd92271c4da2df3fa3",
                "consumerSsn": "6789",
                "constraints": {
                  "accountIds": [
                    "1000535275",
                    "1000535276"
                  ],
                  "fromDate": 1577986990,
                  "reportCustomFields": [
                    {
                      "label": "loanID",
                      "value": "12345",
                      "shown": true
                    },
                    {
                      "label": "trackingID",
                      "value": "5555",
                      "shown": true
                    },
                    {
                      "label": "loanType",
                      "value": "car",
                      "shown": false
                    },
                    {
                      "label": "vendorID",
                      "value": "1613aa23",
                      "shown": true
                    },
                    {
                      "label": "vendorName",
                      "value": "PSC Finance",
                      "shown": false
                    }
                  ],
                  "showNsf": false
                },
                "type": "preQualVoa",
                "status": "inProgress"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/decisioning/v2/customers/{customerId}/assetSummary": {
      "post": {
        "description": "Retrieve all checking, savings, money market, and investment accounts for a customer. The account, owner information, and the number of insufficient funds (NSFs) for checking accounts are also provided.\n\nIf no account type of checking, savings, money market, or investment is found, the service will return HTTP 400 Bad Request.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GeneratePrequalificationNonCRAReport",
        "tags": [
          "Verify Assets"
        ],
        "operationId": "GeneratePrequalificationNonCRAReport",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PrequalificationReportConstraints"
            }
          },
          {
            "name": "callbackUrl",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code."
          }
        ],
        "responses": {
          "202": {
            "description": "The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.",
            "schema": {
              "$ref": "#/definitions/PrequalificationReportAck"
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/decisioning/v2/customers/{customerId}/voi": {
      "post": {
        "description": "Generate a Verification of Income (VOI) report for all checking, savings, and money market accounts for the given customer. This service retrieves up to two years of transaction history for each account and uses this information to generate the VOI report.\n\nThis is a premium service. The billing rate is the variable rate for Verification of Income under the current subscription plan. The billable event is the successful generation of a VOI report.\n\nIf no account of type checking, savings, or money market is found, the service will return HTTP 400 Bad Request.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GenerateVOIReport",
        "tags": [
          "Verify Income and Employment"
        ],
        "operationId": "GenerateVOIReport",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/VOIReportConstraints"
            }
          },
          {
            "name": "callbackUrl",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code."
          }
        ],
        "responses": {
          "202": {
            "description": "The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.",
            "schema": {
              "$ref": "#/definitions/VOIReportAck"
            },
            "examples": {
              "application/json": {
                "id": "u4hstnnaewetr-voi",
                "portfolioId": "dyr6qvqd2erw-1-port",
                "customerType": "active",
                "customerId": 1000006677,
                "requestId": "sfb7xp4wer",
                "requesterName": "Decisioning API",
                "createdDate": 1588350269,
                "title": "Finicity Verification of Income",
                "consumerId": "ac39e237c7619a4ecf014b8d399c0696",
                "consumerSsn": "6789",
                "constraints": {
                  "accountIds": [
                    "1000535275",
                    "1000535276"
                  ],
                  "fromDate": 1577986990,
                  "reportCustomFields": [
                    {
                      "label": "loanID",
                      "value": "12345",
                      "shown": true
                    },
                    {
                      "label": "trackingID",
                      "value": "5555",
                      "shown": true
                    },
                    {
                      "label": "loanType",
                      "value": "car",
                      "shown": false
                    },
                    {
                      "label": "vendorID",
                      "value": "1613aa23",
                      "shown": true
                    },
                    {
                      "label": "vendorName",
                      "value": "PSC Finance",
                      "shown": false
                    }
                  ]
                },
                "type": "voi",
                "status": "inProgress"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/decisioning/v2/customers/{customerId}/voePayroll": {
      "post": {
        "description": "Premium Service: A billable event when the API response is successful. \n\nMVS Implementation Options: Direct API Integration.\n\nUsed as a complementary report to the VOIE-Payroll report. This report is used to fulfill the pre-close VOE requirements. It retrieves the customer's employment details and employment status through the payroll source without any income information. \n\nTo generate this report, pass the values from the customer SSN, DOB, and the report ID from the first VOIE-Payroll report generated after the Connect session.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GenerateVOEPayrollReport",
        "tags": [
          "Verify Income and Employment"
        ],
        "operationId": "GenerateVOEPayrollReport",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PayrollReportConstraints"
            }
          },
          {
            "name": "callbackUrl",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code."
          }
        ],
        "responses": {
          "202": {
            "description": "The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.",
            "schema": {
              "$ref": "#/definitions/PayrollReportAck"
            },
            "examples": {
              "application/json": {
                "id": "41h4nzppn47u-voepayroll",
                "portfolioId": "9qud7dtuzbew-3-port",
                "customerType": "active",
                "customerId": 1011140000,
                "requestId": "7a7qyps2iy",
                "requesterName": "Decisioning API",
                "createdDate": 1579819592,
                "title": "Finicity Verification of Employment - Payroll",
                "consumerId": "656cf7083c5c06e0c125a698579f0000",
                "consumerSsn": "6789",
                "constraints": {
                  "payrollData": {
                    "payrollDataRetrievalId": "hahvhe2k0000",
                    "employerNames": [
                      "ACME INC"
                    ],
                    "reportId": "abcdefghijkl-voiepayroll"
                  },
                  "payStatementsFromDate": 1580558400,
                  "reportCustomFields": [
                    {
                      "label": "loanID",
                      "value": "12345",
                      "shown": true
                    }
                  ]
                },
                "type": "voePayroll",
                "status": "inProgress"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/decisioning/v2/customers/{customerId}/voeTransactions": {
      "post": {
        "description": "Premium Service: A billable event when the API response is successful.\n\nMVS-Direct integration developers only.\n\nUsed as a complimentary report to the VOA with Income and VOIE - Paystub (with TXVerify) reports and used to fulfill the pre-close VOE requirements. \n\nRetrieve the latest credit transaction information from the borrower's connected bank accounts and groups them into income streams so that you can view their payment history to ensure a direct deport was made within the expected cadence. The report displays transaction descriptions without any dollar amounts so that income re-verification isn't necessary.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GenerateVOETransactionsReport",
        "tags": [
          "Verify Income and Employment"
        ],
        "operationId": "GenerateVOETransactionsReport",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/VOETransactionsReportConstraints"
            }
          },
          {
            "name": "callbackUrl",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code."
          }
        ],
        "responses": {
          "202": {
            "description": "The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.",
            "schema": {
              "$ref": "#/definitions/VOETransactionsReportAck"
            },
            "examples": {
              "application/json": {
                "id": "u4hstny1k25g-voetransactions",
                "portfolioId": "dyr6weqd2yhb-2-port",
                "customerType": "active",
                "customerId": 1000006677,
                "requestId": "sfb7x1we9w",
                "requesterName": "Decisioning API",
                "createdDate": 1588350269,
                "title": "Finicity Verification Employment - Transactions",
                "consumerId": "ac39e237c7619a4ecf014b8d399c0696",
                "consumerSsn": "6789",
                "constraints": {
                  "reportId": "j7k8qbgwsa7d-voietxverify",
                  "reportCustomFields": [
                    {
                      "label": "loanID",
                      "value": "12345",
                      "shown": true
                    },
                    {
                      "label": "trackingID",
                      "value": "5555",
                      "shown": true
                    },
                    {
                      "label": "loanType",
                      "value": "car",
                      "shown": false
                    },
                    {
                      "label": "vendorID",
                      "value": "1613aa23",
                      "shown": true
                    },
                    {
                      "label": "vendorName",
                      "value": "PSC Finance",
                      "shown": false
                    }
                  ]
                },
                "type": "voeTransactions",
                "status": "inProgress"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/decisioning/v2/customers/{customerId}/payStatement": {
      "post": {
        "description": "Generate Pay Statement Extraction Report for the given customer. This service accepts asset IDs of the stored pay statements to generate a Pay Statement Extraction Report. \n\nThis is a premium service. The billing rate is the variable rate for Pay Statement Extraction Report under the current subscription plan. The billable event is the successful generation of a Pay Statement Extraction Report.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GeneratePayStatementReport",
        "tags": [
          "Verify Income and Employment"
        ],
        "operationId": "GeneratePayStatementReport",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PayStatementReportConstraints"
            }
          },
          {
            "name": "callbackUrl",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code."
          }
        ],
        "responses": {
          "202": {
            "description": "The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.",
            "schema": {
              "$ref": "#/definitions/PayStatementReportAck"
            },
            "examples": {
              "application/json": {
                "id": "y0ejausptjg1-paystatement",
                "portfolioId": "spd8aehuw63i-10-port",
                "customerType": "active",
                "customerId": 1003413624,
                "requestId": "8wy5htqg8u",
                "requesterName": "Decisioning API",
                "createdDate": 1588350269,
                "title": "Finicity Pay Statement Extraction Report",
                "consumerId": "4089f408963dd6b90b28a935e9903c0e",
                "consumerSsn": "6789",
                "constraints": {
                  "paystatementReport": {
                    "assetIds": [
                      "6f8fb0a0-e882-4f57-b672-cf53f1397581"
                    ],
                    "extractEarnings": true,
                    "extractDeductions": false,
                    "extractDirectDeposit": true
                  },
                  "reportCustomFields": [
                    {
                      "label": "loanID",
                      "value": "12345",
                      "shown": true
                    },
                    {
                      "label": "trackingID",
                      "value": "5555",
                      "shown": true
                    },
                    {
                      "label": "loanType",
                      "value": "car",
                      "shown": false
                    },
                    {
                      "label": "vendorID",
                      "value": "1613aa23",
                      "shown": true
                    },
                    {
                      "label": "vendorName",
                      "value": "PSC Finance",
                      "shown": false
                    }
                  ]
                },
                "type": "paystatement",
                "status": "inProgress"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/decisioning/v2/customers/{customerId}/voieTxVerify/withInterview": {
      "post": {
        "description": "Generate a VOIE - Paystub (with TXVerify) report for all checking and savings under the given customer. This service retrieves up to two years of transaction history for the given accounts. It then uses this information as well as the provided paystub(s), which are passed into the request body as asset IDs (generated using the Store Customer Pay Statement API) to generate the VOIE - Paystub (with TXVerify) report.\n\nNote: if you are using this API to refresh the bank transactions, use the same asset ID from the first report. A new paystub is not required unless the paystub is too old for underwriting requirements. Using the same asset ID that was on the original report and the previously extracted details will be used to speed up report generation response time.\n\nThis is a premium service. The billing rate is the variable rate for VOIE TXVerify under the current subscription plan. The billable event is the successful generation of a VOIE TXVerify Report.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GenerateVOIEPaystubWithTXVerifyReport",
        "tags": [
          "Verify Income and Employment"
        ],
        "operationId": "GenerateVOIEPaystubWithTXVerifyReport",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/VOIEWithTXVerifyReportConstraints"
            }
          },
          {
            "name": "callbackUrl",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code."
          }
        ],
        "responses": {
          "202": {
            "description": "The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.",
            "schema": {
              "$ref": "#/definitions/VOIEPaystubWithTXVerifyReportAck"
            },
            "examples": {
              "application/json": {
                "id": "2f3z55zuwewm-voietxverify",
                "customerId": 1275320,
                "consumerId": "3f7ff2cf0ffb3d0cd59875e070c9b1d4",
                "consumerSsn": "6789",
                "requesterName": "Decisioning API",
                "requestId": "7a7qyps2iy",
                "type": "voieTxVerify",
                "status": "inProgress",
                "createdDate": 1579819592,
                "constraints": {
                  "accountIds": [
                    "1000535275"
                  ],
                  "voieWithInterviewData": {
                    "txVerifyInterview": [
                      {
                        "assetId": "6f8fb0a0-e882-4f57-b672-cf53f1397581",
                        "accounts": []
                      }
                    ],
                    "extractEarnings": true,
                    "extractDeductions": false,
                    "extractDirectDeposit": true
                  },
                  "reportCustomFields": [
                    {
                      "label": "loanID",
                      "value": "123456",
                      "shown": true
                    }
                  ]
                },
                "customerType": "active",
                "title": "Finicity Verification of Income and Employment - Paystub (with TXVerify)",
                "portfolioId": "9qud7dtuzbew-2-port"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/decisioning/v2/customers/{customerId}/voieTxVerify/withStatement": {
      "post": {
        "description": "Generate a VOIE - Paystub report. This service uses the provided paystub(s), which are passed into the request body as asset IDs (generated using the Store Customer Pay Statement API) to generate the VOIE - Paystub report with digitized paystub details.\n\nThis is a premium service. The billing rate is the variable rate for VOIE - Paystub under the current subscription plan. The billable event is the successful generation of a VOIE - Paystub Report.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "GenerateVOIEPaystubReport",
        "tags": [
          "Verify Income and Employment"
        ],
        "operationId": "GenerateVOIEPaystubReport",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/VOIEReportConstraints"
            }
          },
          {
            "name": "callbackUrl",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code."
          }
        ],
        "responses": {
          "202": {
            "description": "The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.",
            "schema": {
              "$ref": "#/definitions/VOIEPaystubReportAck"
            },
            "examples": {
              "application/json": {
                "id": "2f3z55zuwewm-voietxverify",
                "portfolioId": "9qud7dtuzbew-13-port",
                "customerType": "active",
                "customerId": 1275320,
                "requestId": "7a7qyps2iy",
                "requesterName": "Decisioning API",
                "createdDate": 1579819592,
                "title": "Verification of Income and Employment - Paystub",
                "consumerId": "3f7ff2cf0ffb3d0cd59875e070c9b1d4",
                "consumerSsn": "6789",
                "constraints": {
                  "voieWithStatementData": {
                    "assetIds": [
                      "d50ed92f-543b-431c-8286-c8b8f6556679"
                    ],
                    "extractEarnings": true,
                    "extractDeductions": false,
                    "extractDirectDeposit": true
                  },
                  "reportCustomFields": [
                    {
                      "label": "loanID",
                      "value": "123456",
                      "shown": true
                    },
                    {
                      "label": "trackingID",
                      "value": "5555",
                      "shown": true
                    }
                  ]
                },
                "type": "voieTxVerify",
                "status": "inProgress"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/decisioning/v2/customers/{customerId}/voiePayroll": {
      "post": {
        "description": "The VOIE – Payroll report generates when the customer completes Connect. Lenders, who commonly use this report for pre-close verification employment check, can refresh this report by passing the consumer's SSN, DOB, and the report ID from the first VOIE – Payroll report they received.\n\nWe'll refresh this report and update any new pay histories since the first report generated, including borrower's employment status as active or not.\n\nNote: lenders can only refresh this report one time in a 60-day period starting from the date of the first report. Any further report refreshes will incur additional charges.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)",
        "summary": "RefreshVOIEPayrollReport",
        "tags": [
          "Verify Income and Employment"
        ],
        "operationId": "RefreshVOIEPayrollReport",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A customer ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PayrollReportConstraints"
            }
          },
          {
            "name": "callbackUrl",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code."
          }
        ],
        "responses": {
          "202": {
            "description": "The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.",
            "schema": {
              "$ref": "#/definitions/PayrollReportAck"
            },
            "examples": {
              "application/json": {
                "id": "123456789012-voiepayroll",
                "customerId": 1011140000,
                "consumerId": "656cf7083c5c06e0c125a698579f0000",
                "consumerSsn": "6789",
                "requesterName": "Decisioning API",
                "requestId": "7a7qyps2iy",
                "type": "voiePayroll",
                "status": "inProgress",
                "createdDate": 1579819592,
                "constraints": {
                  "payrollData": {
                    "payrollDataRetrievalId": "hahvhe2k0000",
                    "employerNames": [
                      "ACME INC"
                    ],
                    "reportId": "abcdefghijkl-voiepayroll"
                  },
                  "payStatementsFromDate": 1580558400,
                  "reportCustomFields": [
                    {
                      "label": "loanID",
                      "value": "12345",
                      "shown": true
                    }
                  ]
                },
                "customerType": "active",
                "title": "Finicity Verification of Income and Employment - Payroll",
                "portfolioId": "9qud7dtuzbew-2-port"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "The request was rejected",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "401": {
            "description": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          },
          "404": {
            "description": "The resource doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            },
            "headers": {}
          }
        }
      }
    }
  },
  "definitions": {
    "ErrorMessage": {
      "title": "ErrorMessage",
      "type": "object",
      "properties": {
        "code": {
          "description": "An error code (can be returned as a number or a string). Useful links: [API Errors](https://docs.finicity.com/api-errors/), [Aggregation Status Codes](https://docs.finicity.com/aggregation-status-codes/).",
          "example": 10001,
          "type": "object"
        },
        "status": {
          "description": "A status code",
          "example": "401",
          "type": "string"
        },
        "title": {
          "description": "A title for the error",
          "example": "Connecting accounts error",
          "type": "string"
        },
        "level": {
          "description": "An error level",
          "example": "error",
          "type": "string"
        },
        "message": {
          "description": "An error message",
          "example": "Invalid authorization credentials",
          "type": "string"
        },
        "user_message": {
          "description": "Some more details about the error",
          "example": "The session has expired or is invalid",
          "type": "string"
        },
        "assetId": {
          "description": "An asset ID. Generated by Connect or by using the Store Customer Pay Statement API.",
          "example": "097545c5-1c2a-4f20-a5ef-77f0820344c9-2018601178",
          "type": "string"
        },
        "accountId": {
          "description": "An account ID",
          "example": "5011648377",
          "type": "string"
        }
      },
      "required": [
        "code"
      ]
    },
    "PartnerCredentials": {
      "title": "PartnerCredentials",
      "type": "object",
      "properties": {
        "partnerId": {
          "description": "Your Partner ID displayed in the [Developer Dashboard](https://developer.finicity.com/admin)",
          "example": "1234583871234",
          "type": "string"
        },
        "partnerSecret": {
          "description": "Your Partner Secret displayed in the [Developer Dashboard](https://developer.finicity.com/admin)",
          "example": "aqJ5Ic4SEVx2IgDQ6oR4",
          "type": "string"
        }
      },
      "required": [
        "partnerId",
        "partnerSecret"
      ]
    },
    "PartnerCredentialsWithNewSecret": {
      "title": "PartnerCredentialsWithNewSecret",
      "type": "object",
      "properties": {
        "partnerId": {
          "description": "Your Partner ID displayed in the [Developer Dashboard](https://developer.finicity.com/admin)",
          "example": "1234583871234",
          "type": "string"
        },
        "partnerSecret": {
          "description": "Your Partner Secret displayed in the [Developer Dashboard](https://developer.finicity.com/admin)",
          "example": "aqJ5Ic4SEVx2IgDQ6oR4",
          "type": "string"
        },
        "newPartnerSecret": {
          "description": "A new value for the Partner Secret",
          "example": "OrU7tjiA3tIspCgb85xV",
          "type": "string"
        }
      },
      "required": [
        "partnerId",
        "partnerSecret",
        "newPartnerSecret"
      ]
    },
    "AccessToken": {
      "title": "AccessToken",
      "description": "A temporary access token to be passed in the `Finicity-App-Token` HTTP header of all subsequent API requests",
      "type": "object",
      "properties": {
        "token": {
          "description": "The access token value",
          "example": "YBh22Sb9Es6e66Q7lWdt",
          "type": "string"
        }
      },
      "required": [
        "token"
      ]
    },
    "ConnectParameters": {
      "title": "ConnectParameters",
      "type": "object",
      "properties": {
        "language": {
          "description": "Generate a translated Connect URL link. \n\nSupported languages: \n* English (default)\n* Spanish (United States): `es`\n* French (Canada): `fr` or `fr-CA`",
          "example": "fr-CA",
          "type": "string"
        },
        "partnerId": {
          "description": "Your Partner ID displayed in the [Developer Dashboard](https://developer.finicity.com/admin)",
          "example": "1234583871234",
          "type": "string"
        },
        "customerId": {
          "description": "A customer ID. See Add Customer API for how to create a customer ID.",
          "example": "1005061234",
          "type": "string"
        },
        "consumerId": {
          "description": "A consumer ID. See Create Consumer API for how to create a consumer ID.",
          "example": "0bf46322c167b562e6cbed9d40e19a4c",
          "type": "string"
        },
        "redirectUri": {
          "description": "The URL that customers will be redirected to after completing Finicity Connect. Required unless Connect is embedded inside our application (iframe).",
          "example": "https://www.finicity.com/connect/",
          "type": "string"
        },
        "webhook": {
          "description": "The publicly available URL you want to be notified with events as the user progresses through the application. See [Connect Webhook Event](https://docs.finicity.com/connect-and-mvs-webhooks/) for event details.",
          "example": "https://webhook.site/8d4421a7-d1d1-4f01-bb08-5370aff0321b",
          "type": "string"
        },
        "webhookContentType": {
          "description": "The content type the webhook events will be sent in. Supported types: \"application/json\" and \"application/xml\".",
          "example": "application/json",
          "type": "string",
          "default": "application/json"
        },
        "webhookData": {
          "description": "Allows additional identifiable information to be inserted into the payload of connect webhook events. See: [Custom Webhooks](https://docs.finicity.com/custom-webhooks/).",
          "type": "object"
        },
        "webhookHeaders": {
          "description": "Allows additional identifiable information to be included as headers of connect webhook event. See: [Custom Webhooks](https://docs.finicity.com/custom-webhooks/).",
          "type": "object"
        },
        "optionalConsumerInfo": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/ConsumerInfo"
            },
            {
              "description": "The SSN and date of birth of a consumer"
            }
          ]
        },
        "singleUseUrl": {
          "description": "\"true\": The URL link expires after a Connect session successfully completes.\n\nNote: when the `singleUseUrl` and the `experience` parameters are passed in the same call, the `singleUseUrl` value overrides the `singleUseUrl` value configured in the `experience` parameter.",
          "example": true,
          "type": "boolean"
        },
        "experience": {
          "description": "The `experience` field allows you to customize:\n* Brand: color and logo\n* Icon: displayed on the \"Share your data\" page \n* Popular institutions: displayed on the Bank Search page \n* Report: the credit decisioning report to send when Connect completes. \n* MVS modules: financial, payroll, paystub\n\nNote: the Finicity sales engineers (SE) help you set up a default experience for your company when you migrate to Connect 2.0. For each additional experience you create thereafter, they'll give you a unique ID. See [Generate 2.0 Connect URL APIs](https://docs.finicity.com/migrate-to-connect-web-sdk-2-0/#migrate-connect-web-sdk-1).\n\nExperience values options: \n* \"default\": your default experience (must be defined) \n* GUID: the code for a different experience\n* Not defined: If you don't pass the experience parameter, then Connect's out of the box default experience (add accounts but no branding) is used, and the MVS modules will not run.",
          "example": "default",
          "type": "string"
        },
        "institutionSettings": {
          "description": "Advanced options for configuration of which institutions to display in. See [Institution Settings](https://docs.finicity.com/connect-institution-settings/).",
          "type": "object"
        },
        "fromDate": {
          "description": "The `fromDate` parameter is used when experiences are associated with a credit decisioning report and any other reports with transaction data. The value is in epoch time and must be 10 digits. Example: 1494449017. If it's greater than 10 digits, then the `fromDate` is set to the credit decisioning report's default `fromDate`.\n\nFor an experience that generates multiple reports, the `fromDate` gets passed to the reports that support it.\n\nHowever, Connect doesn't pass this parameter to the following reports:\n* Pay Statement Extraction Report \n* VOIE - Paystub (with TXVerify) Report \n* Statement Report \n* Verification of Income Report \n* VOIE - Payroll Report \n\nNote: this field isn't used if you're only collecting transaction data without a report.",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "reportCustomFields": {
          "description": "The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.\n\nDesignate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is \"true\" or \"false\".\n* \"true\": (default) display the custom field in the PDF report\n* \"false\": don't display the custom field in the PDF report\n\nFor an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.\n\nAll custom fields display in the Reseller Billing API.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportCustomField"
          }
        }
      },
      "required": [
        "partnerId",
        "customerId"
      ]
    },
    "LiteConnectParameters": {
      "title": "LiteConnectParameters",
      "type": "object",
      "properties": {
        "language": {
          "description": "Generate a translated Connect URL link. \n\nSupported languages: \n* English (default)\n* Spanish (United States): `es`\n* French (Canada): `fr` or `fr-CA`",
          "example": "fr-CA",
          "type": "string"
        },
        "partnerId": {
          "description": "Your Partner ID displayed in the [Developer Dashboard](https://developer.finicity.com/admin)",
          "example": "1234583871234",
          "type": "string"
        },
        "customerId": {
          "description": "A customer ID. See Add Customer API for how to create a customer ID.",
          "example": "1005061234",
          "type": "string"
        },
        "institutionId": {
          "description": "The ID of a financial institution, represented as a number",
          "example": 4222,
          "type": "integer",
          "format": "int64"
        },
        "redirectUri": {
          "description": "The URL that customers will be redirected to after completing Finicity Connect. Required unless Connect is embedded inside our application (iframe).",
          "example": "https://www.finicity.com/connect/",
          "type": "string"
        },
        "webhook": {
          "description": "The publicly available URL you want to be notified with events as the user progresses through the application. See [Connect Webhook Event](https://docs.finicity.com/connect-and-mvs-webhooks/) for event details.",
          "example": "https://webhook.site/8d4421a7-d1d1-4f01-bb08-5370aff0321b",
          "type": "string"
        },
        "webhookContentType": {
          "description": "The content type the webhook events will be sent in. Supported types: \"application/json\" and \"application/xml\".",
          "example": "application/json",
          "type": "string",
          "default": "application/json"
        },
        "webhookData": {
          "description": "Allows additional identifiable information to be inserted into the payload of connect webhook events. See: [Custom Webhooks](https://docs.finicity.com/custom-webhooks/).",
          "type": "object"
        },
        "webhookHeaders": {
          "description": "Allows additional identifiable information to be included as headers of connect webhook event. See: [Custom Webhooks](https://docs.finicity.com/custom-webhooks/).",
          "type": "object"
        },
        "experience": {
          "description": "The `experience` field allows you to customize:\n* Brand: color and logo\n* Icon: displayed on the \"Share your data\" page \n* Popular institutions: displayed on the Bank Search page \n* Report: the credit decisioning report to send when Connect completes. \n* MVS modules: financial, payroll, paystub\n\nNote: the Finicity sales engineers (SE) help you set up a default experience for your company when you migrate to Connect 2.0. For each additional experience you create thereafter, they'll give you a unique ID. See [Generate 2.0 Connect URL APIs](https://docs.finicity.com/migrate-to-connect-web-sdk-2-0/#migrate-connect-web-sdk-1).\n\nExperience values options: \n* \"default\": your default experience (must be defined) \n* GUID: the code for a different experience\n* Not defined: If you don't pass the experience parameter, then Connect's out of the box default experience (add accounts but no branding) is used, and the MVS modules will not run.",
          "example": "default",
          "type": "string"
        },
        "singleUseUrl": {
          "description": "\"true\": The URL link expires after a Connect session successfully completes.\n\nNote: when the `singleUseUrl` and the `experience` parameters are passed in the same call, the `singleUseUrl` value overrides the `singleUseUrl` value configured in the `experience` parameter.",
          "example": true,
          "type": "boolean"
        }
      },
      "required": [
        "partnerId",
        "customerId",
        "institutionId"
      ]
    },
    "FixConnectParameters": {
      "title": "FixConnectParameters",
      "type": "object",
      "properties": {
        "language": {
          "description": "Generate a translated Connect URL link. \n\nSupported languages: \n* English (default)\n* Spanish (United States): `es`\n* French (Canada): `fr` or `fr-CA`",
          "example": "fr-CA",
          "type": "string"
        },
        "partnerId": {
          "description": "Your Partner ID displayed in the [Developer Dashboard](https://developer.finicity.com/admin)",
          "example": "1234583871234",
          "type": "string"
        },
        "customerId": {
          "description": "A customer ID. See Add Customer API for how to create a customer ID.",
          "example": "1005061234",
          "type": "string"
        },
        "institutionLoginId": {
          "description": "An institution login ID (from the account record)",
          "example": "1007302745",
          "type": "string"
        },
        "redirectUri": {
          "description": "The URL that customers will be redirected to after completing Finicity Connect. Required unless Connect is embedded inside our application (iframe).",
          "example": "https://www.finicity.com/connect/",
          "type": "string"
        },
        "webhook": {
          "description": "The publicly available URL you want to be notified with events as the user progresses through the application. See [Connect Webhook Event](https://docs.finicity.com/connect-and-mvs-webhooks/) for event details.",
          "example": "https://webhook.site/8d4421a7-d1d1-4f01-bb08-5370aff0321b",
          "type": "string"
        },
        "webhookContentType": {
          "description": "The content type the webhook events will be sent in. Supported types: \"application/json\" and \"application/xml\".",
          "example": "application/json",
          "type": "string",
          "default": "application/json"
        },
        "webhookData": {
          "description": "Allows additional identifiable information to be inserted into the payload of connect webhook events. See: [Custom Webhooks](https://docs.finicity.com/custom-webhooks/).",
          "type": "object"
        },
        "webhookHeaders": {
          "description": "Allows additional identifiable information to be included as headers of connect webhook event. See: [Custom Webhooks](https://docs.finicity.com/custom-webhooks/).",
          "type": "object"
        },
        "experience": {
          "description": "The `experience` field allows you to customize:\n* Brand: color and logo\n* Icon: displayed on the \"Share your data\" page \n* Popular institutions: displayed on the Bank Search page \n* Report: the credit decisioning report to send when Connect completes. \n* MVS modules: financial, payroll, paystub\n\nNote: the Finicity sales engineers (SE) help you set up a default experience for your company when you migrate to Connect 2.0. For each additional experience you create thereafter, they'll give you a unique ID. See [Generate 2.0 Connect URL APIs](https://docs.finicity.com/migrate-to-connect-web-sdk-2-0/#migrate-connect-web-sdk-1).\n\nExperience values options: \n* \"default\": your default experience (must be defined) \n* GUID: the code for a different experience\n* Not defined: If you don't pass the experience parameter, then Connect's out of the box default experience (add accounts but no branding) is used, and the MVS modules will not run.",
          "example": "default",
          "type": "string"
        },
        "singleUseUrl": {
          "description": "\"true\": The URL link expires after a Connect session successfully completes.\n\nNote: when the `singleUseUrl` and the `experience` parameters are passed in the same call, the `singleUseUrl` value overrides the `singleUseUrl` value configured in the `experience` parameter.",
          "example": true,
          "type": "boolean"
        }
      },
      "required": [
        "partnerId",
        "customerId",
        "institutionLoginId"
      ]
    },
    "ConnectEmailParameters": {
      "title": "ConnectEmailParameters",
      "type": "object",
      "properties": {
        "language": {
          "description": "Generate a translated Connect URL link. \n\nSupported languages: \n* English (default)\n* Spanish (United States): `es`\n* French (Canada): `fr` or `fr-CA`",
          "example": "fr-CA",
          "type": "string"
        },
        "partnerId": {
          "description": "Your Partner ID displayed in the [Developer Dashboard](https://developer.finicity.com/admin)",
          "example": "1234583871234",
          "type": "string"
        },
        "customerId": {
          "description": "A customer ID. See Add Customer API for how to create a customer ID.",
          "example": "1005061234",
          "type": "string"
        },
        "consumerId": {
          "description": "A consumer ID. See Create Consumer API for how to create a consumer ID.",
          "example": "0bf46322c167b562e6cbed9d40e19a4c",
          "type": "string"
        },
        "redirectUri": {
          "description": "The URL that customers will be redirected to after completing Finicity Connect. Required unless Connect is embedded inside our application (iframe).",
          "example": "https://www.finicity.com/connect/",
          "type": "string"
        },
        "webhook": {
          "description": "The publicly available URL you want to be notified with events as the user progresses through the application. See [Connect Webhook Event](https://docs.finicity.com/connect-and-mvs-webhooks/) for event details.",
          "example": "https://webhook.site/8d4421a7-d1d1-4f01-bb08-5370aff0321b",
          "type": "string"
        },
        "webhookContentType": {
          "description": "The content type the webhook events will be sent in. Supported types: \"application/json\" and \"application/xml\".",
          "example": "application/json",
          "type": "string",
          "default": "application/json"
        },
        "webhookData": {
          "description": "Allows additional identifiable information to be inserted into the payload of connect webhook events. See: [Custom Webhooks](https://docs.finicity.com/custom-webhooks/).",
          "type": "object"
        },
        "webhookHeaders": {
          "description": "Allows additional identifiable information to be included as headers of connect webhook event. See: [Custom Webhooks](https://docs.finicity.com/custom-webhooks/).",
          "type": "object"
        },
        "institutionSettings": {
          "description": "Advanced options for configuration of which institutions to display in. See [Institution Settings](https://docs.finicity.com/connect-institution-settings/).",
          "type": "object"
        },
        "email": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/EmailOptions"
            },
            {
              "description": "Configuration for the Connect email's sent to customers"
            }
          ]
        },
        "experience": {
          "description": "The `experience` field allows you to customize:\n* Brand: color and logo\n* Icon: displayed on the \"Share your data\" page \n* Popular institutions: displayed on the Bank Search page \n* Report: the credit decisioning report to send when Connect completes. \n* MVS modules: financial, payroll, paystub\n\nNote: the Finicity sales engineers (SE) help you set up a default experience for your company when you migrate to Connect 2.0. For each additional experience you create thereafter, they'll give you a unique ID. See [Generate 2.0 Connect URL APIs](https://docs.finicity.com/migrate-to-connect-web-sdk-2-0/#migrate-connect-web-sdk-1).\n\nExperience values options: \n* \"default\": your default experience (must be defined) \n* GUID: the code for a different experience\n* Not defined: If you don't pass the experience parameter, then Connect's out of the box default experience (add accounts but no branding) is used, and the MVS modules will not run.",
          "example": "default",
          "type": "string"
        },
        "singleUseUrl": {
          "description": "\"true\": The URL link expires after a Connect session successfully completes.\n\nNote: when the `singleUseUrl` and the `experience` parameters are passed in the same call, the `singleUseUrl` value overrides the `singleUseUrl` value configured in the `experience` parameter.",
          "example": true,
          "type": "boolean"
        },
        "fromDate": {
          "description": "The `fromDate` parameter is used when experiences are associated with a credit decisioning report and any other reports with transaction data. The value is in epoch time and must be 10 digits. Example: 1494449017. If it's greater than 10 digits, then the `fromDate` is set to the credit decisioning report's default `fromDate`.\n\nFor an experience that generates multiple reports, the `fromDate` gets passed to the reports that support it.\n\nHowever, Connect doesn't pass this parameter to the following reports:\n* Pay Statement Extraction Report \n* VOIE - Paystub (with TXVerify) Report \n* Statement Report \n* Verification of Income Report \n* VOIE - Payroll Report \n\nNote: this field isn't used if you're only collecting transaction data without a report.",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "reportCustomFields": {
          "description": "The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.\n\nDesignate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is \"true\" or \"false\".\n* \"true\": (default) display the custom field in the PDF report\n* \"false\": don't display the custom field in the PDF report\n\nFor an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.\n\nAll custom fields display in the Reseller Billing API.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportCustomField"
          }
        },
        "optionalConsumerInfo": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/ConsumerInfo"
            },
            {
              "description": "The SSN and date of birth of a consumer"
            }
          ]
        }
      },
      "required": [
        "partnerId",
        "customerId",
        "consumerId",
        "email"
      ]
    },
    "ConnectJointBorrowerParameters": {
      "title": "ConnectJointBorrowerParameters",
      "type": "object",
      "properties": {
        "language": {
          "description": "Generate a translated Connect URL link. \n\nSupported languages: \n* English (default)\n* Spanish (United States): `es`\n* French (Canada): `fr` or `fr-CA`",
          "example": "fr-CA",
          "type": "string"
        },
        "partnerId": {
          "description": "Your Partner ID displayed in the [Developer Dashboard](https://developer.finicity.com/admin)",
          "example": "1234583871234",
          "type": "string"
        },
        "borrowers": {
          "description": "(MVS) Array of borrowers to pass the primary and joint borrower's customer and consumer IDs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Borrower"
          }
        },
        "redirectUri": {
          "description": "The URL that customers will be redirected to after completing Finicity Connect. Required unless Connect is embedded inside our application (iframe).",
          "example": "https://www.finicity.com/connect/",
          "type": "string"
        },
        "webhook": {
          "description": "The publicly available URL you want to be notified with events as the user progresses through the application. See [Connect Webhook Event](https://docs.finicity.com/connect-and-mvs-webhooks/) for event details.",
          "example": "https://webhook.site/8d4421a7-d1d1-4f01-bb08-5370aff0321b",
          "type": "string"
        },
        "webhookContentType": {
          "description": "The content type the webhook events will be sent in. Supported types: \"application/json\" and \"application/xml\".",
          "example": "application/json",
          "type": "string",
          "default": "application/json"
        },
        "webhookData": {
          "description": "Allows additional identifiable information to be inserted into the payload of connect webhook events. See: [Custom Webhooks](https://docs.finicity.com/custom-webhooks/).",
          "type": "object"
        },
        "webhookHeaders": {
          "description": "Allows additional identifiable information to be included as headers of connect webhook event. See: [Custom Webhooks](https://docs.finicity.com/custom-webhooks/).",
          "type": "object"
        },
        "institutionSettings": {
          "description": "Advanced options for configuration of which institutions to display in. See [Institution Settings](https://docs.finicity.com/connect-institution-settings/).",
          "type": "object"
        },
        "experience": {
          "description": "The `experience` field allows you to customize:\n* Brand: color and logo\n* Icon: displayed on the \"Share your data\" page \n* Popular institutions: displayed on the Bank Search page \n* Report: the credit decisioning report to send when Connect completes. \n* MVS modules: financial, payroll, paystub\n\nNote: the Finicity sales engineers (SE) help you set up a default experience for your company when you migrate to Connect 2.0. For each additional experience you create thereafter, they'll give you a unique ID. See [Generate 2.0 Connect URL APIs](https://docs.finicity.com/migrate-to-connect-web-sdk-2-0/#migrate-connect-web-sdk-1).\n\nExperience values options: \n* \"default\": your default experience (must be defined) \n* GUID: the code for a different experience\n* Not defined: If you don't pass the experience parameter, then Connect's out of the box default experience (add accounts but no branding) is used, and the MVS modules will not run.",
          "example": "default",
          "type": "string"
        },
        "fromDate": {
          "description": "The `fromDate` parameter is used when experiences are associated with a credit decisioning report and any other reports with transaction data. The value is in epoch time and must be 10 digits. Example: 1494449017. If it's greater than 10 digits, then the `fromDate` is set to the credit decisioning report's default `fromDate`.\n\nFor an experience that generates multiple reports, the `fromDate` gets passed to the reports that support it.\n\nHowever, Connect doesn't pass this parameter to the following reports:\n* Pay Statement Extraction Report \n* VOIE - Paystub (with TXVerify) Report \n* Statement Report \n* Verification of Income Report \n* VOIE - Payroll Report \n\nNote: this field isn't used if you're only collecting transaction data without a report.",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "reportCustomFields": {
          "description": "The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.\n\nDesignate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is \"true\" or \"false\".\n* \"true\": (default) display the custom field in the PDF report\n* \"false\": don't display the custom field in the PDF report\n\nFor an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.\n\nAll custom fields display in the Reseller Billing API.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportCustomField"
          }
        },
        "singleUseUrl": {
          "description": "\"true\": The URL link expires after a Connect session successfully completes.\n\nNote: when the `singleUseUrl` and the `experience` parameters are passed in the same call, the `singleUseUrl` value overrides the `singleUseUrl` value configured in the `experience` parameter.",
          "example": true,
          "type": "boolean"
        }
      },
      "required": [
        "partnerId",
        "borrowers"
      ]
    },
    "ConnectJointBorrowerEmailParameters": {
      "title": "ConnectJointBorrowerEmailParameters",
      "type": "object",
      "properties": {
        "language": {
          "description": "Generate a translated Connect URL link. \n\nSupported languages: \n* English (default)\n* Spanish (United States): `es`\n* French (Canada): `fr` or `fr-CA`",
          "example": "fr-CA",
          "type": "string"
        },
        "partnerId": {
          "description": "Your Partner ID displayed in the [Developer Dashboard](https://developer.finicity.com/admin)",
          "example": "1234583871234",
          "type": "string"
        },
        "borrowers": {
          "description": "(MVS) Array of borrowers to pass the primary and joint borrower's customer and consumer IDs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Borrower"
          }
        },
        "redirectUri": {
          "description": "The URL that customers will be redirected to after completing Finicity Connect. Required unless Connect is embedded inside our application (iframe).",
          "example": "https://www.finicity.com/connect/",
          "type": "string"
        },
        "webhook": {
          "description": "The publicly available URL you want to be notified with events as the user progresses through the application. See [Connect Webhook Event](https://docs.finicity.com/connect-and-mvs-webhooks/) for event details.",
          "example": "https://webhook.site/8d4421a7-d1d1-4f01-bb08-5370aff0321b",
          "type": "string"
        },
        "webhookContentType": {
          "description": "The content type the webhook events will be sent in. Supported types: \"application/json\" and \"application/xml\".",
          "example": "application/json",
          "type": "string",
          "default": "application/json"
        },
        "webhookData": {
          "description": "Allows additional identifiable information to be inserted into the payload of connect webhook events. See: [Custom Webhooks](https://docs.finicity.com/custom-webhooks/).",
          "type": "object"
        },
        "webhookHeaders": {
          "description": "Allows additional identifiable information to be included as headers of connect webhook event. See: [Custom Webhooks](https://docs.finicity.com/custom-webhooks/).",
          "type": "object"
        },
        "institutionSettings": {
          "description": "Advanced options for configuration of which institutions to display in. See [Institution Settings](https://docs.finicity.com/connect-institution-settings/).",
          "type": "object"
        },
        "email": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/EmailOptions"
            },
            {
              "description": "Configuration for the Connect email's sent to customers"
            }
          ]
        },
        "experience": {
          "description": "The `experience` field allows you to customize:\n* Brand: color and logo\n* Icon: displayed on the \"Share your data\" page \n* Popular institutions: displayed on the Bank Search page \n* Report: the credit decisioning report to send when Connect completes. \n* MVS modules: financial, payroll, paystub\n\nNote: the Finicity sales engineers (SE) help you set up a default experience for your company when you migrate to Connect 2.0. For each additional experience you create thereafter, they'll give you a unique ID. See [Generate 2.0 Connect URL APIs](https://docs.finicity.com/migrate-to-connect-web-sdk-2-0/#migrate-connect-web-sdk-1).\n\nExperience values options: \n* \"default\": your default experience (must be defined) \n* GUID: the code for a different experience\n* Not defined: If you don't pass the experience parameter, then Connect's out of the box default experience (add accounts but no branding) is used, and the MVS modules will not run.",
          "example": "default",
          "type": "string"
        },
        "fromDate": {
          "description": "The `fromDate` parameter is used when experiences are associated with a credit decisioning report and any other reports with transaction data. The value is in epoch time and must be 10 digits. Example: 1494449017. If it's greater than 10 digits, then the `fromDate` is set to the credit decisioning report's default `fromDate`.\n\nFor an experience that generates multiple reports, the `fromDate` gets passed to the reports that support it.\n\nHowever, Connect doesn't pass this parameter to the following reports:\n* Pay Statement Extraction Report \n* VOIE - Paystub (with TXVerify) Report \n* Statement Report \n* Verification of Income Report \n* VOIE - Payroll Report \n\nNote: this field isn't used if you're only collecting transaction data without a report.",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "reportCustomFields": {
          "description": "The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.\n\nDesignate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is \"true\" or \"false\".\n* \"true\": (default) display the custom field in the PDF report\n* \"false\": don't display the custom field in the PDF report\n\nFor an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.\n\nAll custom fields display in the Reseller Billing API.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportCustomField"
          }
        },
        "singleUseUrl": {
          "description": "\"true\": The URL link expires after a Connect session successfully completes.\n\nNote: when the `singleUseUrl` and the `experience` parameters are passed in the same call, the `singleUseUrl` value overrides the `singleUseUrl` value configured in the `experience` parameter.",
          "example": true,
          "type": "boolean"
        }
      },
      "required": [
        "partnerId",
        "borrowers",
        "email",
        "experience"
      ]
    },
    "Borrower": {
      "title": "Borrower",
      "type": "object",
      "properties": {
        "customerId": {
          "description": "A customer ID. See Add Customer API for how to create a customer ID.",
          "example": "1005061234",
          "type": "string"
        },
        "consumerId": {
          "description": "A consumer ID. See Create Consumer API for how to create a consumer ID.",
          "example": "0bf46322c167b562e6cbed9d40e19a4c",
          "type": "string"
        },
        "type": {
          "description": "\"primary\" or \"jointBorrower\"",
          "example": "primary",
          "type": "string"
        },
        "optionalConsumerInfo": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/ConsumerInfo"
            },
            {
              "description": "The SSN and date of birth of a consumer"
            }
          ]
        }
      },
      "required": [
        "customerId",
        "consumerId",
        "type"
      ]
    },
    "ConsumerInfo": {
      "title": "ConsumerInfo",
      "description": "The SSN and date of birth of a consumer",
      "type": "object",
      "properties": {
        "ssn": {
          "description": "A full SSN without hyphens",
          "example": "999999999",
          "type": "string"
        },
        "dob": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "ssn"
      ]
    },
    "VOAReportConstraints": {
      "title": "VOAReportConstraints",
      "type": "object",
      "properties": {
        "accountIds": {
          "description": "A whitespace-separated list of account IDs to be included in the report (all accounts will be included if not set)",
          "example": "5011648377 5011648378 5011648379",
          "type": "string"
        },
        "reportCustomFields": {
          "description": "The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.\n\nDesignate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is \"true\" or \"false\".\n* \"true\": (default) display the custom field in the PDF report\n* \"false\": don't display the custom field in the PDF report\n\nFor an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.\n\nAll custom fields display in the Reseller Billing API.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportCustomField"
          }
        },
        "showNsf": {
          "description": "Include the non-sufficient funds (NSF) summary JSON and the NSF summary PDF section in the report. Data included:\n* Account\n\n* Total number of NSF funds\n\n* Days since the most recent NFS funds fee",
          "example": false,
          "type": "boolean"
        },
        "fromDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "VOAReportConstraintsOut": {
      "title": "VOAReportConstraintsOut",
      "type": "object",
      "properties": {
        "accountIds": {
          "description": "An array of account IDs to be included in the report (all accounts will be included if not set)",
          "example": [
            "5011648377",
            "5011648378",
            "5011648379"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reportCustomFields": {
          "description": "The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.\n\nDesignate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is \"true\" or \"false\".\n* \"true\": (default) display the custom field in the PDF report\n* \"false\": don't display the custom field in the PDF report\n\nFor an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.\n\nAll custom fields display in the Reseller Billing API.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportCustomField"
          }
        },
        "showNsf": {
          "description": "Include the non-sufficient funds (NSF) summary JSON and the NSF summary PDF section in the report. Data included:\n* Account\n\n* Total number of NSF funds\n\n* Days since the most recent NFS funds fee",
          "example": false,
          "type": "boolean"
        },
        "fromDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "VOAWithIncomeReportConstraints": {
      "title": "VOAWithIncomeReportConstraints",
      "type": "object",
      "properties": {
        "accountIds": {
          "description": "A whitespace-separated list of account IDs to be included in the report (all accounts will be included if not set)",
          "example": "5011648377 5011648378 5011648379",
          "type": "string"
        },
        "reportCustomFields": {
          "description": "The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.\n\nDesignate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is \"true\" or \"false\".\n* \"true\": (default) display the custom field in the PDF report\n* \"false\": don't display the custom field in the PDF report\n\nFor an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.\n\nAll custom fields display in the Reseller Billing API.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportCustomField"
          }
        },
        "showNsf": {
          "description": "Include the non-sufficient funds (NSF) summary JSON and the NSF summary PDF section in the report. Data included:\n* Account\n\n* Total number of NSF funds\n\n* Days since the most recent NFS funds fee",
          "example": false,
          "type": "boolean"
        },
        "fromDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "incomeStreamConfidenceMinimum": {
          "description": "Include income streams in the report, based on the income stream's confidence score. For example, Use the value 50 to include only income streams with a confidence score of 50 or higher.",
          "example": 50,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "VOAWithIncomeReportConstraintsOut": {
      "title": "VOAWithIncomeReportConstraintsOut",
      "type": "object",
      "properties": {
        "accountIds": {
          "description": "An array of account IDs to be included in the report (all accounts will be included if not set)",
          "example": [
            "5011648377",
            "5011648378",
            "5011648379"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reportCustomFields": {
          "description": "The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.\n\nDesignate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is \"true\" or \"false\".\n* \"true\": (default) display the custom field in the PDF report\n* \"false\": don't display the custom field in the PDF report\n\nFor an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.\n\nAll custom fields display in the Reseller Billing API.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportCustomField"
          }
        },
        "showNsf": {
          "description": "Include the non-sufficient funds (NSF) summary JSON and the NSF summary PDF section in the report. Data included:\n* Account\n\n* Total number of NSF funds\n\n* Days since the most recent NFS funds fee",
          "example": false,
          "type": "boolean"
        },
        "fromDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "incomeStreamConfidenceMinimum": {
          "description": "Include income streams in the report, based on the income stream's confidence score. For example, Use the value 50 to include only income streams with a confidence score of 50 or higher.",
          "example": 50,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PrequalificationReportConstraints": {
      "title": "PrequalificationReportConstraints",
      "type": "object",
      "properties": {
        "accountIds": {
          "description": "A whitespace-separated list of account IDs to be included in the report (all accounts will be included if not set)",
          "example": "5011648377 5011648378 5011648379",
          "type": "string"
        },
        "reportCustomFields": {
          "description": "The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.\n\nDesignate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is \"true\" or \"false\".\n* \"true\": (default) display the custom field in the PDF report\n* \"false\": don't display the custom field in the PDF report\n\nFor an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.\n\nAll custom fields display in the Reseller Billing API.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportCustomField"
          }
        },
        "showNsf": {
          "description": "Include the non-sufficient funds (NSF) summary JSON and the NSF summary PDF section in the report. Data included:\n* Account\n\n* Total number of NSF funds\n\n* Days since the most recent NFS funds fee",
          "example": false,
          "type": "boolean"
        },
        "fromDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "PrequalificationReportConstraintsOut": {
      "title": "PrequalificationReportConstraintsOut",
      "type": "object",
      "properties": {
        "accountIds": {
          "description": "An array of account IDs to be included in the report (all accounts will be included if not set)",
          "example": [
            "5011648377",
            "5011648378",
            "5011648379"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reportCustomFields": {
          "description": "The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.\n\nDesignate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is \"true\" or \"false\".\n* \"true\": (default) display the custom field in the PDF report\n* \"false\": don't display the custom field in the PDF report\n\nFor an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.\n\nAll custom fields display in the Reseller Billing API.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportCustomField"
          }
        },
        "showNsf": {
          "description": "Include the non-sufficient funds (NSF) summary JSON and the NSF summary PDF section in the report. Data included:\n* Account\n\n* Total number of NSF funds\n\n* Days since the most recent NFS funds fee",
          "example": false,
          "type": "boolean"
        },
        "fromDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "VOIReportConstraints": {
      "title": "VOIReportConstraints",
      "type": "object",
      "properties": {
        "accountIds": {
          "description": "A whitespace-separated list of account IDs to be included in the report (all accounts will be included if not set)",
          "example": "5011648377 5011648378 5011648379",
          "type": "string"
        },
        "reportCustomFields": {
          "description": "The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.\n\nDesignate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is \"true\" or \"false\".\n* \"true\": (default) display the custom field in the PDF report\n* \"false\": don't display the custom field in the PDF report\n\nFor an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.\n\nAll custom fields display in the Reseller Billing API.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportCustomField"
          }
        },
        "fromDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "incomeStreamConfidenceMinimum": {
          "description": "Include income streams in the report, based on the income stream's confidence score. For example, Use the value 50 to include only income streams with a confidence score of 50 or higher.",
          "example": 50,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "VOIReportConstraintsOut": {
      "title": "VOIReportConstraintsOut",
      "type": "object",
      "properties": {
        "accountIds": {
          "description": "An array of account IDs to be included in the report (all accounts will be included if not set)",
          "example": [
            "5011648377",
            "5011648378",
            "5011648379"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reportCustomFields": {
          "description": "The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.\n\nDesignate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is \"true\" or \"false\".\n* \"true\": (default) display the custom field in the PDF report\n* \"false\": don't display the custom field in the PDF report\n\nFor an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.\n\nAll custom fields display in the Reseller Billing API.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportCustomField"
          }
        },
        "fromDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "incomeStreamConfidenceMinimum": {
          "description": "Include income streams in the report, based on the income stream's confidence score. For example, Use the value 50 to include only income streams with a confidence score of 50 or higher.",
          "example": 50,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ReportCustomField": {
      "title": "ReportCustomField",
      "type": "object",
      "properties": {
        "label": {
          "description": "The name of the custom field",
          "example": "loanID",
          "type": "string"
        },
        "value": {
          "description": "The value of the custom field",
          "example": "123456",
          "type": "string"
        },
        "shown": {
          "description": "If the custom field will show on the PDF or not",
          "example": true,
          "type": "boolean"
        }
      }
    },
    "ConnectUrl": {
      "title": "ConnectUrl",
      "description": "A Connect URL object",
      "type": "object",
      "properties": {
        "link": {
          "description": "A generated Connect URL",
          "example": "https://connect2.finicity.com?customerId=5025024821&institutionId=102105&origin=url&partnerId=2445583925753&signature=b5667164db7a9a0007b59267785c996ca3bc9ce97f2e72c98099cead76edfad9&timestamp=1648050761908&ttl=1648057961908&type=lite&webhookContentType=application%2Fjson",
          "type": "string"
        }
      },
      "required": [
        "link"
      ]
    },
    "ConnectEmailUrl": {
      "title": "ConnectEmailUrl",
      "type": "object",
      "properties": {
        "link": {
          "description": "A generated Connect URL",
          "example": "https://connect2.finicity.com?customerId=5025024821&institutionId=102105&origin=url&partnerId=2445583925753&signature=b5667164db7a9a0007b59267785c996ca3bc9ce97f2e72c98099cead76edfad9&timestamp=1648050761908&ttl=1648057961908&type=lite&webhookContentType=application%2Fjson",
          "type": "string"
        },
        "emailConfig": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/EmailOptions"
            },
            {
              "description": "Configuration for the Connect email's sent to customers"
            }
          ]
        }
      },
      "required": [
        "link",
        "emailConfig"
      ]
    },
    "EmailOptions": {
      "title": "EmailOptions",
      "description": "Configuration for the Connect email's sent to customers",
      "type": "object",
      "properties": {
        "to": {
          "description": "The email address for the customer receiving the Connect email",
          "example": "alex.salido@finicity.com",
          "type": "string"
        },
        "from": {
          "description": "The name of a person or business sending the Connect email",
          "example": "test.lender@test.com",
          "type": "string"
        },
        "supportPhone": {
          "description": "The support phone number listed in the email",
          "example": "800-555-5555",
          "type": "string"
        },
        "subject": {
          "description": "The subject line of the email. The default is \"Verify your Financial Information\".",
          "example": "Verify your income",
          "type": "string"
        },
        "firstName": {
          "description": "The first name of the customer or both names of the customers for joint borrowers. Example: \"Marvin and Jenny\".",
          "example": "Bob",
          "type": "string"
        },
        "institutionName": {
          "description": "The name of your company",
          "example": "Acme Lending",
          "type": "string"
        },
        "institutionAddress": {
          "description": "The institution address to appear in the footer of the email",
          "example": "222 Winipeg Drive SLC UT, 84109",
          "type": "string"
        },
        "signature": {
          "description": "A signature for the email",
          "example": [
            "Cindy Mayfield",
            "Senior Loan Officer",
            "Direct 123-456-7890"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "to"
      ]
    },
    "NewCustomer": {
      "title": "NewCustomer",
      "description": "A new customer to be enrolled",
      "type": "object",
      "properties": {
        "username": {
          "description": "The customer's username, assigned by the partner (a unique identifier), following these rules: minimum 6 characters maximum 255 characters any mix of uppercase, lowercase, numeric, and non-alphabet special characters ! @ . # $ % & * _ – + the use of email in this field is discouraged it is recommended to use a unique non-email identifier. Use of special characters may result in an error (e.g. í, ü, etc.). Usernames are unique. A username used in [Test Drive](https://signup.finicity.com/) can't be reused in other plans.",
          "example": "customerusername1",
          "type": "string"
        },
        "firstName": {
          "description": "First name(s) / given name(s)",
          "example": "John",
          "type": "string"
        },
        "lastName": {
          "description": "Last name(s) / surname(s)",
          "example": "Smith",
          "type": "string"
        },
        "applicationId": {
          "description": "`applicationId` value returned from the Get App Registration Status API and the partner assign the customers to. This cannot be changed once set. Only applicable in cases of partners with multiple registered applications. If the partner only has one app, this can usually be omitted. This field is populated after the app is in a status approved.",
          "example": "123456789",
          "type": "string"
        }
      },
      "required": [
        "username"
      ]
    },
    "CustomerUpdate": {
      "title": "CustomerUpdate",
      "description": "Represent an update to customer fields",
      "type": "object",
      "properties": {
        "firstName": {
          "description": "First name(s) / given name(s)",
          "example": "John",
          "type": "string"
        },
        "lastName": {
          "description": "Last name(s) / surname(s)",
          "example": "Smith",
          "type": "string"
        }
      }
    },
    "CreatedCustomer": {
      "title": "CreatedCustomer",
      "description": "A new customer that was just enrolled",
      "type": "object",
      "properties": {
        "id": {
          "description": "A customer ID. See Add Customer API for how to create a customer ID.",
          "example": "1005061234",
          "type": "string"
        },
        "username": {
          "description": "The customer's username, assigned by the partner (a unique identifier), following these rules: minimum 6 characters maximum 255 characters any mix of uppercase, lowercase, numeric, and non-alphabet special characters ! @ . # $ % & * _ – + the use of email in this field is discouraged it is recommended to use a unique non-email identifier. Use of special characters may result in an error (e.g. í, ü, etc.). Usernames are unique. A username used in [Test Drive](https://signup.finicity.com/) can't be reused in other plans.",
          "example": "customerusername1",
          "type": "string"
        },
        "createdDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "id",
        "username",
        "createdDate"
      ]
    },
    "Customer": {
      "title": "Customer",
      "description": "A finicity customer record",
      "type": "object",
      "properties": {
        "id": {
          "description": "A customer ID. See Add Customer API for how to create a customer ID.",
          "example": "1005061234",
          "type": "string"
        },
        "username": {
          "description": "The customer's username, assigned by the partner (a unique identifier), following these rules: minimum 6 characters maximum 255 characters any mix of uppercase, lowercase, numeric, and non-alphabet special characters ! @ . # $ % & * _ – + the use of email in this field is discouraged it is recommended to use a unique non-email identifier. Use of special characters may result in an error (e.g. í, ü, etc.). Usernames are unique. A username used in [Test Drive](https://signup.finicity.com/) can't be reused in other plans.",
          "example": "customerusername1",
          "type": "string"
        },
        "firstName": {
          "description": "First name(s) / given name(s)",
          "example": "John",
          "type": "string"
        },
        "lastName": {
          "description": "Last name(s) / surname(s)",
          "example": "Smith",
          "type": "string"
        },
        "type": {
          "description": "The type of customer (\"active\" or \"testing\" or \"\" for all types)",
          "example": "active",
          "type": "string"
        },
        "createdDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": "1607450357",
          "type": "string"
        },
        "lastModifiedDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": "1607450357",
          "type": "string"
        }
      },
      "required": [
        "id",
        "username",
        "type",
        "createdDate"
      ]
    },
    "CustomerWithAppData": {
      "title": "CustomerWithAppData",
      "description": "A finicity customer record with application info",
      "type": "object",
      "properties": {
        "id": {
          "description": "A customer ID. See Add Customer API for how to create a customer ID.",
          "example": "1005061234",
          "type": "string"
        },
        "username": {
          "description": "The customer's username, assigned by the partner (a unique identifier), following these rules: minimum 6 characters maximum 255 characters any mix of uppercase, lowercase, numeric, and non-alphabet special characters ! @ . # $ % & * _ – + the use of email in this field is discouraged it is recommended to use a unique non-email identifier. Use of special characters may result in an error (e.g. í, ü, etc.). Usernames are unique. A username used in [Test Drive](https://signup.finicity.com/) can't be reused in other plans.",
          "example": "customerusername1",
          "type": "string"
        },
        "firstName": {
          "description": "First name(s) / given name(s)",
          "example": "John",
          "type": "string"
        },
        "lastName": {
          "description": "Last name(s) / surname(s)",
          "example": "Smith",
          "type": "string"
        },
        "type": {
          "description": "The type of customer (\"active\" or \"testing\" or \"\" for all types)",
          "example": "active",
          "type": "string"
        },
        "createdDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": "1607450357",
          "type": "string"
        },
        "lastModifiedDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": "1607450357",
          "type": "string"
        },
        "applicationId": {
          "description": "`applicationId` value returned from the Get App Registration Status API and the partner assign the customers to. This cannot be changed once set. Only applicable in cases of partners with multiple registered applications. If the partner only has one app, this can usually be omitted. This field is populated after the app is in a status approved.",
          "example": "123456789",
          "type": "string"
        },
        "applicationName": {
          "description": "The name of the application assigned to the customer",
          "example": "Awesome Budget App",
          "type": "string"
        }
      },
      "required": [
        "id",
        "username",
        "firstName",
        "lastName",
        "type",
        "createdDate",
        "applicationId",
        "applicationName"
      ]
    },
    "Customers": {
      "title": "Customers",
      "description": "A list of customers",
      "type": "object",
      "properties": {
        "found": {
          "description": "The total number of results matching search criteria",
          "example": 200,
          "type": "integer",
          "format": "int32"
        },
        "displaying": {
          "description": "The number of results returned",
          "example": 2,
          "type": "integer",
          "format": "int32"
        },
        "moreAvailable": {
          "description": "If the value of `moreAvailable` is \"true\", you can retrieve the next page of results by increasing the value of the start parameter in your next request:\"...&start=6&limit=5\"",
          "example": true,
          "type": "boolean"
        },
        "customers": {
          "description": "A list of customer records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Customer"
          }
        }
      },
      "required": [
        "found",
        "displaying",
        "moreAvailable",
        "customers"
      ]
    },
    "NewConsumer": {
      "title": "NewConsumer",
      "description": "A new consumer to be created",
      "type": "object",
      "properties": {
        "firstName": {
          "description": "First name(s) / given name(s)",
          "example": "John",
          "type": "string"
        },
        "lastName": {
          "description": "Last name(s) / surname(s)",
          "example": "Smith",
          "type": "string"
        },
        "address": {
          "description": "A street address",
          "example": "434 W Ascension Way",
          "type": "string"
        },
        "city": {
          "description": "A city",
          "example": "Murray",
          "type": "string"
        },
        "state": {
          "description": "A state",
          "example": "UT",
          "type": "string"
        },
        "zip": {
          "description": "A ZIP code",
          "example": "84123",
          "type": "string"
        },
        "phone": {
          "description": "A phone number",
          "example": "1-800-986-3343",
          "type": "string"
        },
        "ssn": {
          "description": "A full SSN with or without hyphens",
          "example": "999-99-9999",
          "type": "string"
        },
        "birthday": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Birthday"
            },
            {
              "description": "A birth date"
            }
          ]
        },
        "email": {
          "description": "An email address",
          "example": "finicity@test.com",
          "type": "string"
        },
        "suffix": {
          "description": "A person suffix",
          "example": "Mr",
          "type": "string"
        }
      },
      "required": [
        "firstName",
        "lastName",
        "address",
        "city",
        "state",
        "zip",
        "phone",
        "ssn",
        "birthday"
      ]
    },
    "ConsumerUpdate": {
      "title": "ConsumerUpdate",
      "type": "object",
      "properties": {
        "firstName": {
          "description": "First name(s) / given name(s)",
          "example": "John",
          "type": "string"
        },
        "lastName": {
          "description": "Last name(s) / surname(s)",
          "example": "Smith",
          "type": "string"
        },
        "address": {
          "description": "A street address",
          "example": "434 W Ascension Way",
          "type": "string"
        },
        "city": {
          "description": "A city",
          "example": "Murray",
          "type": "string"
        },
        "state": {
          "description": "A state",
          "example": "UT",
          "type": "string"
        },
        "zip": {
          "description": "A ZIP code",
          "example": "84123",
          "type": "string"
        },
        "phone": {
          "description": "A phone number",
          "example": "1-800-986-3343",
          "type": "string"
        },
        "ssn": {
          "description": "A full SSN with or without hyphens",
          "example": "999-99-9999",
          "type": "string"
        },
        "birthday": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Birthday"
            },
            {
              "description": "A birth date"
            }
          ]
        },
        "email": {
          "description": "An email address",
          "example": "finicity@test.com",
          "type": "string"
        },
        "suffix": {
          "description": "A person suffix",
          "example": "Mr",
          "type": "string"
        }
      }
    },
    "CreatedConsumer": {
      "title": "CreatedConsumer",
      "description": "A consumer that was just created",
      "type": "object",
      "properties": {
        "id": {
          "description": "A consumer ID. See Create Consumer API for how to create a consumer ID.",
          "example": "0bf46322c167b562e6cbed9d40e19a4c",
          "type": "string"
        },
        "createdDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "customerId": {
          "description": "A customer ID represented as a number. See Add Customer API for how to create a customer ID.",
          "example": 1005061234,
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Consumer": {
      "title": "Consumer",
      "description": "A finicity consumer record",
      "type": "object",
      "properties": {
        "id": {
          "description": "A consumer ID. See Create Consumer API for how to create a consumer ID.",
          "example": "0bf46322c167b562e6cbed9d40e19a4c",
          "type": "string"
        },
        "firstName": {
          "description": "First name(s) / given name(s)",
          "example": "John",
          "type": "string"
        },
        "lastName": {
          "description": "Last name(s) / surname(s)",
          "example": "Smith",
          "type": "string"
        },
        "customerId": {
          "description": "A customer ID represented as a number. See Add Customer API for how to create a customer ID.",
          "example": 1005061234,
          "type": "integer",
          "format": "int64"
        },
        "address": {
          "description": "A street address",
          "example": "434 W Ascension Way",
          "type": "string"
        },
        "city": {
          "description": "A city",
          "example": "Murray",
          "type": "string"
        },
        "state": {
          "description": "A state",
          "example": "UT",
          "type": "string"
        },
        "zip": {
          "description": "A ZIP code",
          "example": "84123",
          "type": "string"
        },
        "phone": {
          "description": "A phone number",
          "example": "1-800-986-3343",
          "type": "string"
        },
        "ssn": {
          "description": "Last 4 digits of a SSN",
          "example": "9999",
          "type": "string"
        },
        "birthday": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Birthday"
            },
            {
              "description": "A birth date"
            }
          ]
        },
        "email": {
          "description": "An email address",
          "example": "finicity@test.com",
          "type": "string"
        },
        "createdDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "suffix": {
          "description": "A person suffix",
          "example": "Mr",
          "type": "string"
        }
      },
      "required": [
        "id",
        "firstName",
        "lastName",
        "customerId",
        "address",
        "city",
        "state",
        "zip",
        "phone",
        "ssn",
        "birthday",
        "email",
        "createdDate"
      ]
    },
    "AccountOwner": {
      "title": "AccountOwner",
      "description": "Owner of a customer account",
      "type": "object",
      "properties": {
        "ownerName": {
          "description": "The name of the account owner. Can be multiple account owners in one string. This is how the source data is returned from the institution.",
          "example": "John Smith",
          "type": "string"
        },
        "ownerAddress": {
          "description": "A street address",
          "example": "434 W Ascension Way",
          "type": "string"
        },
        "asOfDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "ownerName",
        "ownerAddress"
      ]
    },
    "CustomerAccounts": {
      "title": "CustomerAccounts",
      "description": "A list of customer accounts",
      "type": "object",
      "properties": {
        "accounts": {
          "description": "List of customer accounts",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerAccount"
          }
        }
      },
      "required": [
        "accounts"
      ]
    },
    "CustomerAccount": {
      "title": "CustomerAccount",
      "description": "An account represents a bank account such as a checking or savings that the customer has added via the Connect interface.",
      "type": "object",
      "properties": {
        "id": {
          "description": "An account ID",
          "example": "5011648377",
          "type": "string"
        },
        "number": {
          "description": "Use the `accountNumberDisplay` field. Starting July 1, 2021 the `number` field will sunset with limited support until April 1, 2022, at which time it will be deprecated (no longer available).",
          "example": "2000004444",
          "type": "string"
        },
        "accountNumberDisplay": {
          "description": "The account number from a financial institution in truncated format:\n* Last four digits: \"1234\"\n* Last four digits with suffix: \"1234-9\"\n* Full value for string accounts: \"john@gmail.com\"",
          "example": "1234-9",
          "type": "string"
        },
        "realAccountNumberLast4": {
          "description": "The last 4 digits of the ACH account number",
          "example": "5678",
          "type": "string"
        },
        "name": {
          "description": "The account name from the institution",
          "example": "Super Checking",
          "type": "string"
        },
        "balance": {
          "description": "The cleared balance of the account as of `balanceDate`",
          "example": 401.26,
          "type": "number",
          "format": "double"
        },
        "type": {
          "description": "The list of supported account types.\n* \"checking\": Standard checking\n* \"savings\": Standard savings\n* \"cd\": Certificates of deposit\n* \"moneyMarket\": Money Market\n* \"creditCard\": Standard credit cards\n* \"lineOfCredit\": Home equity, line of credit\n* \"investment\": Generic investment (no details)\n* \"investmentTaxDeferred\": Generic tax-advantaged investment (no details)\n* \"employeeStockPurchasePlan\": ESPP, Employee Stock Ownership Plans (ESOP), Stock Purchase Plans\n* \"ira\": Individual Retirement Account (not Rollover or Roth)\n* \"401k\": 401K Plan\n* \"roth\": Roth IRA, Roth 401K\n* \"403b\": 403B Plan\n* \"529plan\": 529 Plan (True value is 529)\n* \"rollover\": Rollover IRA\n* \"ugma\": Uniform Gifts to Minors Act\n* \"utma\": Uniform Transfers to Minors Act\n* \"keogh\": Keogh Plan\n* \"457plan\": 457 Plan (True value is 457)\n* \"401a\": 401A Plan\n* \"brokerageAccount\": Brokerage Account\n* \"educationSavings\": Education Savings Account that is not a 529\n* \"healthSavingsAccount\": HSA (Health Savings Accounts)\n* \"pension\": Pension\n* \"profitSharingPlan\": Profit Sharing Plan\n* \"roth401k\": Roth 401K\n* \"sepIRA\": Simplified Employee Pension IRA\n* \"simpleIRA\": Simple IRA\n* \"thriftSavingsPlan\": Thrift Savings Plan\n* \"variableAnnuity\": Variable Annuity\n* \"cryptocurrency\": Cryptocurrency Wallet, Cryptocurrency Account\n* \"mortgage\": Standard Mortgages\n* \"loan\": Auto loans, equity loans, other loans\n* \"studentLoan\": Student Loan\n* \"studentLoanGroup\": Student Loan Group\n* \"studentLoanAccount\": Student Loan Account",
          "example": "checking",
          "type": "string"
        },
        "aggregationStatusCode": {
          "description": "The status of the most recent aggregation attempt (see [Aggregation Status Codes](https://docs.finicity.com/aggregation-status-codes/)). Won't be present until you have run your first aggregation for the account.",
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "description": "\"pending\" during account discovery, always \"active\" following successful account activation",
          "example": "active",
          "type": "string"
        },
        "customerId": {
          "description": "A customer ID. See Add Customer API for how to create a customer ID.",
          "example": "1005061234",
          "type": "string"
        },
        "institutionId": {
          "description": "The ID of a financial institution",
          "example": "4222",
          "type": "string"
        },
        "balanceDate": {
          "description": "A timestamp showing when the balance was captured. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "aggregationSuccessDate": {
          "description": "A timestamp showing the last successful aggregation of the account. This will not be present until you have run your first aggregation for the account. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "aggregationAttemptDate": {
          "description": "A timestamp showing the last aggregation attempt, whether successful or not. This will not be present until you have run your first aggregation for the account. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "createdDate": {
          "description": "A timestamp showing when the account was added to the system. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "currency": {
          "description": "A currency code",
          "example": "USD",
          "type": "string"
        },
        "lastTransactionDate": {
          "description": "The date of the latest transaction on the account. This will not be present until you have run your first aggregation for the account. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "oldestTransactionDate": {
          "description": "The date of the oldest transaction in the transactions for the account. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "institutionLoginId": {
          "description": "An institution login ID (from the account record), represented as a number",
          "example": 1007302745,
          "type": "integer",
          "format": "int64"
        },
        "detail": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/CustomerAccountDetail"
            },
            {
              "description": "Additional customer account details. Not all data points will return for each account type. You can see the account type that each data point will return for in descriptions. The data point are also subject to availability by the institution."
            }
          ]
        },
        "position": {
          "description": "Investment holdings",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerAccountPosition"
          }
        },
        "displayPosition": {
          "description": "Display position of the account at the financial institution, \"1\" being the top listed account",
          "example": 2,
          "type": "integer",
          "format": "int32"
        },
        "parentAccount": {
          "description": "The assigned account ID for the account one level higher in the student loan account hierarchy",
          "example": "5011648377",
          "type": "string"
        }
      },
      "required": [
        "id",
        "number",
        "accountNumberDisplay",
        "name",
        "balance",
        "type",
        "status",
        "customerId",
        "institutionId",
        "balanceDate",
        "createdDate",
        "currency",
        "oldestTransactionDate",
        "institutionLoginId"
      ]
    },
    "CustomerAccountPosition": {
      "title": "CustomerAccountPosition",
      "description": "Details for investment account holdings",
      "type": "object",
      "properties": {
        "id": {
          "description": "The id of the investment position",
          "example": 454678080,
          "type": "integer",
          "format": "int64"
        },
        "description": {
          "description": "The description of the holding",
          "example": "DELTA AIR LINES INC",
          "type": "string"
        },
        "symbol": {
          "description": "The investment position's market ticker symbol",
          "example": "DAL",
          "type": "string"
        },
        "units": {
          "description": "The number of units of the holding",
          "example": 6.537,
          "type": "number",
          "format": "double"
        },
        "currentPrice": {
          "description": "The current price of the investment holding",
          "example": 41.585,
          "type": "number",
          "format": "double"
        },
        "securityName": {
          "description": "The security name for the investment holding",
          "example": "DELTA AIR LINES INC",
          "type": "string"
        },
        "transactionType": {
          "description": "The transaction type of the holding, such as cash, margin, and more",
          "example": "Margin",
          "type": "string"
        },
        "marketValue": {
          "description": "Market value of an investment position at the time of retrieval",
          "example": 271.84,
          "type": "number",
          "format": "double"
        },
        "costBasis": {
          "description": "The total cost of acquiring the security",
          "example": 190.01,
          "type": "number",
          "format": "double"
        },
        "status": {
          "description": "The status of the holding",
          "example": "A",
          "type": "string"
        },
        "currentPriceDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "securityType": {
          "description": "Type of security for the investment position",
          "example": "Stock",
          "type": "string"
        },
        "mfType": {
          "description": "Type of mutual fund, such as open ended",
          "example": "OPENEND",
          "type": "string"
        },
        "posType": {
          "description": "Fund type assigned by the FI (long or short)",
          "example": "Long",
          "type": "string"
        },
        "totalGLDollar": {
          "description": "Total gain and loss of the position at the time of aggregation in dollars",
          "example": 162742.9,
          "type": "number",
          "format": "double"
        },
        "totalGLPercent": {
          "description": "Total gain and loss of the position at the time of aggregation in percentage",
          "example": 68.89,
          "type": "number",
          "format": "double"
        },
        "optionStrikePrice": {
          "description": "The strike price of the option contract",
          "example": 50,
          "type": "number",
          "format": "double"
        },
        "optionType": {
          "description": "The type of option contract (PUT or CALL)",
          "example": "PUT",
          "type": "string"
        },
        "optionSharesPerContract": {
          "description": "The number of shares per option contract",
          "example": 100,
          "type": "number",
          "format": "double"
        },
        "optionExpireDate": {
          "description": "Expiration date of option",
          "example": "1644994800",
          "type": "string",
          "format": "date"
        },
        "fiAssetClass": {
          "description": "Financial Institution (FI) defined asset class (COMMON STOCK, COMNEQTY, EQUITY/STOCK, CMA-ISA, CONVERTIBLE PREFERREDS, CORPORATE BONDS, OTHER MONEY FUNDS, ALLOCATION FUNDS, CMA-TAXABLE, FOREIGNEQUITYADRS, COMMONSTOCK, PREFERRED STOCKS, STABLE VALUE, FOREIGN EQUITY ADRS)",
          "example": "COMNEQTY",
          "type": "string"
        },
        "assetClass": {
          "description": "An asset class is a grouping of comparable financial securities. These include equities (stocks), fixed income (bonds), and cash equivalent or money market instruments. (DOMESTICBOND, LARGESTOCK, INTLSTOCK, MONEYMRKT, OTHER)",
          "example": "INTLSTOCK",
          "type": "string"
        },
        "currencyRate": {
          "description": "Currency rate, ratio of currency to original currency",
          "example": 1,
          "type": "number",
          "format": "double"
        },
        "securityId": {
          "description": "The security ID of the transaction",
          "example": "25400W102",
          "type": "string"
        },
        "securityIdType": {
          "description": "The security type. This field is related to the `securityId` field. Possible values:\n* \"CUSIP\"\n\n* \"ISIN\"\n\n* \"SEDOL\"\n\n* \"SICC\"\n\n* \"VALOR\"\n\n* \"WKN\"",
          "example": "CUSIP",
          "type": "string"
        },
        "costBasisPerShare": {
          "description": "The per share cost of acquiring the security",
          "example": 13.38,
          "type": "number",
          "format": "double"
        },
        "subAccountType": {
          "description": "The subaccount's type, such as cash",
          "example": "CASH",
          "type": "string"
        },
        "securityCurrency": {
          "description": "Symbol for the currency that the account is being converted into",
          "example": "USD",
          "type": "string"
        },
        "todayGLDollar": {
          "description": "The current day's gain and loss of the position at the time of aggregation in dollars",
          "example": 16272.9,
          "type": "number",
          "format": "double"
        },
        "todayGLPercent": {
          "description": "The current day's gain and loss of the position at the time of aggregation in percentage",
          "example": 18.89,
          "type": "number",
          "format": "double"
        }
      }
    },
    "CustomerAccountDetail": {
      "title": "CustomerAccountDetail",
      "description": "Additional customer account details. Not all data points will return for each account type. You can see the account type that each data point will return for in descriptions. The data point are also subject to availability by the institution.",
      "type": "object",
      "properties": {
        "dateAsOf": {
          "description": "(All Account Types) Most recent date of the following information. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "availableBalanceAmount": {
          "description": "(Checking/Savings/CD/MoneyMarket) and (Mortgage/Loan) The available balance (typically the current balance with adjustments for any pending transactions)",
          "example": 5678.78,
          "type": "number",
          "format": "double"
        },
        "openDate": {
          "description": "(Checking/Savings/CD/MoneyMarket) Date when account was opened. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "periodStartDate": {
          "description": "(Checking/Savings/CD/MoneyMarket) Start date of period. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "periodEndDate": {
          "description": "End date of period. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "periodInterestRate": {
          "description": "(Checking/Savings/CD/MoneyMarket) The APY for the current period interest rate",
          "example": 13.245,
          "type": "number",
          "format": "double"
        },
        "periodDepositAmount": {
          "description": "(Checking/Savings/CD/MoneyMarket) Amount deposited in period",
          "example": 2356.56,
          "type": "number",
          "format": "double"
        },
        "periodInterestAmount": {
          "description": "(Checking/Savings/CD/MoneyMarket) Interest accrued during the current period",
          "example": 1234.56,
          "type": "number",
          "format": "double"
        },
        "interestYtdAmount": {
          "description": "(Checking/Savings/CD/MoneyMarket) Interest accrued year-to-date",
          "example": 1056.67,
          "type": "number",
          "format": "double"
        },
        "interestPriorYtdAmount": {
          "description": "(Checking/Savings/CD/MoneyMarket) Interest earned in prior year",
          "example": 3056.79,
          "type": "number",
          "format": "double"
        },
        "maturityDate": {
          "description": "(Checking/Savings/CD/MoneyMarket) Maturity date of account type. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "interestRate": {
          "description": "(Credit Card/Line Of Credit) and (Mortgage/Loan) The account's current interest rate",
          "example": "15.789",
          "type": "string"
        },
        "creditAvailableAmount": {
          "description": "(Credit Card/Line Of Credit) The available credit (typically the credit limit minus the current balance)",
          "example": 3000,
          "type": "number",
          "format": "double"
        },
        "creditMaxAmount": {
          "description": "(Credit Card/Line Of Credit) The account's credit limit",
          "example": 7000,
          "type": "number",
          "format": "double"
        },
        "cashAdvanceAvailableAmount": {
          "description": "(Credit Card/Line Of Credit) Currently available cash advance",
          "example": 2000,
          "type": "number",
          "format": "double"
        },
        "cashAdvanceMaxAmount": {
          "description": "(Credit Card/Line Of Credit) Maximum cash advance amount",
          "example": 3000,
          "type": "number",
          "format": "double"
        },
        "cashAdvanceBalance": {
          "description": "(Credit Card/Line Of Credit) Balance of current cash advance",
          "example": 1000,
          "type": "number",
          "format": "double"
        },
        "cashAdvanceInterestRate": {
          "description": "(Credit Card/Line Of Credit) Interest rate for cash advances",
          "example": 21.5,
          "type": "number",
          "format": "double"
        },
        "currentBalance": {
          "description": "(Credit Card/Line Of Credit) and (Investment) Current balance",
          "example": 5789.34,
          "type": "number",
          "format": "double"
        },
        "paymentMinAmount": {
          "description": "(Credit Card/Line Of Credit) and (Mortgage/Loan) Minimum payment due",
          "example": 456.78,
          "type": "number",
          "format": "double"
        },
        "paymentDueDate": {
          "description": "(Credit Card/Line Of Credit) Due date for the next payment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "previousBalance": {
          "description": "(Credit Card/Line Of Credit) Prior balance in last statement",
          "example": 1234.56,
          "type": "number",
          "format": "double"
        },
        "statementStartDate": {
          "description": "(Credit Card/Line Of Credit) Start date of statement period. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "statementEndDate": {
          "description": "(Credit Card/Line Of Credit) End date of statement period. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "statementPurchaseAmount": {
          "description": "(Credit Card/Line Of Credit) Purchase amount of statement period",
          "example": 2345.9,
          "type": "number",
          "format": "double"
        },
        "statementFinanceAmount": {
          "description": "(Credit Card/Line Of Credit) Finance amount of statement period",
          "example": 156.78,
          "type": "number",
          "format": "double"
        },
        "statementCreditAmount": {
          "description": "(Credit Card/Line Of Credit) Credit amount applied in statement period",
          "example": 345,
          "type": "number",
          "format": "double"
        },
        "rewardEarnedBalance": {
          "description": "(Credit Card/Line Of Credit) Earned reward balance",
          "example": 500,
          "type": "integer",
          "format": "int32"
        },
        "pastDueAmount": {
          "description": "(Credit Card/Line Of Credit) Balance past due",
          "example": 3688.99,
          "type": "number",
          "format": "double"
        },
        "lastPaymentAmount": {
          "description": "(Credit Card/Line Of Credit) and (Mortgage/Loan) The amount received in the last payment",
          "example": 567.89,
          "type": "number",
          "format": "double"
        },
        "lastPaymentDate": {
          "description": "(Credit Card/Line Of Credit) The date of the last payment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "statementCloseBalance": {
          "description": "(Credit Card/Line Of Credit) Balance of statement at close",
          "example": 2456.69,
          "type": "number",
          "format": "double"
        },
        "termOfMl": {
          "description": "(Mortgage/Loan) Length of loan in months",
          "example": "36",
          "type": "string"
        },
        "mlHolderName": {
          "description": "(Mortgage/Loan) Holder of the mortgage or loan",
          "example": "John Smith",
          "type": "string"
        },
        "description": {
          "description": "(Mortgage/Loan) Description of loan",
          "example": "a description",
          "type": "string"
        },
        "lateFeeAmount": {
          "description": "(Mortgage/Loan) Late fee charged",
          "example": 35,
          "type": "number",
          "format": "double"
        },
        "payoffAmount": {
          "description": "(Mortgage/Loan) The amount required to payoff the loan",
          "example": 45567.98,
          "type": "number",
          "format": "double"
        },
        "payoffAmountDate": {
          "description": "(Mortgage/Loan) Date of final payment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "originalMaturityDate": {
          "description": "(Mortgage/Loan) Original date of loan maturity. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "principalBalance": {
          "description": "(Mortgage/Loan) The principal balance",
          "example": 45056.7,
          "type": "number",
          "format": "double"
        },
        "escrowBalance": {
          "description": "(Mortgage/Loan) The escrow balance",
          "example": 2345.01,
          "type": "number",
          "format": "double"
        },
        "interestPeriod": {
          "description": "(Mortgage/Loan) Period of interest",
          "example": "monthly",
          "type": "string"
        },
        "initialMlAmount": {
          "description": "(Mortgage/Loan) Original loan amount",
          "example": 65000,
          "type": "number",
          "format": "double"
        },
        "initialMlDate": {
          "description": "(Mortgage/Loan) Original date of loan. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "nextPaymentPrincipalAmount": {
          "description": "(Mortgage/Loan) Amount towards principal in next payment",
          "example": 1256.67,
          "type": "number",
          "format": "double"
        },
        "nextPaymentInterestAmount": {
          "description": "(Mortgage/Loan) Amount of interest in next payment",
          "example": 234.56,
          "type": "number",
          "format": "double"
        },
        "nextPayment": {
          "description": "(Mortgage/Loan) Minimum payment due",
          "example": 1578,
          "type": "number",
          "format": "double"
        },
        "nextPaymentDate": {
          "description": "(Mortgage/Loan) Due date for the next payment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "lastPaymentDueDate": {
          "description": "(Mortgage/Loan) Due date of last payment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "lastPaymentReceiveDate": {
          "description": "(Mortgage/Loan) The date of the last payment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "lastPaymentPrincipalAmount": {
          "description": "(Mortgage/Loan) Amount towards principal in last payment",
          "example": 1256.67,
          "type": "number",
          "format": "double"
        },
        "lastPaymentInterestAmount": {
          "description": "(Mortgage/Loan) Amount of interest in last payment",
          "example": 234.56,
          "type": "number",
          "format": "double"
        },
        "lastPaymentEscrowAmount": {
          "description": "(Mortgage/Loan) Amount towards escrow in last payment",
          "example": 456.78,
          "type": "number",
          "format": "double"
        },
        "lastPaymentLastFeeAmount": {
          "description": "(Mortgage/Loan) Amount of last fee in last payment",
          "example": 150,
          "type": "number",
          "format": "double"
        },
        "lastPaymentLateCharge": {
          "description": "(Mortgage/Loan) Amount of late charge in last payment",
          "example": 50,
          "type": "number",
          "format": "double"
        },
        "ytdPrincipalPaid": {
          "description": "(Mortgage/Loan) Principal paid year-to-date",
          "example": 5432.01,
          "type": "number",
          "format": "double"
        },
        "ytdInterestPaid": {
          "description": "(Mortgage/Loan) Interest paid year-to-date",
          "example": 3948.56,
          "type": "number",
          "format": "double"
        },
        "ytdInsurancePaid": {
          "description": "(Mortgage/Loan) Insurance paid year-to-date",
          "example": 1345.89,
          "type": "number",
          "format": "double"
        },
        "ytdTaxPaid": {
          "description": "(Mortgage/Loan) Tax paid year-to-date",
          "example": 1489,
          "type": "number",
          "format": "double"
        },
        "autoPayEnrolled": {
          "description": "(Mortgage/Loan) Enrolled in autopay (F/Y)",
          "example": true,
          "type": "boolean"
        },
        "collateral": {
          "description": "(Mortgage/Loan) Collateral on loan",
          "example": "nissan sentra",
          "type": "string"
        },
        "currentSchool": {
          "description": "(Mortgage/Loan) Current school",
          "example": "utah valley university",
          "type": "string"
        },
        "firstPaymentDate": {
          "description": "(Mortgage/Loan) First payment due date. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "firstMortgage": {
          "description": "(Mortgage/Loan) First mortgage (F/Y)",
          "example": true,
          "type": "boolean"
        },
        "loanPaymentFreq": {
          "description": "(Mortgage/Loan) Frequency of payments (monthly, etc.)",
          "example": "monthly",
          "type": "string"
        },
        "originalSchool": {
          "description": "(Mortgage/Loan) Original school",
          "example": "brigham young university",
          "type": "string"
        },
        "recurringPaymentAmount": {
          "description": "(Mortgage/Loan) Recurring payment amount",
          "example": 456.23,
          "type": "number",
          "format": "double"
        },
        "lender": {
          "description": "(Mortgage/Loan) Owner of loan",
          "example": "utah community credit union",
          "type": "string"
        },
        "endingBalanceAmount": {
          "description": "(Mortgage/Loan) Ending balance",
          "example": 234789.45,
          "type": "number",
          "format": "double"
        },
        "loanTermType": {
          "description": "(Mortgage/Loan) Type of loan term",
          "example": "fixed",
          "type": "string"
        },
        "paymentsMade": {
          "description": "(Mortgage/Loan) Number of payments made",
          "example": 14,
          "type": "integer",
          "format": "int32"
        },
        "balloonAmount": {
          "description": "(Mortgage/Loan) Balloon payment amount",
          "example": 1678.56,
          "type": "number",
          "format": "double"
        },
        "projectedInterest": {
          "description": "(Mortgage/Loan) Projected interest on the loan",
          "example": 10456.78,
          "type": "number",
          "format": "double"
        },
        "interestPaidLtd": {
          "description": "(Mortgage/Loan) Interest paid since inception of loan (life to date)",
          "example": 56789.34,
          "type": "number",
          "format": "double"
        },
        "interestRateType": {
          "description": "(Mortgage/Loan) Type of interest rate",
          "example": "variable",
          "type": "string"
        },
        "loanPaymentType": {
          "description": "(Mortgage/Loan) Type of loan payment",
          "example": "principle",
          "type": "string"
        },
        "repaymentPlan": {
          "description": "(Mortgage/Loan) Type of repayment plan for the student loan",
          "example": "Standard, Graduated, Extended, Pay As You Earn, and more.",
          "type": "string"
        },
        "paymentsRemaining": {
          "description": "(Mortgage/Loan) Number of payments remaining before loan is paid off",
          "example": 45,
          "type": "integer",
          "format": "int32"
        },
        "marginBalance": {
          "description": "(Investment) Net interest earned after deducting interest paid out",
          "example": 456,
          "type": "number",
          "format": "double"
        },
        "shortBalance": {
          "description": "(Investment) Sum of short balance",
          "example": 12456.89,
          "type": "number",
          "format": "double"
        },
        "availableCashBalance": {
          "description": "(Investment) Amount available for cash withdrawal",
          "example": 3456.78,
          "type": "number",
          "format": "double"
        },
        "maturityValueAmount": {
          "description": "(Investment) amount payable to an investor at maturity",
          "example": 34067.78,
          "type": "number",
          "format": "double"
        },
        "vestedBalance": {
          "description": "(Investment) Vested amount in account",
          "example": 45000,
          "type": "number",
          "format": "double"
        },
        "empMatchAmount": {
          "description": "(Investment) Employer matched contributions",
          "example": 256.99,
          "type": "number",
          "format": "double"
        },
        "empPretaxContribAmount": {
          "description": "(Investment) Employer pretax contribution amount",
          "example": 450,
          "type": "number",
          "format": "double"
        },
        "empPretaxContribAmountYtd": {
          "description": "(Investment) Employer pretax contribution amount year to date",
          "example": 700,
          "type": "number",
          "format": "double"
        },
        "contribTotalYtd": {
          "description": "(Investment) Total year to date contributions",
          "example": 2045,
          "type": "number",
          "format": "double"
        },
        "cashBalanceAmount": {
          "description": "(Investment) Cash balance of account",
          "example": 2000,
          "type": "number",
          "format": "double"
        },
        "preTaxAmount": {
          "description": "(Investment) Pre tax amount of total balance",
          "example": 78564.99,
          "type": "number",
          "format": "double"
        },
        "afterTaxAmount": {
          "description": "(Investment) Post tax amount of total balance",
          "example": 68564.99,
          "type": "number",
          "format": "double"
        },
        "matchAmount": {
          "description": "(Investment) Amount matched",
          "example": 378,
          "type": "number",
          "format": "double"
        },
        "profitSharingAmount": {
          "description": "(Investment) Amount of balance for profit sharing",
          "example": 34678.89,
          "type": "number",
          "format": "double"
        },
        "rolloverAmount": {
          "description": "(Investment) Amount of balance rolled over from original account (401k, etc.)",
          "example": 101234.67,
          "type": "number",
          "format": "double"
        },
        "otherVestAmount": {
          "description": "(Investment) Other vested amount",
          "example": 34000,
          "type": "number",
          "format": "double"
        },
        "otherNonvestAmount": {
          "description": "(Investment) Other nonvested amount",
          "example": 26000,
          "type": "number",
          "format": "double"
        },
        "currentLoanBalance": {
          "description": "(Investment) Current loan balance",
          "example": 345789.23,
          "type": "number",
          "format": "double"
        },
        "loanRate": {
          "description": "(Investment) Interest rate of loan",
          "example": 3.275,
          "type": "number",
          "format": "double"
        },
        "buyPower": {
          "description": "(Investment) Money available to buy securities",
          "example": 34567.89,
          "type": "number",
          "format": "double"
        },
        "rolloverLtd": {
          "description": "(Investment) Life to date of money rolled over",
          "example": 23456.78,
          "type": "number",
          "format": "double"
        },
        "loanAwardId": {
          "description": "(Student Loan) The federal unique loan identifying number",
          "example": "1234568",
          "type": "string"
        },
        "originalInterestRate": {
          "description": "(Student Loan) The original interest rate to which the loan was disbursed, in APY",
          "example": 12,
          "type": "number",
          "format": "double"
        },
        "guarantor": {
          "description": "(Student Loan) The financial institution guarantor of the loan (who will pay the loan amount to the owner if the borrower defaults)",
          "example": "FinBank",
          "type": "string"
        },
        "owner": {
          "description": "(Student Loan) Owner of the loan",
          "example": "FinBank",
          "type": "string"
        },
        "interestSubsidyType": {
          "description": "(Student Loan) The indication of the presence of an interest subsidy (i.e. subsidized)",
          "example": "Subsidy type",
          "type": "string"
        },
        "interestBalance": {
          "description": "(Student Loan) The total outstanding interest balance",
          "example": 2000,
          "type": "number",
          "format": "double"
        },
        "remainingTermOfMl": {
          "description": "(Student Loan) The number of months still outstanding on a loan",
          "example": 2,
          "type": "number",
          "format": "double"
        },
        "initialInterestRate": {
          "description": "(Student Loan) Initial interest rate of loan",
          "example": 34567.89,
          "type": "number",
          "format": "double"
        },
        "feesBalance": {
          "description": "(Student Loan) The total outstanding fees balance",
          "example": 150,
          "type": "number",
          "format": "double"
        },
        "loanYtdInterestPaid": {
          "description": "(Student Loan) Loan interest paid year-to-date",
          "example": 5623.23,
          "type": "number",
          "format": "double"
        },
        "loanYtdFeesPaid": {
          "description": "(Student Loan) Loan fees paid year-to-date",
          "example": 5621.23,
          "type": "number",
          "format": "double"
        },
        "loanYtdPrincipalPaid": {
          "description": "(Student Loan) Loan principal paid year-to-date",
          "example": 5621.23,
          "type": "number",
          "format": "double"
        },
        "loanStatus": {
          "description": "(Student Loan) The repayment status phase (i.e. In School, Grace, Repayment, Deferment, Forbearance)",
          "example": "Deferment",
          "type": "string"
        },
        "loanStatusStartDate": {
          "description": "(Student Loan) The start date of the current status. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "loanStatusEndDate": {
          "description": "(Student Loan) The end date of the current status. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "weightedInterestRate": {
          "description": "(Student Loan) The interest rate of multiple interest rates and balances at the group level, in APY",
          "example": 12,
          "type": "number",
          "format": "double"
        },
        "repaymentPlanStartDate": {
          "description": "(Student Loan) The start date of the current repayment plan. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "repaymentPlanEndDate": {
          "description": "(Student Loan) The end date of the current repayment plan. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "expectedPayoffDate": {
          "description": "(Student Loan) The expected date of the payoff date. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "outOfSchoolDate": {
          "description": "(Student Loan) The date the borrower graduated or dropped below half-time enrollment in school. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "convertToRepayment": {
          "description": "(Student Loan) The date the loan enters into repayment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "daysDelinquent": {
          "description": "(Student Loan) The number of days past a due date that a payment should have been made",
          "example": 5,
          "type": "integer",
          "format": "int32"
        },
        "totalPrincipalPaid": {
          "description": "(Student Loan) The total amount paid towards the principal balance",
          "example": 15000,
          "type": "number",
          "format": "double"
        },
        "totalInterestPaid": {
          "description": "(Student Loan) The total amount paid towards interest",
          "example": 1125,
          "type": "number",
          "format": "double"
        },
        "totalAmountPaid": {
          "description": "(Student Loan) The total amount paid",
          "example": 16125,
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "availableBalanceAmount"
      ]
    },
    "Application": {
      "title": "Application",
      "type": "object",
      "properties": {
        "appDescription": {
          "description": "A short description of the app. This will be visible to end users in the FI interface.",
          "example": "The app that makes your budgeting experience awesome",
          "type": "string"
        },
        "appName": {
          "description": "The name of the application assigned to the customer",
          "example": "Awesome Budget App",
          "type": "string"
        },
        "appUrl": {
          "description": "An URL for the app. This will be visible to end users in the FI interface.",
          "example": "https://www.finicity.com/",
          "type": "string"
        },
        "ownerAddressLine1": {
          "description": "An address line 1",
          "example": "434 W Ascension Way",
          "type": "string"
        },
        "ownerAddressLine2": {
          "description": "An address line 2",
          "example": "Suite #200",
          "type": "string"
        },
        "ownerCity": {
          "description": "City for the business entity that owns the app. Information for registration purposes only and not given to the end user.",
          "example": "Murray",
          "type": "string"
        },
        "ownerCountry": {
          "description": "Country for the  business entity that owns the app. Information for registration purposes only and not given to the end user.",
          "example": "USA",
          "type": "string"
        },
        "ownerName": {
          "description": "Business name for the business entity that owns the app. Information for registration purposes only and not given to the end user.",
          "example": "Finicity",
          "type": "string"
        },
        "ownerPostalCode": {
          "description": "Zip code for the business entity that owns the app. Information for registration purposes only and not given to the end user.",
          "example": "84123",
          "type": "string"
        },
        "ownerState": {
          "description": "State for the business entity that owns the app. Information for registration purposes only and not given to the end user.",
          "example": "UT",
          "type": "string"
        },
        "image": {
          "description": "An app logo passed as a Base64 encoded image (1:1 SVG file, must be less than 50KB)",
          "example": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+CjxzdmcgICAKICAgeG1sbnM6c3ZnPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIgogICB2ZXJzaW9uPSIxLjEiCiAgIHZpZXdCb3g9IjAgMCAwIDAiCiAgIGhlaWdodD0iMCIKICAgd2lkdGg9IjAiPgogICAgPGcvPgo8L3N2Zz4K",
          "type": "string"
        }
      },
      "required": [
        "appDescription",
        "appName",
        "appUrl",
        "ownerAddressLine1",
        "ownerAddressLine2",
        "ownerCity",
        "ownerCountry",
        "ownerName",
        "ownerPostalCode",
        "ownerState",
        "image"
      ]
    },
    "RegisteredApplication": {
      "title": "RegisteredApplication",
      "type": "object",
      "properties": {
        "preAppId": {
          "description": "Identifier to track the application registration from the App Registration and Get App Registration Status APIs, represented as a number",
          "example": 2581,
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "description": "The status of an app registration request. \"A\" means approved. \"P\" means pending which is the status when initially submitted or when the app is modified and awaiting approval. \"R\" means rejected. If it is rejected there will be a note with the rejected reason.",
          "example": "P",
          "type": "string"
        }
      },
      "required": [
        "preAppId",
        "status"
      ]
    },
    "AppStatuses": {
      "title": "AppStatuses",
      "description": "The response for the Get App Registration Status API which returns an array of status objects",
      "type": "object",
      "properties": {
        "totalRecords": {
          "description": "The total number of results",
          "example": 50,
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "description": "The total number of pages",
          "example": 5,
          "type": "integer",
          "format": "int64"
        },
        "pageNumber": {
          "description": "The current page number",
          "example": 2,
          "type": "integer",
          "format": "int64"
        },
        "numberOfRecordsPerPage": {
          "description": "The number of results per page",
          "example": 10,
          "type": "integer",
          "format": "int64"
        },
        "applications": {
          "description": "A list of applications with their statuses",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppStatus"
          }
        }
      },
      "required": [
        "totalRecords",
        "totalPages",
        "pageNumber",
        "numberOfRecordsPerPage",
        "applications"
      ]
    },
    "AppStatus": {
      "title": "AppStatus",
      "description": "Registration status details for the application",
      "type": "object",
      "properties": {
        "partnerId": {
          "description": "Your Partner ID displayed in the [Developer Dashboard](https://developer.finicity.com/admin)",
          "example": "1234583871234",
          "type": "string"
        },
        "preAppId": {
          "description": "Identifier to track the application registration from the App Registration and Get App Registration Status APIs",
          "example": "2581",
          "type": "string"
        },
        "note": {
          "description": "A note on the registration. Typically used to indicate reasons for rejected apps.",
          "example": "Approved",
          "type": "string"
        },
        "applicationId": {
          "description": "`applicationId` value returned from the Get App Registration Status API and the partner assign the customers to. This cannot be changed once set. Only applicable in cases of partners with multiple registered applications. If the partner only has one app, this can usually be omitted. This field is populated after the app is in a status approved.",
          "example": "123456789",
          "type": "string"
        },
        "appName": {
          "description": "The name of the application assigned to the customer",
          "example": "Awesome Budget App",
          "type": "string"
        },
        "submittedDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "modifiedDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "description": "The status of an app registration request. \"A\" means approved. \"P\" means pending which is the status when initially submitted or when the app is modified and awaiting approval. \"R\" means rejected. If it is rejected there will be a note with the rejected reason.",
          "example": "P",
          "type": "string"
        },
        "scopes": {
          "description": "Indicates scopes of data accessible to the app",
          "example": "Account Info",
          "type": "string"
        },
        "institutionDetails": {
          "description": "A list of the registration status for each FI for the application",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppFinancialInstitutionStatus"
          }
        }
      },
      "required": [
        "partnerId",
        "preAppId",
        "appName",
        "submittedDate",
        "modifiedDate",
        "status"
      ]
    },
    "AppFinancialInstitutionStatus": {
      "title": "AppFinancialInstitutionStatus",
      "description": "The registration status fields for each specific OAuth financial institution",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID of a financial institution, represented as a number",
          "example": 4222,
          "type": "integer",
          "format": "int64"
        },
        "abbrvName": {
          "description": "The application's abbreviated name",
          "example": "VAEJ",
          "type": "string"
        },
        "logoUrl": {
          "description": "An URL to a logo file",
          "example": "https://prod-direct-integration-client.s3.us-west-2.amazonaws.com/976521f99-7b36-4b3b-a3e0-faff9545836d/102224/90x90.png",
          "type": "string"
        },
        "decryptionKeyActivated": {
          "description": "Status of decryption keys for financial institution app registration",
          "example": false,
          "type": "boolean"
        },
        "createdDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "lastModifiedDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "description": "\"false\" indicates registration is still pending",
          "example": true,
          "type": "boolean"
        }
      },
      "required": [
        "id",
        "decryptionKeyActivated",
        "createdDate",
        "lastModifiedDate",
        "status"
      ]
    },
    "Branding": {
      "title": "Branding",
      "description": "All assets are SVGs so can be slightly resized without any issues.",
      "type": "object",
      "properties": {
        "logo": {
          "description": "File path of the institution's logo. For white backgrounds designed at 375 x 72, has built in spacing around it to normalize brand sizing.",
          "example": "https://prod-carpintero-branding.s3.us-west-2.amazonaws.com/5/logo.svg",
          "type": "string"
        },
        "alternateLogo": {
          "description": "File path of the institution's alternate logo. For colored backgrounds designed at 375 x 72 has built in spacing around it to normalize brand sizing.",
          "example": "https://prod-carpintero-branding.s3.us-west-2.amazonaws.com/5/alternateLogo.svg",
          "type": "string"
        },
        "icon": {
          "description": "File path of the institution's icon. For search results designed at 40 x 40.",
          "example": "https://prod-carpintero-branding.s3.us-west-2.amazonaws.com/5/icon.svg",
          "type": "string"
        },
        "primaryColor": {
          "description": "Hex code for the institution's primary color",
          "example": "#0167AE",
          "type": "string"
        },
        "tile": {
          "description": "File path of institution name logo. For popular banks designed at 160 x 72.",
          "example": "https://prod-carpintero-branding.s3.us-west-2.amazonaws.com/5/tile.svg",
          "type": "string"
        }
      }
    },
    "BrandingWrapper": {
      "title": "BrandingWrapper",
      "type": "object",
      "properties": {
        "branding": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Branding"
            },
            {
              "description": "All assets are SVGs so can be slightly resized without any issues."
            }
          ]
        }
      },
      "required": [
        "branding"
      ]
    },
    "InstitutionAddress": {
      "title": "InstitutionAddress",
      "description": "The address of a financial institution",
      "type": "object",
      "properties": {
        "city": {
          "description": "A city",
          "example": "Murray",
          "type": "string"
        },
        "state": {
          "description": "A state",
          "example": "UT",
          "type": "string"
        },
        "country": {
          "description": "A country code",
          "example": "USA",
          "type": "string"
        },
        "postalCode": {
          "description": "A ZIP code",
          "example": "84123",
          "type": "string"
        },
        "addressLine1": {
          "description": "An address line 1",
          "example": "434 W Ascension Way",
          "type": "string"
        },
        "addressLine2": {
          "description": "An address line 2",
          "example": "Suite #200",
          "type": "string"
        }
      }
    },
    "Institutions": {
      "title": "Institutions",
      "description": "A list of financial institutions from the Get Institutions API",
      "type": "object",
      "properties": {
        "found": {
          "description": "The total number of results matching search criteria",
          "example": 200,
          "type": "integer",
          "format": "int32"
        },
        "displaying": {
          "description": "The number of results returned",
          "example": 2,
          "type": "integer",
          "format": "int32"
        },
        "moreAvailable": {
          "description": "If the value of `moreAvailable` is \"true\", you can retrieve the next page of results by increasing the value of the start parameter in your next request:\"...&start=6&limit=5\"",
          "example": true,
          "type": "boolean"
        },
        "createdDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "institutions": {
          "description": "A list of institutions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Institution"
          },
          "minItems": 0,
          "maxItems": 1000
        }
      },
      "required": [
        "found",
        "displaying",
        "moreAvailable",
        "createdDate",
        "institutions"
      ]
    },
    "InstitutionWrapper": {
      "title": "InstitutionWrapper",
      "type": "object",
      "properties": {
        "institution": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Institution"
            },
            {
              "description": "A financial institution"
            }
          ]
        }
      },
      "required": [
        "institution"
      ]
    },
    "Institution": {
      "title": "Institution",
      "description": "A financial institution",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID of a financial institution, represented as a number",
          "example": 4222,
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "description": "The name of the institution",
          "example": "FinBank",
          "type": "string"
        },
        "transAgg": {
          "description": "\"true\": The institution is certified for the Transaction Aggregation product\n\"false\": The institution is decertified for the Transaction Aggregation product",
          "example": true,
          "type": "boolean"
        },
        "ach": {
          "description": "\"true\": The institution is certified for the ACH product\n\"false\": The institution is decertified for the ACH product",
          "example": true,
          "type": "boolean"
        },
        "stateAgg": {
          "description": "\"true\": The institution is certified for the Statement Aggregation product\n\"false\": The institution is decertified for the Statement Aggregation product",
          "example": false,
          "type": "boolean"
        },
        "voi": {
          "description": "\"true\": The institution is certified for the VOI product\n\"false\": The institution is decertified for the VOI product",
          "example": true,
          "type": "boolean"
        },
        "voa": {
          "description": "\"true\": The institution is certified for the VOA product\n\"false\": The institution is decertified for the VOA product",
          "example": true,
          "type": "boolean"
        },
        "aha": {
          "description": "\"true\": The institution is certified for the Account History Aggregation product\n\"false\": The institution is decertified for the Account History Aggregation product",
          "example": false,
          "type": "boolean"
        },
        "availBalance": {
          "description": "\"true\": The institution is certified for the Account Balance Check (ABC) product\n\"false\": The institution is decertified for the Account Balance Check (ABC) product",
          "example": false,
          "type": "boolean"
        },
        "accountOwner": {
          "description": "\"true\": The institution is certified for the Account Owner product\n\"false\": The institution is decertified for the Account Owner product",
          "example": true,
          "type": "boolean"
        },
        "studentLoanData": {
          "description": "\"true\": The institution is certified for the Student Loan Data product\n\n\"false\": The institution is decertified for the Student Loan Data product",
          "example": true,
          "type": "boolean"
        },
        "loanPaymentDetails": {
          "description": "\"true\": The institution is certified for the Loan Payment Detail product\n\n\"false\": The institution is decertified for the Loan Payment Detail product",
          "example": true,
          "type": "boolean"
        },
        "accountTypeDescription": {
          "description": "Values: Banking, Investments, Credit Cards/Accounts, Workplace Retirement, Mortgages and Loans, Insurance",
          "example": "Workplace Retirement",
          "type": "string"
        },
        "phone": {
          "description": "A phone number",
          "example": "1-800-986-3343",
          "type": "string"
        },
        "urlHomeApp": {
          "description": "The URL of the institution's primary home page",
          "example": "https://www.example.com/home",
          "type": "string"
        },
        "urlLogonApp": {
          "description": "The URL of the institution's login page",
          "example": "https://www.example.com/login",
          "type": "string"
        },
        "oauthEnabled": {
          "description": "\"true\": The institution is an OAuth connection\n\n\"false\": The institution isn't an OAuth connection",
          "example": true,
          "type": "boolean"
        },
        "urlForgotPassword": {
          "description": "Institution's forgot password page",
          "example": "https://www.example.com/forgotPassword.do",
          "type": "string"
        },
        "urlOnlineRegistration": {
          "description": "Institution's signup page",
          "example": "https://www.example.com/signup",
          "type": "string"
        },
        "class": {
          "description": "Institution's class",
          "example": "retirement",
          "type": "string"
        },
        "specialText": {
          "description": "Special instructions given to customers for login",
          "example": "Please enter your Principal Financial - Retirement (Personal) Username and Password.",
          "type": "string"
        },
        "timeZone": {
          "description": "The time zone of the institution.",
          "example": "America/Denver",
          "type": "string"
        },
        "specialInstructions": {
          "description": "Instructions given to the customer before they are sent to the institution website to login for OAuth institutions.\n\nNote: this helps the customer to provide the proper permission for data needed for the application.",
          "example": [
            "Account details",
            "Balances and transactions",
            "Personal and account ownership info"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "specialInstutionsTitle": {
          "description": "The title of the special instructions, if one exists or is required.",
          "example": "Special OAuth Login Instructions",
          "type": "string"
        },
        "address": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/InstitutionAddress"
            },
            {
              "description": "The address of a financial institution"
            }
          ]
        },
        "currency": {
          "description": "A currency code",
          "example": "USD",
          "type": "string"
        },
        "email": {
          "description": "An email address",
          "example": "finicity@test.com",
          "type": "string"
        },
        "status": {
          "description": "Status for the institution: \"online\", \"offline\", \"maintenance\", \"testing\"",
          "example": "online",
          "type": "string"
        },
        "newInstitutionId": {
          "description": "The ID of a financial institution, represented as a number",
          "example": 4222,
          "type": "integer",
          "format": "int64"
        },
        "branding": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Branding"
            },
            {
              "description": "All assets are SVGs so can be slightly resized without any issues."
            }
          ]
        },
        "oauthInstitutionId": {
          "description": "The ID of a financial institution, represented as a number",
          "example": 4222,
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "id",
        "transAgg",
        "ach",
        "stateAgg",
        "voi",
        "voa",
        "aha",
        "availBalance",
        "accountOwner",
        "oauthEnabled",
        "currency",
        "status"
      ]
    },
    "CertifiedInstitutions": {
      "title": "CertifiedInstitutions",
      "description": "A list of financial institutions from the Get Certified Institutions API",
      "type": "object",
      "properties": {
        "found": {
          "description": "The total number of results matching search criteria",
          "example": 200,
          "type": "integer",
          "format": "int32"
        },
        "displaying": {
          "description": "The number of results returned",
          "example": 2,
          "type": "integer",
          "format": "int32"
        },
        "moreAvailable": {
          "description": "If the value of `moreAvailable` is \"true\", you can retrieve the next page of results by increasing the value of the start parameter in your next request:\"...&start=6&limit=5\"",
          "example": true,
          "type": "boolean"
        },
        "requestedDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "institutions": {
          "description": "A list of institutions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CertifiedInstitution"
          },
          "minItems": 0,
          "maxItems": 1000
        }
      },
      "required": [
        "found",
        "displaying",
        "moreAvailable",
        "requestedDate",
        "institutions"
      ]
    },
    "CertifiedInstitution": {
      "title": "CertifiedInstitution",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID of a financial institution, represented as a number",
          "example": 4222,
          "type": "integer",
          "format": "int64"
        },
        "rssd": {
          "description": "The RSSD ID is a unique identifier assigned to financial institutions by the Federal Reserve. While the length of the RSSD ID varies by institution, it cannot exceed 10 numerical digits.",
          "example": 490535,
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "description": "The name of the institution",
          "example": "FinBank",
          "type": "string"
        },
        "transAgg": {
          "description": "\"true\": The institution is certified for the Transaction Aggregation product\n\"false\": The institution is decertified for the Transaction Aggregation product",
          "example": true,
          "type": "boolean"
        },
        "ach": {
          "description": "\"true\": The institution is certified for the ACH product\n\"false\": The institution is decertified for the ACH product",
          "example": true,
          "type": "boolean"
        },
        "stateAgg": {
          "description": "\"true\": The institution is certified for the Statement Aggregation product\n\"false\": The institution is decertified for the Statement Aggregation product",
          "example": false,
          "type": "boolean"
        },
        "voi": {
          "description": "\"true\": The institution is certified for the VOI product\n\"false\": The institution is decertified for the VOI product",
          "example": true,
          "type": "boolean"
        },
        "voa": {
          "description": "\"true\": The institution is certified for the VOA product\n\"false\": The institution is decertified for the VOA product",
          "example": true,
          "type": "boolean"
        },
        "aha": {
          "description": "\"true\": The institution is certified for the Account History Aggregation product\n\"false\": The institution is decertified for the Account History Aggregation product",
          "example": false,
          "type": "boolean"
        },
        "availBalance": {
          "description": "\"true\": The institution is certified for the Account Balance Check (ABC) product\n\"false\": The institution is decertified for the Account Balance Check (ABC) product",
          "example": false,
          "type": "boolean"
        },
        "accountOwner": {
          "description": "\"true\": The institution is certified for the Account Owner product\n\"false\": The institution is decertified for the Account Owner product",
          "example": true,
          "type": "boolean"
        },
        "studentLoanData": {
          "description": "\"true\": The institution is certified for the Student Loan Data product\n\n\"false\": The institution is decertified for the Student Loan Data product",
          "example": true,
          "type": "boolean"
        },
        "loanPaymentDetails": {
          "description": "\"true\": The institution is certified for the Loan Payment Detail product\n\n\"false\": The institution is decertified for the Loan Payment Detail product",
          "example": true,
          "type": "boolean"
        },
        "childInstitutions": {
          "description": "An array of child financial institutions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChildInstitution"
          },
          "minItems": 0
        }
      },
      "required": [
        "id",
        "name",
        "transAgg",
        "ach",
        "stateAgg",
        "voi",
        "voa",
        "aha",
        "availBalance",
        "accountOwner",
        "studentLoanData",
        "loanPaymentDetails"
      ]
    },
    "ChildInstitution": {
      "title": "ChildInstitution",
      "type": "object",
      "properties": {
        "rssd": {
          "description": "The RSSD ID is a unique identifier assigned to financial institutions by the Federal Reserve. While the length of the RSSD ID varies by institution, it cannot exceed 10 numerical digits.",
          "example": 490535,
          "type": "integer",
          "format": "int64"
        },
        "parentRSSD": {
          "description": "The RSSD ID is a unique identifier assigned to financial institutions by the Federal Reserve. While the length of the RSSD ID varies by institution, it cannot exceed 10 numerical digits.",
          "example": 490535,
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "description": "The name of the institution",
          "example": "FinBank",
          "type": "string"
        },
        "institutionId": {
          "description": "The ID of a financial institution, represented as a number",
          "example": 4222,
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "rssd",
        "parentRSSD",
        "name",
        "institutionId"
      ]
    },
    "BaseReportAck": {
      "title": "BaseReportAck",
      "description": "Properties shared by all generated reports",
      "type": "object",
      "properties": {
        "id": {
          "description": "A report ID",
          "example": "u4hstnnak45g",
          "type": "string"
        },
        "customerType": {
          "description": "The type of customer (\"active\" or \"testing\" or \"\" for all types)",
          "example": "active",
          "type": "string"
        },
        "customerId": {
          "description": "A customer ID represented as a number. See Add Customer API for how to create a customer ID.",
          "example": 1005061234,
          "type": "integer",
          "format": "int64"
        },
        "requestId": {
          "description": "Finicity indicator to track all activity associated with this report",
          "example": "cjqm4wtdcn",
          "type": "string"
        },
        "requesterName": {
          "description": "Name of a Finicity partner",
          "example": "Finicity Test API",
          "type": "string"
        },
        "createdDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "description": "Title of the report",
          "example": "Finicity Asset Ready Report (CRA)",
          "type": "string"
        },
        "consumerId": {
          "description": "A consumer ID. See Create Consumer API for how to create a consumer ID.",
          "example": "0bf46322c167b562e6cbed9d40e19a4c",
          "type": "string"
        },
        "consumerSsn": {
          "description": "Last 4 digits of a SSN",
          "example": "9999",
          "type": "string"
        },
        "type": {
          "description": "A report type. Possible values:\n\n  * \"voi\"\n\n\n  * \"voa\"\n\n\n  * \"voaHistory\"\n\n\n  * \"history\"\n\n\n  * \"voieTxVerify\"\n\n\n  * \"voieWithReport\"\n\n\n  * \"voieWithInterview\"\n\n\n  * \"paystatement\"\n\n\n  * \"preQualVoa\"\n\n\n  * \"assetSummary\"\n\n\n  * \"voie\"\n\n\n  * \"transactions\"\n\n\n  * \"statement\"\n\n\n  * \"voiePayroll\"\n\n\n  * \"voeTransactions\"\n\n\n  * \"voePayroll\"\n\n\n  * \"cfrp\"\n\n\n  * \"cfrb\"",
          "example": "voi",
          "type": "string"
        },
        "status": {
          "description": "A report generation status. Possible values: \"inProgress\", \"success\", \"failure\".",
          "example": "inProgress",
          "type": "string"
        },
        "errors": {
          "description": "In case errors occurred during the report generation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorMessage"
          }
        }
      }
    },
    "BaseReportAckWithPortfolioId": {
      "title": "BaseReportAckWithPortfolioId",
      "description": "Properties shared by all generated reports having a portfolio ID",
      "type": "object",
      "properties": {
        "id": {
          "description": "A report ID",
          "example": "u4hstnnak45g",
          "type": "string"
        },
        "customerType": {
          "description": "The type of customer (\"active\" or \"testing\" or \"\" for all types)",
          "example": "active",
          "type": "string"
        },
        "customerId": {
          "description": "A customer ID represented as a number. See Add Customer API for how to create a customer ID.",
          "example": 1005061234,
          "type": "integer",
          "format": "int64"
        },
        "requestId": {
          "description": "Finicity indicator to track all activity associated with this report",
          "example": "cjqm4wtdcn",
          "type": "string"
        },
        "requesterName": {
          "description": "Name of a Finicity partner",
          "example": "Finicity Test API",
          "type": "string"
        },
        "createdDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "description": "Title of the report",
          "example": "Finicity Asset Ready Report (CRA)",
          "type": "string"
        },
        "consumerId": {
          "description": "A consumer ID. See Create Consumer API for how to create a consumer ID.",
          "example": "0bf46322c167b562e6cbed9d40e19a4c",
          "type": "string"
        },
        "consumerSsn": {
          "description": "Last 4 digits of a SSN",
          "example": "9999",
          "type": "string"
        },
        "type": {
          "description": "A report type. Possible values:\n\n  * \"voi\"\n\n\n  * \"voa\"\n\n\n  * \"voaHistory\"\n\n\n  * \"history\"\n\n\n  * \"voieTxVerify\"\n\n\n  * \"voieWithReport\"\n\n\n  * \"voieWithInterview\"\n\n\n  * \"paystatement\"\n\n\n  * \"preQualVoa\"\n\n\n  * \"assetSummary\"\n\n\n  * \"voie\"\n\n\n  * \"transactions\"\n\n\n  * \"statement\"\n\n\n  * \"voiePayroll\"\n\n\n  * \"voeTransactions\"\n\n\n  * \"voePayroll\"\n\n\n  * \"cfrp\"\n\n\n  * \"cfrb\"",
          "example": "voi",
          "type": "string"
        },
        "status": {
          "description": "A report generation status. Possible values: \"inProgress\", \"success\", \"failure\".",
          "example": "inProgress",
          "type": "string"
        },
        "errors": {
          "description": "In case errors occurred during the report generation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorMessage"
          }
        },
        "portfolioId": {
          "description": "A unique identifier that will be consistent across all reports created for the same customer",
          "example": "y4zsgccj4xpw-6-port",
          "type": "string"
        }
      }
    },
    "VOAReportAck": {
      "title": "VOAReportAck",
      "type": "object",
      "properties": {
        "id": {
          "description": "A report ID",
          "example": "u4hstnnak45g",
          "type": "string"
        },
        "customerType": {
          "description": "The type of customer (\"active\" or \"testing\" or \"\" for all types)",
          "example": "active",
          "type": "string"
        },
        "customerId": {
          "description": "A customer ID represented as a number. See Add Customer API for how to create a customer ID.",
          "example": 1005061234,
          "type": "integer",
          "format": "int64"
        },
        "requestId": {
          "description": "Finicity indicator to track all activity associated with this report",
          "example": "cjqm4wtdcn",
          "type": "string"
        },
        "requesterName": {
          "description": "Name of a Finicity partner",
          "example": "Finicity Test API",
          "type": "string"
        },
        "createdDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "description": "Title of the report",
          "example": "Finicity Asset Ready Report (CRA)",
          "type": "string"
        },
        "consumerId": {
          "description": "A consumer ID. See Create Consumer API for how to create a consumer ID.",
          "example": "0bf46322c167b562e6cbed9d40e19a4c",
          "type": "string"
        },
        "consumerSsn": {
          "description": "Last 4 digits of a SSN",
          "example": "9999",
          "type": "string"
        },
        "type": {
          "description": "A report type. Possible values:\n\n  * \"voi\"\n\n\n  * \"voa\"\n\n\n  * \"voaHistory\"\n\n\n  * \"history\"\n\n\n  * \"voieTxVerify\"\n\n\n  * \"voieWithReport\"\n\n\n  * \"voieWithInterview\"\n\n\n  * \"paystatement\"\n\n\n  * \"preQualVoa\"\n\n\n  * \"assetSummary\"\n\n\n  * \"voie\"\n\n\n  * \"transactions\"\n\n\n  * \"statement\"\n\n\n  * \"voiePayroll\"\n\n\n  * \"voeTransactions\"\n\n\n  * \"voePayroll\"\n\n\n  * \"cfrp\"\n\n\n  * \"cfrb\"",
          "example": "voi",
          "type": "string"
        },
        "status": {
          "description": "A report generation status. Possible values: \"inProgress\", \"success\", \"failure\".",
          "example": "inProgress",
          "type": "string"
        },
        "errors": {
          "description": "In case errors occurred during the report generation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorMessage"
          }
        },
        "portfolioId": {
          "description": "A unique identifier that will be consistent across all reports created for the same customer",
          "example": "y4zsgccj4xpw-6-port",
          "type": "string"
        },
        "constraints": {
          "$ref": "#/definitions/VOAReportConstraintsOut"
        }
      },
      "required": [
        "id",
        "customerType",
        "customerId",
        "requestId",
        "requesterName",
        "createdDate",
        "title",
        "consumerId",
        "consumerSsn",
        "type",
        "status",
        "portfolioId",
        "constraints"
      ]
    },
    "VOAWithIncomeReportAck": {
      "title": "VOAWithIncomeReportAck",
      "type": "object",
      "properties": {
        "id": {
          "description": "A report ID",
          "example": "u4hstnnak45g",
          "type": "string"
        },
        "customerType": {
          "description": "The type of customer (\"active\" or \"testing\" or \"\" for all types)",
          "example": "active",
          "type": "string"
        },
        "customerId": {
          "description": "A customer ID represented as a number. See Add Customer API for how to create a customer ID.",
          "example": 1005061234,
          "type": "integer",
          "format": "int64"
        },
        "requestId": {
          "description": "Finicity indicator to track all activity associated with this report",
          "example": "cjqm4wtdcn",
          "type": "string"
        },
        "requesterName": {
          "description": "Name of a Finicity partner",
          "example": "Finicity Test API",
          "type": "string"
        },
        "createdDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "description": "Title of the report",
          "example": "Finicity Asset Ready Report (CRA)",
          "type": "string"
        },
        "consumerId": {
          "description": "A consumer ID. See Create Consumer API for how to create a consumer ID.",
          "example": "0bf46322c167b562e6cbed9d40e19a4c",
          "type": "string"
        },
        "consumerSsn": {
          "description": "Last 4 digits of a SSN",
          "example": "9999",
          "type": "string"
        },
        "type": {
          "description": "A report type. Possible values:\n\n  * \"voi\"\n\n\n  * \"voa\"\n\n\n  * \"voaHistory\"\n\n\n  * \"history\"\n\n\n  * \"voieTxVerify\"\n\n\n  * \"voieWithReport\"\n\n\n  * \"voieWithInterview\"\n\n\n  * \"paystatement\"\n\n\n  * \"preQualVoa\"\n\n\n  * \"assetSummary\"\n\n\n  * \"voie\"\n\n\n  * \"transactions\"\n\n\n  * \"statement\"\n\n\n  * \"voiePayroll\"\n\n\n  * \"voeTransactions\"\n\n\n  * \"voePayroll\"\n\n\n  * \"cfrp\"\n\n\n  * \"cfrb\"",
          "example": "voi",
          "type": "string"
        },
        "status": {
          "description": "A report generation status. Possible values: \"inProgress\", \"success\", \"failure\".",
          "example": "inProgress",
          "type": "string"
        },
        "errors": {
          "description": "In case errors occurred during the report generation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorMessage"
          }
        },
        "portfolioId": {
          "description": "A unique identifier that will be consistent across all reports created for the same customer",
          "example": "y4zsgccj4xpw-6-port",
          "type": "string"
        },
        "constraints": {
          "$ref": "#/definitions/VOAWithIncomeReportConstraintsOut"
        }
      },
      "required": [
        "id",
        "customerType",
        "customerId",
        "requestId",
        "requesterName",
        "createdDate",
        "title",
        "consumerId",
        "consumerSsn",
        "type",
        "status",
        "portfolioId",
        "constraints"
      ]
    },
    "PrequalificationReportAck": {
      "title": "PrequalificationReportAck",
      "type": "object",
      "properties": {
        "id": {
          "description": "A report ID",
          "example": "u4hstnnak45g",
          "type": "string"
        },
        "customerType": {
          "description": "The type of customer (\"active\" or \"testing\" or \"\" for all types)",
          "example": "active",
          "type": "string"
        },
        "customerId": {
          "description": "A customer ID represented as a number. See Add Customer API for how to create a customer ID.",
          "example": 1005061234,
          "type": "integer",
          "format": "int64"
        },
        "requestId": {
          "description": "Finicity indicator to track all activity associated with this report",
          "example": "cjqm4wtdcn",
          "type": "string"
        },
        "requesterName": {
          "description": "Name of a Finicity partner",
          "example": "Finicity Test API",
          "type": "string"
        },
        "createdDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "description": "Title of the report",
          "example": "Finicity Asset Ready Report (CRA)",
          "type": "string"
        },
        "consumerId": {
          "description": "A consumer ID. See Create Consumer API for how to create a consumer ID.",
          "example": "0bf46322c167b562e6cbed9d40e19a4c",
          "type": "string"
        },
        "consumerSsn": {
          "description": "Last 4 digits of a SSN",
          "example": "9999",
          "type": "string"
        },
        "type": {
          "description": "A report type. Possible values:\n\n  * \"voi\"\n\n\n  * \"voa\"\n\n\n  * \"voaHistory\"\n\n\n  * \"history\"\n\n\n  * \"voieTxVerify\"\n\n\n  * \"voieWithReport\"\n\n\n  * \"voieWithInterview\"\n\n\n  * \"paystatement\"\n\n\n  * \"preQualVoa\"\n\n\n  * \"assetSummary\"\n\n\n  * \"voie\"\n\n\n  * \"transactions\"\n\n\n  * \"statement\"\n\n\n  * \"voiePayroll\"\n\n\n  * \"voeTransactions\"\n\n\n  * \"voePayroll\"\n\n\n  * \"cfrp\"\n\n\n  * \"cfrb\"",
          "example": "voi",
          "type": "string"
        },
        "status": {
          "description": "A report generation status. Possible values: \"inProgress\", \"success\", \"failure\".",
          "example": "inProgress",
          "type": "string"
        },
        "errors": {
          "description": "In case errors occurred during the report generation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorMessage"
          }
        },
        "portfolioId": {
          "description": "A unique identifier that will be consistent across all reports created for the same customer",
          "example": "y4zsgccj4xpw-6-port",
          "type": "string"
        },
        "constraints": {
          "$ref": "#/definitions/PrequalificationReportConstraintsOut"
        }
      },
      "required": [
        "id",
        "customerType",
        "customerId",
        "requestId",
        "requesterName",
        "createdDate",
        "title",
        "consumerId",
        "consumerSsn",
        "type",
        "status",
        "portfolioId",
        "constraints"
      ]
    },
    "VOIReportAck": {
      "title": "VOIReportAck",
      "type": "object",
      "properties": {
        "id": {
          "description": "A report ID",
          "example": "u4hstnnak45g",
          "type": "string"
        },
        "customerType": {
          "description": "The type of customer (\"active\" or \"testing\" or \"\" for all types)",
          "example": "active",
          "type": "string"
        },
        "customerId": {
          "description": "A customer ID represented as a number. See Add Customer API for how to create a customer ID.",
          "example": 1005061234,
          "type": "integer",
          "format": "int64"
        },
        "requestId": {
          "description": "Finicity indicator to track all activity associated with this report",
          "example": "cjqm4wtdcn",
          "type": "string"
        },
        "requesterName": {
          "description": "Name of a Finicity partner",
          "example": "Finicity Test API",
          "type": "string"
        },
        "createdDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "description": "Title of the report",
          "example": "Finicity Asset Ready Report (CRA)",
          "type": "string"
        },
        "consumerId": {
          "description": "A consumer ID. See Create Consumer API for how to create a consumer ID.",
          "example": "0bf46322c167b562e6cbed9d40e19a4c",
          "type": "string"
        },
        "consumerSsn": {
          "description": "Last 4 digits of a SSN",
          "example": "9999",
          "type": "string"
        },
        "type": {
          "description": "A report type. Possible values:\n\n  * \"voi\"\n\n\n  * \"voa\"\n\n\n  * \"voaHistory\"\n\n\n  * \"history\"\n\n\n  * \"voieTxVerify\"\n\n\n  * \"voieWithReport\"\n\n\n  * \"voieWithInterview\"\n\n\n  * \"paystatement\"\n\n\n  * \"preQualVoa\"\n\n\n  * \"assetSummary\"\n\n\n  * \"voie\"\n\n\n  * \"transactions\"\n\n\n  * \"statement\"\n\n\n  * \"voiePayroll\"\n\n\n  * \"voeTransactions\"\n\n\n  * \"voePayroll\"\n\n\n  * \"cfrp\"\n\n\n  * \"cfrb\"",
          "example": "voi",
          "type": "string"
        },
        "status": {
          "description": "A report generation status. Possible values: \"inProgress\", \"success\", \"failure\".",
          "example": "inProgress",
          "type": "string"
        },
        "errors": {
          "description": "In case errors occurred during the report generation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorMessage"
          }
        },
        "portfolioId": {
          "description": "A unique identifier that will be consistent across all reports created for the same customer",
          "example": "y4zsgccj4xpw-6-port",
          "type": "string"
        },
        "constraints": {
          "$ref": "#/definitions/VOIReportConstraintsOut"
        }
      },
      "required": [
        "id",
        "customerType",
        "customerId",
        "requestId",
        "requesterName",
        "createdDate",
        "title",
        "consumerId",
        "consumerSsn",
        "type",
        "status",
        "portfolioId",
        "constraints"
      ]
    },
    "PortfolioReport": {
      "title": "PortfolioReport",
      "type": "object",
      "properties": {
        "id": {
          "description": "A report ID",
          "example": "u4hstnnak45g",
          "type": "string"
        },
        "portfolioId": {
          "description": "A unique identifier that will be consistent across all reports created for the same customer",
          "example": "y4zsgccj4xpw-6-port",
          "type": "string"
        },
        "type": {
          "description": "A report type. Possible values:\n\n  * \"voi\"\n\n\n  * \"voa\"\n\n\n  * \"voaHistory\"\n\n\n  * \"history\"\n\n\n  * \"voieTxVerify\"\n\n\n  * \"voieWithReport\"\n\n\n  * \"voieWithInterview\"\n\n\n  * \"paystatement\"\n\n\n  * \"preQualVoa\"\n\n\n  * \"assetSummary\"\n\n\n  * \"voie\"\n\n\n  * \"transactions\"\n\n\n  * \"statement\"\n\n\n  * \"voiePayroll\"\n\n\n  * \"voeTransactions\"\n\n\n  * \"voePayroll\"\n\n\n  * \"cfrp\"\n\n\n  * \"cfrb\"",
          "example": "voi",
          "type": "string"
        },
        "status": {
          "description": "A report generation status. Possible values: \"inProgress\", \"success\", \"failure\".",
          "example": "inProgress",
          "type": "string"
        },
        "createdDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "id",
        "portfolioId",
        "type",
        "status",
        "createdDate"
      ]
    },
    "Transaction": {
      "title": "Transaction",
      "type": "object",
      "properties": {
        "id": {
          "description": "A transaction ID",
          "example": 21284820852,
          "type": "integer",
          "format": "int64"
        },
        "amount": {
          "description": "The total amount of the transaction. Transactions for deposits are positive values, withdrawals and debits are negative values.",
          "example": -828.9,
          "type": "number",
          "format": "double"
        },
        "accountId": {
          "description": "An account ID represented as a number",
          "example": 5011648377,
          "type": "integer",
          "format": "int64"
        },
        "customerId": {
          "description": "A customer ID represented as a number. See Add Customer API for how to create a customer ID.",
          "example": 1005061234,
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "description": "One of \"active\", \"pending\", or \"shadow\" (see [Pending and Shadow Transactions](https://docs.finicity.com/pending-and-shadow-transactions/))",
          "example": "active",
          "type": "string"
        },
        "description": {
          "description": "The description value is from the financial institution (FI), often known as the payee. The value \"No description provided by institution\" is returned when the FI doesn't provide one",
          "example": "Buy Stock",
          "type": "string"
        },
        "memo": {
          "description": "The institution must provide either a description, a memo, or both. We recommended concatenating the two fields into a single value.",
          "example": "UWM HOLDINGS CORPORATION - CLASS A COMMON STOCK",
          "type": "string"
        },
        "type": {
          "description": "If provided by the institution, the following values may be returned in the field of a record:\n* \"atm\"\n\n* \"cash\"\n\n* \"check\"\n\n* \"credit\"\n\n* \"debit\"\n\n* \"deposit\"\n\n* \"directDebit\"\n\n* \"directDeposit\"\n\n* \"dividend\"\n\n* \"fee\"\n\n* \"interest\"\n\n* \"other\"\n\n* \"payment\"\n\n* \"pointOfSale\"\n\n* \"repeatPayment\"\n\n* \"serviceCharge\"\n\n* \"transfer\"",
          "example": "atm",
          "type": "string"
        },
        "transactionDate": {
          "description": "A date in Unix epoch time (in seconds). Represents the timestamp of the transaction when it occurred. See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "postedDate": {
          "description": "A date in Unix epoch time (in seconds). Represents the timestamp of the transaction when it was posted or cleared by the institution. This value isn't required for student loan transaction data. See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "createdDate": {
          "description": "A date in Unix epoch time (in seconds). Represents the timestamp of the transaction when it was added to our platform. See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "firstEffectiveDate": {
          "description": "A date in Unix epoch time (in seconds). Represents the first timestamp of the transaction recorded in the `effectiveDate` field. See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "effectiveDate": {
          "description": "A date in Unix epoch time (in seconds). Represents the timestamp of the transaction when it became effective on an account by an institution. See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "optionExpireDate": {
          "description": "A date in Unix epoch time (in seconds). Represents the timestamp of the transaction expiration date when it became expires on an account by an institution. See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "checkNum": {
          "description": "The check number of the transaction",
          "example": 299,
          "type": "integer",
          "format": "int32"
        },
        "escrowAmount": {
          "description": "The portion of the transaction allocated to escrow",
          "example": 2534,
          "type": "number",
          "format": "double"
        },
        "feeAmount": {
          "description": "The portion of the overall transaction amount applied to fees",
          "example": 0.51,
          "type": "number",
          "format": "double"
        },
        "suspenseAmount": {
          "description": "Temporarily hold funds if you overpay or underpay your monthly payment",
          "example": 0.25,
          "type": "number",
          "format": "double"
        },
        "interestAmount": {
          "description": "The portion of the transaction allocated to interest",
          "example": 132,
          "type": "number",
          "format": "double"
        },
        "principalAmount": {
          "description": "The portion of the transaction allocated to principal",
          "example": 32560,
          "type": "number",
          "format": "double"
        },
        "optionStrikePrice": {
          "description": "The strike price of the option contract",
          "example": 32560,
          "type": "number",
          "format": "double"
        },
        "unitQuantity": {
          "description": "The number of units (individual shares) in the transaction",
          "example": 150,
          "type": "integer",
          "format": "int32"
        },
        "unitPrice": {
          "description": "Share price for the investment unit: stocks, mutual funds, ETFs",
          "example": 5.53,
          "type": "number",
          "format": "double"
        },
        "categorization": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Categorization"
            },
            {
              "description": "Categorization Record"
            }
          ]
        },
        "runningBalanceAmount": {
          "description": "The ending balance after the transaction was posted",
          "example": 1000,
          "type": "number",
          "format": "double"
        },
        "subaccountSecurityType": {
          "description": "The type of sub account the funds came from",
          "example": "MARGIN",
          "type": "string"
        },
        "commissionAmount": {
          "description": "Transaction commission",
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "ticker": {
          "description": "Ticker symbol for the investment related to the transaction",
          "example": "UWMC",
          "type": "string"
        },
        "investmentTransactionType": {
          "description": "Keywords in the `description` and `memo` fields were used to translate investment transactions into these types.\n\nPossible values: \n* \"cancel\"\n\n* \"purchaseToClose\"\n\n* \"purchaseToCover\"\n\n* \"contribution\"\n\n* \"optionExercise\"\n\n* \"optionExpiration\"\n\n* \"fee\"\n\n* \"soldToClose\"\n\n* \"soldToOpen\"\n\n* \"split\"\n\n* \"transfer\"\n\n* \"returnOfCapital\"\n\n* \"income\"\n\n* \"purchased\"\n\n* \"sold\"\n\n* \"dividendreInvest\"\n\n* \"tax\"\n\n* \"dividend\"\n\n* \"reinvestOfIncome\"\n\n* \"interest\"\n\n* \"deposit\"\n\n* \"otherInfo\"",
          "example": "transfer",
          "type": "string"
        },
        "taxesAmount": {
          "description": "Taxes applicable to the investment trade",
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "currencySymbol": {
          "description": "If the foreign amount value is present then this is the currency code of that foreign amount",
          "example": "USD",
          "type": "string"
        },
        "incomeType": {
          "description": "Capital gains applied in short, long, or miscellaneous terms for tax purposes",
          "example": "DIV",
          "type": "string"
        },
        "splitDenominator": {
          "description": "Denominator of the stock split for the transaction",
          "example": 152,
          "type": "number",
          "format": "double"
        },
        "splitNumerator": {
          "description": "Numerator of the stock split for the transaction",
          "example": 20,
          "type": "number",
          "format": "double"
        },
        "sharesPerContract": {
          "description": "Shares per contract of the underlying stock option",
          "example": 100,
          "type": "number",
          "format": "double"
        },
        "subAccountFund": {
          "description": "The sub account where the funds came from",
          "example": "MARGIN",
          "type": "string"
        },
        "securityId": {
          "description": "The security ID of the transaction",
          "example": "91823B109",
          "type": "string"
        },
        "securityIdType": {
          "description": "The security type. This field is related to the `securityId` field. Possible values:\n* \"CUSIP\"\n\n* \"ISIN\"\n\n* \"SEDOL\"\n\n* \"SICC\"\n\n* \"VALOR\"\n\n* \"WKN\"",
          "example": "CUSIP",
          "type": "string"
        }
      },
      "required": [
        "id",
        "amount",
        "accountId",
        "customerId",
        "status",
        "description",
        "createdDate",
        "categorization"
      ]
    },
    "PortfolioSummary": {
      "title": "PortfolioSummary",
      "type": "object",
      "properties": {
        "portfolioId": {
          "description": "A unique identifier that will be consistent across all reports created for the same customer",
          "example": "y4zsgccj4xpw-6-port",
          "type": "string"
        },
        "reports": {
          "description": "A list of reports in the portfolio",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PortfolioReport"
          }
        }
      },
      "required": [
        "portfolioId",
        "reports"
      ]
    },
    "PortfolioWithConsumerSummary": {
      "title": "PortfolioWithConsumerSummary",
      "type": "object",
      "properties": {
        "portfolioId": {
          "description": "A unique identifier that will be consistent across all reports created for the same customer",
          "example": "y4zsgccj4xpw-6-port",
          "type": "string"
        },
        "reports": {
          "description": "A list of reports in the portfolio",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PortfolioReport"
          }
        },
        "consumer": {
          "$ref": "#/definitions/PortfolioConsumer"
        }
      },
      "required": [
        "portfolioId",
        "reports",
        "consumer"
      ]
    },
    "ReportSummaries": {
      "title": "ReportSummaries",
      "type": "object",
      "properties": {
        "reports": {
          "description": "Data pertaining to each report",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportSummary"
          }
        }
      },
      "required": [
        "reports"
      ]
    },
    "TxVerifyInterview": {
      "title": "TxVerifyInterview",
      "type": "object",
      "properties": {
        "assetId": {
          "description": "An asset ID. Generated by Connect or by using the Store Customer Pay Statement API.",
          "example": "097545c5-1c2a-4f20-a5ef-77f0820344c9-2018601178",
          "type": "string"
        },
        "accounts": {
          "description": "An array of account IDs to be included in the report (all accounts will be included if not set)",
          "example": [
            "5011648377",
            "5011648378",
            "5011648379"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "assetId"
      ]
    },
    "Categorization": {
      "title": "Categorization",
      "description": "Categorization Record",
      "type": "object",
      "properties": {
        "normalizedPayeeName": {
          "description": "A normalized payee, derived from the transaction's description and memo fields",
          "example": "Mad Science Research",
          "type": "string"
        },
        "category": {
          "description": "The different categories for transactions.\n* \"ATM Fee\"\n\n* \"Advertising\"\n\n* \"Air Travel\"\n\n* \"Alcohol & Bars\"\n\n* \"Allowance\"\n\n* \"Amusement\"\n\n* \"Arts\"\n\n* \"Auto & Transport\"\n\n* \"Auto Insurance\"\n\n* \"Auto Payment\"\n\n* \"Baby Supplies\"\n\n* \"Babysitter & Daycare\"\n\n* \"Bank Fee\"\n\n* \"Bills & Utilities\"\n\n* \"Bonus\"\n\n* \"Books\"\n\n* \"Books & Supplies\"\n\n* \"Business Services\"\n\n* \"Buy\"\n\n* \"Cash & ATM\"\n\n* \"Charity\"\n\n* \"Check\"\n\n* \"Child Support\"\n\n* \"Clothing\"\n\n* \"Coffee Shops\"\n\n* \"Credit Card Payment\"\n\n* \"Dentist\"\n\n* \"Deposit\"\n\n* \"Dividend & Cap Gains\"\n\n* \"Doctor\"\n\n* \"Education\"\n\n* \"Electronics & Software\"\n\n* \"Entertainment\"\n\n* \"Eyecare\"\n\n* \"Fast Food\"\n\n* \"Federal Tax\"\n\n* \"Fees & Charges\"\n\n* \"Finance Charge\"\n\n* \"Financial\"\n\n* \"Financial Advisor\"\n\n* \"Food & Dining\"\n\n* \"Furnishings\"\n\n* \"Gas & Fuel\"\n\n* \"Gift\"\n\n* \"Gifts & Donations\"\n\n* \"Groceries\"\n\n* \"Gym\"\n\n* \"Hair\"\n\n* \"Health & Fitness\"\n\n* \"Health Insurance\"\n\n* \"Hobbies\"\n\n* \"Home\"\n\n* \"Home Improvement\"\n\n* \"Home Insurance\"\n\n* \"Home Phone\"\n\n* \"Home Services\"\n\n* \"Home Supplies\"\n\n* \"Hotel\"\n\n* \"Income\"\n\n* \"Interest Income\"\n\n* \"Internet\"\n\n* \"Investments\"\n\n* \"Kids\"\n\n* \"Kids Activities\"\n\n* \"Late Fee\"\n\n* \"Laundry\"\n\n* \"Lawn & Garden\"\n\n* \"Legal\"\n\n* \"Life Insurance\"\n\n* \"Loan Fees and Charges\"\n\n* \"Loan Insurance\"\n\n* \"Loan Interest\"\n\n* \"Loan Payment\"\n\n* \"Loan Principal\"\n\n* \"Loans\"\n\n* \"Local Tax\"\n\n* \"Low Balance\"\n\n* \"Mobile Phone\"\n\n* \"Mortgage & Rent\"\n\n* \"Movies & DVDs\"\n\n* \"Music\"\n\n* \"Newspapers & Magazines\"\n\n* \"Office Supplies\"\n\n* \"Parking\"\n\n* \"Paycheck\"\n\n* \"Personal Care\"\n\n* \"Pet Food & Supplies\"\n\n* \"Pet Grooming\"\n\n* \"Pets\"\n\n* \"Pharmacy\"\n\n* \"Printing\"\n\n* \"Property Tax\"\n\n* \"Public Transportation\"\n\n* \"Reimbursement\"\n\n* \"Rental Car & Taxi\"\n\n* \"Restaurants\"\n\n* \"Sales Tax\"\n\n* \"Sell\"\n\n* \"Services & Parts\"\n\n* \"Service Fee\"\n\n* \"Shipping\"\n\n* \"Shopping\"\n\n* \"Spa & Massage\"\n\n* \"Sporting Goods\"\n\n* \"Sports\"\n\n* \"State Tax\"\n\n* \"Streaming Services\"\n\n* \"Student Loan\"\n\n* \"Taxes\"\n\n* \"Television\"\n\n* \"Toys\"\n\n* \"Trade Commissions\"\n\n* \"Transfer\"\n\n* \"Transfer for Cash Spending\"\n\n* \"Travel\"\n\n* \"Tuition\"\n\n* \"Uncategorized\"\n\n* \"Utilities\"\n\n* \"Vacation\"\n\n* \"Veterinary\"\n\n* \"Internet / Broadband Charges\"",
          "example": "ATM Fee",
          "type": "string"
        },
        "city": {
          "description": "A city",
          "example": "Murray",
          "type": "string"
        },
        "state": {
          "description": "A state",
          "example": "UT",
          "type": "string"
        },
        "postalCode": {
          "description": "A ZIP code",
          "example": "84123",
          "type": "string"
        },
        "country": {
          "description": "A country code",
          "example": "USA",
          "type": "string"
        },
        "bestRepresentation": {
          "description": "Combines the `description` and `memo` data together, removing duplicated information and numbers and special characters",
          "example": "VERIZON WIRELESS PAYMENTS",
          "type": "string"
        }
      },
      "required": [
        "normalizedPayeeName",
        "category",
        "country"
      ]
    },
    "Birthday": {
      "title": "Birthday",
      "description": "A birth date",
      "type": "object",
      "properties": {
        "year": {
          "description": "The birthday 4-digit year",
          "example": 1989,
          "type": "integer",
          "format": "int32"
        },
        "month": {
          "description": "The birthday 2-digit month (1 is January)",
          "example": 8,
          "type": "integer",
          "format": "int32"
        },
        "dayOfMonth": {
          "description": "The birthday 2-digit day-of-month",
          "example": 13,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PayStatementData": {
      "title": "PayStatementData",
      "description": "Data to be included within the pay statement report",
      "type": "object",
      "properties": {
        "assetIds": {
          "description": "A list of pay statement asset IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "extractEarnings": {
          "description": "Field to indicate whether to extract the earnings on all pay statements",
          "example": true,
          "type": "boolean",
          "default": true
        },
        "extractDeductions": {
          "description": "Field to indicate whether to extract the deductions on all pay statements",
          "example": true,
          "type": "boolean",
          "default": false
        },
        "extractDirectDeposit": {
          "description": "Field to indicate whether to extract the direct deposits on all pay statements",
          "example": true,
          "type": "boolean",
          "default": true
        }
      },
      "required": [
        "assetIds"
      ]
    },
    "Report": {
      "title": "Report",
      "description": "A report",
      "type": "object",
      "properties": {
        "id": {
          "description": "A report ID",
          "example": "u4hstnnak45g",
          "type": "string"
        },
        "customerType": {
          "description": "The type of customer (\"active\" or \"testing\" or \"\" for all types)",
          "example": "active",
          "type": "string"
        },
        "customerId": {
          "description": "A customer ID represented as a number. See Add Customer API for how to create a customer ID.",
          "example": 1005061234,
          "type": "integer",
          "format": "int64"
        },
        "requestId": {
          "description": "Finicity indicator to track all activity associated with this report",
          "example": "cjqm4wtdcn",
          "type": "string"
        },
        "requesterName": {
          "description": "Name of a Finicity partner",
          "example": "Finicity Test API",
          "type": "string"
        },
        "createdDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "description": "Title of the report",
          "example": "Finicity Asset Ready Report (CRA)",
          "type": "string"
        },
        "consumerId": {
          "description": "A consumer ID. See Create Consumer API for how to create a consumer ID.",
          "example": "0bf46322c167b562e6cbed9d40e19a4c",
          "type": "string"
        },
        "consumerSsn": {
          "description": "Last 4 digits of a SSN",
          "example": "9999",
          "type": "string"
        },
        "type": {
          "description": "A report type. Possible values:\n\n  * \"voi\"\n\n\n  * \"voa\"\n\n\n  * \"voaHistory\"\n\n\n  * \"history\"\n\n\n  * \"voieTxVerify\"\n\n\n  * \"voieWithReport\"\n\n\n  * \"voieWithInterview\"\n\n\n  * \"paystatement\"\n\n\n  * \"preQualVoa\"\n\n\n  * \"assetSummary\"\n\n\n  * \"voie\"\n\n\n  * \"transactions\"\n\n\n  * \"statement\"\n\n\n  * \"voiePayroll\"\n\n\n  * \"voeTransactions\"\n\n\n  * \"voePayroll\"\n\n\n  * \"cfrp\"\n\n\n  * \"cfrb\"",
          "example": "voi",
          "type": "string"
        },
        "status": {
          "description": "A report generation status. Possible values: \"inProgress\", \"success\", \"failure\".",
          "example": "inProgress",
          "type": "string"
        },
        "errors": {
          "description": "In case errors occurred during the report generation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorMessage"
          }
        },
        "portfolioId": {
          "description": "A unique identifier that will be consistent across all reports created for the same customer",
          "example": "y4zsgccj4xpw-6-port",
          "type": "string"
        },
        "startDate": {
          "description": "The `postedDate` of the earliest transaction analyzed for the report. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "endDate": {
          "description": "The `postedDate` of the latest transaction analyzed for the report. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "days": {
          "description": "Number of days covered by the report",
          "example": 730,
          "type": "integer",
          "format": "int64"
        },
        "seasoned": {
          "description": "\"true\" if the report covers more than 365 days",
          "example": true,
          "type": "boolean"
        },
        "institutions": {
          "description": "A list of institution records, including information about the individual accounts used in this report",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportInstitution2"
          }
        },
        "cashFlowBalanceSummary": {
          "$ref": "#/definitions/CashFlowCashFlowBalanceSummary"
        },
        "cashFlowCreditSummary": {
          "$ref": "#/definitions/CashFlowCashFlowCreditSummary"
        },
        "cashFlowDebitSummary": {
          "$ref": "#/definitions/CashFlowCashFlowDebitSummary"
        },
        "cashFlowCharacteristicsSummary": {
          "$ref": "#/definitions/CashFlowCashFlowCharacteristicsSummary"
        },
        "possibleLoanDeposits": {
          "description": "A possible loan deposits record",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CashFlowPossibleLoanDeposits"
          }
        },
        "consolidatedAvailableBalance": {
          "description": "The sum of available balance for all of the accounts included in the report",
          "example": 1929.57,
          "type": "number",
          "format": "double"
        },
        "assets": {
          "$ref": "#/definitions/PrequalificationReportAssetSummary"
        },
        "reportStyle": {
          "example": "paystatement",
          "type": "string"
        },
        "numberOfBillableAssets": {
          "description": "Total number of billable pay statements included in the report",
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "assetIds": {
          "description": "The pay statements included in the report",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "payStatements": {
          "description": "Extracted pay statement details",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VOIEPayStatement2"
          }
        },
        "assetId": {
          "description": "An asset ID. Generated by Connect or by using the Store Customer Pay Statement API.",
          "example": "097545c5-1c2a-4f20-a5ef-77f0820344c9-2018601178",
          "type": "string"
        },
        "employmentHistory": {
          "description": "An array of employment histories, one for each of the consumer's verified employers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PayrollEmploymentHistory"
          }
        },
        "income": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportIncomeStreamSummary"
          }
        }
      },
      "required": [
        "id",
        "customerType",
        "customerId",
        "requestId",
        "requesterName",
        "createdDate",
        "title",
        "consumerId",
        "consumerSsn",
        "type",
        "status"
      ]
    },
    "CashFlowMonthlyCashFlowCredits": {
      "title": "CashFlowMonthlyCashFlowCredits",
      "type": "object",
      "properties": {
        "month": {
          "description": "One instance for each complete calendar month in the report",
          "example": 1512111600,
          "type": "integer",
          "format": "int64"
        },
        "numberOfCredits": {
          "description": "Number of credits by month",
          "example": "3",
          "type": "string"
        },
        "totalCreditsAmount": {
          "description": "Total amount of credits by month",
          "example": 5000,
          "type": "number",
          "format": "double"
        },
        "largestCredit": {
          "description": "Largest credit by month",
          "example": 2000,
          "type": "number",
          "format": "double"
        },
        "numberOfCreditsLessTransfers": {
          "description": "Number of credits by month (less transfers)",
          "example": "2",
          "type": "string"
        },
        "totalCreditsAmountLessTransfers": {
          "description": "Total amount of credits by month (less transfers)",
          "example": 4000,
          "type": "number",
          "format": "double"
        },
        "averageCreditAmount": {
          "description": "The average credit amount",
          "example": 500,
          "type": "number",
          "format": "double"
        },
        "estimatedNumberOfLoanDeposits": {
          "description": "The estimated number of loan deposits",
          "example": "0",
          "type": "string"
        },
        "estimatedLoanDepositAmount": {
          "description": "The estimated loan deposit amount",
          "example": 0,
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "month",
        "numberOfCredits",
        "totalCreditsAmount",
        "largestCredit",
        "numberOfCreditsLessTransfers",
        "totalCreditsAmountLessTransfers",
        "averageCreditAmount",
        "estimatedNumberOfLoanDeposits",
        "estimatedLoanDepositAmount"
      ]
    },
    "CashFlowCashFlowCredit": {
      "title": "CashFlowCashFlowCredit",
      "type": "object",
      "properties": {
        "monthlyCashFlowCredits": {
          "description": "List of attributes for each month",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CashFlowMonthlyCashFlowCredits"
          }
        },
        "twelveMonthCreditTotal": {
          "description": "Sum of all credit transactions for each month by account",
          "example": 1200,
          "type": "number",
          "format": "double"
        },
        "twelveMonthCreditTotalLessTransfers": {
          "description": "Sum of all monthly credit transactions without transfers for the account",
          "example": 1000,
          "type": "number",
          "format": "double"
        },
        "sixMonthCreditTotal": {
          "description": "Sum of six month credit transactions",
          "example": 750,
          "type": "number",
          "format": "double"
        },
        "sixMonthCreditTotalLessTransfers": {
          "description": "Sum of six month credit transactions without transfers",
          "example": 500,
          "type": "number",
          "format": "double"
        },
        "twoMonthCreditTotal": {
          "description": "Sum of two month credit transactions",
          "example": 150,
          "type": "number",
          "format": "double"
        },
        "twoMonthCreditTotalLessTransfers": {
          "description": "Sum of two month credit transactions without transfers",
          "example": 100,
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "monthlyCashFlowCredits",
        "twelveMonthCreditTotal",
        "twelveMonthCreditTotalLessTransfers",
        "sixMonthCreditTotal",
        "sixMonthCreditTotalLessTransfers",
        "twoMonthCreditTotal",
        "twoMonthCreditTotalLessTransfers"
      ]
    },
    "TransactionsReportAccount": {
      "title": "TransactionsReportAccount",
      "description": "Fields used for the Transaction History Report (CRA products)",
      "type": "object",
      "properties": {
        "id": {
          "description": "The Finicity account ID",
          "example": 1000075473,
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "description": "The account name from the financial institution.",
          "example": "Super Checking",
          "type": "string"
        },
        "number": {
          "description": "The account number from the financial institution (obfuscated)",
          "example": "5015",
          "type": "string"
        },
        "type": {
          "description": "The list of supported account types.\n* \"checking\": Standard checking\n* \"savings\": Standard savings\n* \"cd\": Certificates of deposit\n* \"moneyMarket\": Money Market\n* \"creditCard\": Standard credit cards\n* \"lineOfCredit\": Home equity, line of credit\n* \"investment\": Generic investment (no details)\n* \"investmentTaxDeferred\": Generic tax-advantaged investment (no details)\n* \"employeeStockPurchasePlan\": ESPP, Employee Stock Ownership Plans (ESOP), Stock Purchase Plans\n* \"ira\": Individual Retirement Account (not Rollover or Roth)\n* \"401k\": 401K Plan\n* \"roth\": Roth IRA, Roth 401K\n* \"403b\": 403B Plan\n* \"529plan\": 529 Plan (True value is 529)\n* \"rollover\": Rollover IRA\n* \"ugma\": Uniform Gifts to Minors Act\n* \"utma\": Uniform Transfers to Minors Act\n* \"keogh\": Keogh Plan\n* \"457plan\": 457 Plan (True value is 457)\n* \"401a\": 401A Plan\n* \"brokerageAccount\": Brokerage Account\n* \"educationSavings\": Education Savings Account that is not a 529\n* \"healthSavingsAccount\": HSA (Health Savings Accounts)\n* \"pension\": Pension\n* \"profitSharingPlan\": Profit Sharing Plan\n* \"roth401k\": Roth 401K\n* \"sepIRA\": Simplified Employee Pension IRA\n* \"simpleIRA\": Simple IRA\n* \"thriftSavingsPlan\": Thrift Savings Plan\n* \"variableAnnuity\": Variable Annuity\n* \"cryptocurrency\": Cryptocurrency Wallet, Cryptocurrency Account\n* \"mortgage\": Standard Mortgages\n* \"loan\": Auto loans, equity loans, other loans\n* \"studentLoan\": Student Loan\n* \"studentLoanGroup\": Student Loan Group\n* \"studentLoanAccount\": Student Loan Account",
          "example": "checking",
          "type": "string"
        },
        "aggregationStatusCode": {
          "description": "The status of the most recent aggregation attempt for this account. Note: non-zero means the account was not accessed successfully for this report, and additional fields for this account may not be reliable.",
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "balance": {
          "description": "The cleared balance of the account as-of `balanceDate`",
          "example": 100000,
          "type": "number",
          "format": "double"
        },
        "balanceDate": {
          "description": "A timestamp showing when the balance was captured",
          "example": 1594676289,
          "type": "integer",
          "format": "int64"
        },
        "transactions": {
          "description": "a list of transaction records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportTransaction"
          }
        }
      }
    },
    "VOAReportAccount": {
      "title": "VOAReportAccount",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID of the account",
          "example": 1000023996,
          "type": "integer",
          "format": "int64"
        },
        "number": {
          "description": "The account number from the institution (all digits except the last four are obfuscated)",
          "example": "1111",
          "type": "string"
        },
        "ownerName": {
          "description": "The name(s) of the account owner(s). This field is optional. If no owner information is available, this field will not appear in the report.",
          "example": "JOHN DOE",
          "type": "string"
        },
        "ownerAddress": {
          "description": "The mailing address of the account owner(s). This field is optional. If no owner information is available, this field will not appear in the report.",
          "example": "924 GAINSVILLE HIGHWAY SUITE 130 BUFORD, GA 30518",
          "type": "string"
        },
        "name": {
          "description": "The account name from the institution",
          "example": "Checking",
          "type": "string"
        },
        "type": {
          "description": "One of the values from account types",
          "example": "checking",
          "type": "string"
        },
        "availableBalance": {
          "description": "The available balance for the account",
          "example": 501.24,
          "type": "number",
          "format": "double"
        },
        "aggregationStatusCode": {
          "description": "The status of the most recent aggregation attempt",
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "balance": {
          "description": "The cleared balance of the account as-of balanceDate",
          "example": 501.24,
          "type": "number",
          "format": "double"
        },
        "balanceDate": {
          "description": "A timestamp showing when the balance was captured",
          "example": 1588350276,
          "type": "integer",
          "format": "int64"
        },
        "averageMonthlyBalance": {
          "description": "The average monthly balance of this account",
          "example": 501.02,
          "type": "number",
          "format": "double"
        },
        "totNumberInsufficientFundsFeeDebitTxAccount": {
          "description": "The count for the total number of insufficient funds transactions, based on the `fromDate` of the report.",
          "example": 0,
          "type": "integer",
          "format": "int64"
        },
        "totNumberInsufficientFundsFeeDebitTxOver2MonthsAccount": {
          "description": "The count for the total number of insufficient funds transactions for the last two months, based on the `fromDate` of the report.",
          "example": 0,
          "type": "integer",
          "format": "int64"
        },
        "totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount": {
          "description": "The number of days since the most recent insufficient funds transaction, based on the `fromDate` of the report.",
          "example": 120,
          "type": "integer",
          "format": "int64"
        },
        "transactions": {
          "description": "a list of transaction records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportTransaction"
          }
        },
        "details": {
          "$ref": "#/definitions/AccountDetails"
        },
        "asset": {
          "$ref": "#/definitions/PrequalificationReportAssetSummary"
        }
      }
    },
    "VOAWithIncomeReportAccount": {
      "title": "VOAWithIncomeReportAccount",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID of the account",
          "example": 1000023996,
          "type": "integer",
          "format": "int64"
        },
        "number": {
          "description": "The account number from the institution (all digits except the last four are obfuscated)",
          "example": "1111",
          "type": "string"
        },
        "ownerName": {
          "description": "The name(s) of the account owner(s). This field is optional. If no owner information is available, this field will not appear in the report.",
          "example": "JOHN DOE",
          "type": "string"
        },
        "ownerAddress": {
          "description": "The mailing address of the account owner(s). This field is optional. If no owner information is available, this field will not appear in the report.",
          "example": "924 GAINSVILLE HIGHWAY SUITE 130 BUFORD, GA 30518",
          "type": "string"
        },
        "name": {
          "description": "The account name from the institution",
          "example": "Checking",
          "type": "string"
        },
        "type": {
          "description": "One of the values from account types",
          "example": "checking",
          "type": "string"
        },
        "availableBalance": {
          "description": "The available balance for the account",
          "example": 501.24,
          "type": "number",
          "format": "double"
        },
        "aggregationStatusCode": {
          "description": "The status of the most recent aggregation attempt",
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "balance": {
          "description": "The cleared balance of the account as-of balanceDate",
          "example": 501.24,
          "type": "number",
          "format": "double"
        },
        "balanceDate": {
          "description": "A timestamp showing when the balance was captured",
          "example": 1588350276,
          "type": "integer",
          "format": "int64"
        },
        "averageMonthlyBalance": {
          "description": "The average monthly balance of this account",
          "example": 501.02,
          "type": "number",
          "format": "double"
        },
        "totNumberInsufficientFundsFeeDebitTxAccount": {
          "description": "The count for the total number of insufficient funds transactions, based on the `fromDate` of the report.",
          "example": 0,
          "type": "integer",
          "format": "int64"
        },
        "totNumberInsufficientFundsFeeDebitTxOver2MonthsAccount": {
          "description": "The count for the total number of insufficient funds transactions for the last two months, based on the `fromDate` of the report.",
          "example": 0,
          "type": "integer",
          "format": "int64"
        },
        "totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount": {
          "description": "The number of days since the most recent insufficient funds transaction, based on the `fromDate` of the report.",
          "example": 120,
          "type": "integer",
          "format": "int64"
        },
        "transactions": {
          "description": "a list of transaction records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportTransaction"
          }
        },
        "details": {
          "$ref": "#/definitions/AccountDetails"
        },
        "asset": {
          "$ref": "#/definitions/PrequalificationReportAssetSummary"
        },
        "incomeStreams": {
          "description": "A list of income stream records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VOAIReportIncomeStream"
          }
        }
      }
    },
    "VOETransactionsReportAccount": {
      "title": "VOETransactionsReportAccount",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID of the account",
          "example": 1000023996,
          "type": "integer",
          "format": "int64"
        },
        "number": {
          "description": "The account number from the institution (all digits except the last four are obfuscated)",
          "example": "1111",
          "type": "string"
        },
        "ownerName": {
          "description": "The name(s) of the account owner(s). This field is optional. If no owner information is available, this field will not appear in the report.",
          "example": "JOHN DOE",
          "type": "string"
        },
        "ownerAddress": {
          "description": "The mailing address of the account owner(s). This field is optional. If no owner information is available, this field will not appear in the report.",
          "example": "924 GAINSVILLE HIGHWAY SUITE 130 BUFORD, GA 30518",
          "type": "string"
        },
        "name": {
          "description": "The account name from the institution",
          "example": "Checking",
          "type": "string"
        },
        "type": {
          "description": "One of the values from account types",
          "example": "checking",
          "type": "string"
        },
        "aggregationStatusCode": {
          "description": "The status of the most recent aggregation attempt",
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "incomeStreams": {
          "description": "A list of income stream records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VOETransactionsReportIncomeStream"
          }
        }
      }
    },
    "VOIETXVerifyReportAccount": {
      "title": "VOIETXVerifyReportAccount",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID of the account",
          "example": 1000023996,
          "type": "integer",
          "format": "int64"
        },
        "number": {
          "description": "The account number from the institution (all digits except the last four are obfuscated)",
          "example": "1111",
          "type": "string"
        },
        "ownerName": {
          "description": "The name(s) of the account owner(s). This field is optional. If no owner information is available, this field will not appear in the report.",
          "example": "JOHN DOE",
          "type": "string"
        },
        "ownerAddress": {
          "description": "The mailing address of the account owner(s). This field is optional. If no owner information is available, this field will not appear in the report.",
          "example": "924 GAINSVILLE HIGHWAY SUITE 130 BUFORD, GA 30518",
          "type": "string"
        },
        "name": {
          "description": "The account name from the institution",
          "example": "Checking",
          "type": "string"
        },
        "type": {
          "description": "One of the values from account types",
          "example": "checking",
          "type": "string"
        },
        "aggregationStatusCode": {
          "description": "The status of the most recent aggregation attempt",
          "type": "integer",
          "format": "int32"
        },
        "incomeStreams": {
          "description": "A list of income stream records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VOIETXVerifyReportIncomeStream"
          }
        },
        "balance": {
          "description": "The cleared balance of the account as-of `balanceDate`",
          "example": 123.45,
          "type": "number",
          "format": "double"
        },
        "averageMonthlyBalance": {
          "description": "The average monthly balance of this account",
          "example": 301.45,
          "type": "number",
          "format": "double"
        },
        "transactions": {
          "description": "a list of transaction records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportTransaction"
          }
        },
        "availableBalance": {
          "description": "The available balance for the account",
          "example": 123.45,
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "id",
        "number",
        "ownerName",
        "ownerAddress",
        "name",
        "type",
        "aggregationStatusCode",
        "incomeStreams",
        "balance",
        "averageMonthlyBalance",
        "transactions",
        "availableBalance"
      ]
    },
    "VOIReportAccount": {
      "title": "VOIReportAccount",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID of the account",
          "example": 1000023996,
          "type": "integer",
          "format": "int64"
        },
        "number": {
          "description": "The account number from the institution (all digits except the last four are obfuscated)",
          "example": "1111",
          "type": "string"
        },
        "ownerName": {
          "description": "The name(s) of the account owner(s). This field is optional. If no owner information is available, this field will not appear in the report.",
          "example": "JOHN DOE",
          "type": "string"
        },
        "ownerAddress": {
          "description": "The mailing address of the account owner(s). This field is optional. If no owner information is available, this field will not appear in the report.",
          "example": "924 GAINSVILLE HIGHWAY SUITE 130 BUFORD, GA 30518",
          "type": "string"
        },
        "name": {
          "description": "The account name from the institution",
          "example": "Checking",
          "type": "string"
        },
        "type": {
          "description": "One of the values from account types",
          "example": "checking",
          "type": "string"
        },
        "aggregationStatusCode": {
          "description": "The status of the most recent aggregation attempt",
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "incomeStreams": {
          "description": "A list of income stream records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VOIReportIncomeStream"
          }
        },
        "balance": {
          "description": "The cleared balance of the account as-of `balanceDate`",
          "example": 714.16,
          "type": "number",
          "format": "double"
        },
        "averageMonthlyBalance": {
          "description": "The average monthly balance of this account",
          "example": 720.75,
          "type": "number",
          "format": "double"
        },
        "transactions": {
          "description": "a list of transaction records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportTransaction"
          }
        },
        "availableBalance": {
          "description": "The available balance for the account",
          "example": 714.16,
          "type": "number",
          "format": "double"
        },
        "currentBalance": {
          "description": "Current balance of the account",
          "example": 714.16,
          "type": "number",
          "format": "double"
        },
        "beginningBalance": {
          "description": "Beginning balance of account per the time period in the report",
          "example": 714.77,
          "type": "number",
          "format": "double"
        },
        "miscDeposits": {
          "description": "A list of miscellaneous deposits",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportTransaction"
          },
          "minItems": 0,
          "maxItems": 100
        }
      }
    },
    "VOIReportIncomeStream": {
      "title": "VOIReportIncomeStream",
      "type": "object",
      "properties": {
        "id": {
          "description": "Income stream ID",
          "example": "dens28i3vsch-voi1",
          "type": "string"
        },
        "name": {
          "description": "A human-readable name based on the `normalizedPayee` name of the transactions for this income stream",
          "example": "none",
          "type": "string"
        },
        "status": {
          "description": "Possible values: \"ACTIVE\", \"INACTIVE\"",
          "type": "string"
        },
        "estimateInclusion": {
          "description": "Possible values: \"HIGH\", \"MODERATE\", \"LOW\", \"NO\"",
          "type": "string"
        },
        "confidence": {
          "description": "Level of confidence that the deposit stream represents income (example: 85%)",
          "example": 70,
          "type": "integer",
          "format": "int32"
        },
        "cadence": {
          "$ref": "#/definitions/CadenceDetails"
        },
        "netMonthly": {
          "description": "A list of net monthly records. One instance for each complete calendar month in the report.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetMonthly"
          }
        },
        "netAnnual": {
          "description": "Sum of all values in `netMonthlyIncome` over the previous 12 months",
          "example": 110475.7,
          "type": "number",
          "format": "double"
        },
        "projectedNetAnnual": {
          "description": "Projected net income over the next 12 months, across all income streams, based on `netAnnualIncome`",
          "example": 0,
          "type": "number",
          "format": "double"
        },
        "estimatedGrossAnnual": {
          "description": "Before-tax gross annual income (estimated from `netAnnual`) across all income stream in the past 12 months",
          "type": "number",
          "format": "double"
        },
        "projectedGrossAnnual": {
          "description": "Projected gross income over the next 12 months, across all active income streams, based on `projectedNetAnnual`",
          "example": 151609,
          "type": "number",
          "format": "double"
        },
        "averageMonthlyIncomeNet": {
          "description": "Monthly average amount over the previous 24 months",
          "example": 9206.31,
          "type": "number",
          "format": "double"
        },
        "incomeStreamMonths": {
          "description": "The number of months the income transactions are observed",
          "example": 18,
          "type": "integer",
          "format": "int32"
        },
        "transactions": {
          "description": "A list of transaction records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportTransaction"
          }
        }
      },
      "required": [
        "id",
        "name",
        "status",
        "estimateInclusion",
        "confidence",
        "cadence",
        "netMonthly",
        "netAnnual",
        "projectedNetAnnual",
        "estimatedGrossAnnual",
        "projectedGrossAnnual",
        "averageMonthlyIncomeNet",
        "incomeStreamMonths",
        "transactions"
      ]
    },
    "VOETransactionsReportIncomeStream": {
      "title": "VOETransactionsReportIncomeStream",
      "type": "object",
      "properties": {
        "id": {
          "description": "Income stream ID",
          "example": "dens28i3vsch-voah",
          "type": "string"
        },
        "name": {
          "description": "A human-readable name based on the `normalizedPayee` name of the transactions for this income stream",
          "example": "none",
          "type": "string"
        },
        "status": {
          "description": "Possible values: \"ACTIVE\", \"INACTIVE\"",
          "type": "string"
        },
        "estimateInclusion": {
          "description": "Possible values: \"HIGH\", \"MODERATE\", \"LOW\", \"NO\"",
          "type": "string"
        },
        "confidence": {
          "description": "Level of confidence that the deposit stream represents income (example: 85%)",
          "example": 70,
          "type": "integer",
          "format": "int32"
        },
        "cadence": {
          "$ref": "#/definitions/CadenceDetails"
        },
        "daysSinceLastTransaction": {
          "description": "The number of days since the last credit transaction for the particular income stream",
          "example": 15,
          "type": "integer",
          "format": "int32"
        },
        "nextExpectedTransactionDate": {
          "description": "The next expected credit transaction date for the particular income stream, based on the cadence",
          "example": 1572625469,
          "type": "integer",
          "format": "int64"
        },
        "incomeStreamMonths": {
          "description": "The number of months the income transactions are observed",
          "example": 18,
          "type": "integer",
          "format": "int32"
        },
        "transactions": {
          "description": "A list of transaction records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportTransaction"
          }
        }
      },
      "required": [
        "id",
        "name",
        "status",
        "estimateInclusion",
        "confidence",
        "cadence",
        "daysSinceLastTransaction",
        "nextExpectedTransactionDate",
        "incomeStreamMonths",
        "transactions"
      ]
    },
    "VOIETXVerifyReportIncomeStream": {
      "title": "VOIETXVerifyReportIncomeStream",
      "type": "object",
      "properties": {
        "id": {
          "description": "Finicity’s income stream ID",
          "example": "dens28i3vsch-voietxverify",
          "type": "string"
        },
        "name": {
          "description": "A human-readable name based on the `normalizedPayee` name of the transactions for this income stream",
          "example": "none",
          "type": "string"
        },
        "status": {
          "description": "Possible values: \"ACTIVE\", \"INACTIVE\"",
          "type": "string"
        },
        "confidence": {
          "description": "Level of confidence that the deposit stream represents income (example: 85%)",
          "example": 70,
          "type": "integer",
          "format": "int32"
        },
        "cadence": {
          "$ref": "#/definitions/CadenceDetails"
        },
        "netMonthly": {
          "description": "A list of net monthly records. One instance for each complete calendar month in the report.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetMonthly"
          }
        },
        "netAnnual": {
          "description": "Sum of all values in `netMonthlyIncome` over the previous 12 months",
          "example": 110475.7,
          "type": "number",
          "format": "double"
        },
        "projectedNetAnnual": {
          "description": "Projected net income over the next 12 months, across all income streams, based on `netAnnualIncome`",
          "example": 0,
          "type": "number",
          "format": "double"
        },
        "estimatedGrossAnnual": {
          "description": "Before-tax gross annual income (estimated from `netAnnual`) across all income stream in the past 12 months",
          "example": 12321.1,
          "type": "number",
          "format": "double"
        },
        "projectedGrossAnnual": {
          "description": "Projected gross income over the next 12 months, across all active income streams, based on `projectedNetAnnual`",
          "example": 151609,
          "type": "number",
          "format": "double"
        },
        "averageMonthlyIncomeNet": {
          "description": "Monthly average amount over the previous 24 months",
          "example": 9206.31,
          "type": "number",
          "format": "double"
        },
        "incomeStreamMonths": {
          "description": "The number of months the income transactions are observed",
          "example": 24,
          "type": "integer",
          "format": "int32"
        },
        "transactions": {
          "description": "A list of transaction records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportTransaction"
          }
        }
      },
      "required": [
        "id",
        "name",
        "status",
        "confidence",
        "cadence",
        "netMonthly",
        "netAnnual",
        "projectedNetAnnual",
        "estimatedGrossAnnual",
        "projectedGrossAnnual",
        "averageMonthlyIncomeNet",
        "incomeStreamMonths",
        "transactions"
      ]
    },
    "VOAIReportIncomeStream": {
      "title": "VOAIReportIncomeStream",
      "description": "A report income stream record",
      "type": "object",
      "properties": {
        "id": {
          "description": "Income stream ID",
          "example": "dens28i3vsch-voah",
          "type": "string"
        },
        "name": {
          "description": "A human-readable name based on the `normalizedPayee` name of the transactions for this income stream",
          "example": "none",
          "type": "string"
        },
        "status": {
          "description": "Possible values: \"ACTIVE\", \"INACTIVE\"",
          "type": "string"
        },
        "estimateInclusion": {
          "description": "Possible values: \"HIGH\", \"MODERATE\", \"LOW\", \"NO\"",
          "type": "string"
        },
        "confidence": {
          "description": "Level of confidence that the deposit stream represents income (example: 85%)",
          "example": 70,
          "type": "integer",
          "format": "int32"
        },
        "cadence": {
          "$ref": "#/definitions/CadenceDetails"
        },
        "netMonthly": {
          "description": "A list of net monthly records. One instance for each complete calendar month in the report.",
          "example": [
            {
              "month": 1522562400,
              "net": 2004.77
            }
          ],
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetMonthly"
          }
        },
        "netAnnual": {
          "description": "Sum of all values in `netMonthlyIncome` over the previous 12 months",
          "example": 110475.7,
          "type": "number",
          "format": "double"
        },
        "projectedNetAnnual": {
          "description": "Projected net income over the next 12 months, across all income streams, based on `netAnnualIncome`",
          "example": 0,
          "type": "number",
          "format": "double"
        },
        "estimatedGrossAnnual": {
          "description": "Before-tax gross annual income (estimated from `netAnnual`) across all income stream in the past 12 months",
          "type": "number",
          "format": "double"
        },
        "projectedGrossAnnual": {
          "description": "Projected gross income over the next 12 months, across all active income streams, based on `projectedNetAnnual`",
          "example": 151609,
          "type": "number",
          "format": "double"
        },
        "averageMonthlyIncomeNet": {
          "description": "Monthly average amount over the previous 24 months",
          "example": 9206.31,
          "type": "number",
          "format": "double"
        },
        "incomeStreamMonths": {
          "description": "The number of months the income transactions are observed",
          "example": 18,
          "type": "integer",
          "format": "int32"
        },
        "transactions": {
          "description": "A list of transaction records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportTransaction"
          }
        }
      },
      "required": [
        "id",
        "name",
        "status",
        "estimateInclusion",
        "confidence",
        "cadence",
        "netMonthly",
        "netAnnual",
        "projectedNetAnnual",
        "estimatedGrossAnnual",
        "projectedGrossAnnual",
        "averageMonthlyIncomeNet",
        "incomeStreamMonths",
        "transactions"
      ]
    },
    "CadenceDetails": {
      "title": "CadenceDetails",
      "type": "object",
      "properties": {
        "startDate": {
          "description": "`postedDate` of the first deposit transaction",
          "example": 1577986990,
          "type": "integer",
          "format": "int64"
        },
        "stopDate": {
          "description": "`postedDate` of the final deposit transaction (omitted if status is active)",
          "example": 1587986990,
          "type": "integer",
          "format": "int64"
        },
        "days": {
          "description": "Number of days between the recurring deposits",
          "example": 14,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "NetMonthly": {
      "title": "NetMonthly",
      "type": "object",
      "properties": {
        "month": {
          "description": "Timestamp for the first day of this month",
          "example": 1522562400,
          "type": "integer",
          "format": "int64"
        },
        "net": {
          "description": "Total income during the given month, across all income streams",
          "example": 2004.77,
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "month",
        "net"
      ]
    },
    "CashFlowReportAccount": {
      "title": "CashFlowReportAccount",
      "type": "object",
      "properties": {
        "id": {
          "description": "Finicity account ID",
          "example": "6681984",
          "type": "string"
        },
        "ownerName": {
          "description": "The name(s) of the account owner(s), retrieved from the institution.",
          "example": "PATRICK & LORRAINE PURCHASER",
          "type": "string"
        },
        "ownerAddress": {
          "description": "The mailing address of the account owner, retrieved from the institution.",
          "example": "7195 BELMONT ST. PARLIN, NJ 08859",
          "type": "string"
        },
        "name": {
          "description": "The account name from the institution",
          "example": "Checking",
          "type": "string"
        },
        "number": {
          "description": "The account number from the institution (obfuscated)",
          "example": "XX1111",
          "type": "string"
        },
        "type": {
          "description": "CFR: `ALL` (`checking` / `savings` / `loan` / `mortgage` / `credit card` / `CD` / `MM` / `investment`...)",
          "example": "checking",
          "type": "string"
        },
        "aggregationStatusCode": {
          "description": "The status of the most recent aggregation attempt for this account (non-zero means the account was not accessed successfully for this report, and additional fields for this account may not be reliable)",
          "example": "0",
          "type": "string"
        },
        "currentBalance": {
          "description": "The cleared balance of the account as-of `balanceDate`",
          "example": 100000,
          "type": "number",
          "format": "double"
        },
        "availableBalance": {
          "description": "Available balance",
          "example": 1000,
          "type": "number",
          "format": "double"
        },
        "balanceDate": {
          "description": "A timestamp showing when the `balance` was captured",
          "example": 1614880526,
          "type": "integer",
          "format": "int64"
        },
        "transactions": {
          "description": "a list of transaction records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportTransaction"
          }
        },
        "cashFlowBalance": {
          "$ref": "#/definitions/CashFlowCashFlowBalance"
        },
        "cashFlowCredit": {
          "$ref": "#/definitions/CashFlowCashFlowCredit"
        },
        "cashFlowDebit": {
          "$ref": "#/definitions/CashFlowCashFlowDebit"
        },
        "cashFlowCharacteristic": {
          "$ref": "#/definitions/CashFlowCashFlowCharacteristic"
        }
      }
    },
    "CashFlowMonthlyCashFlowCharacteristics": {
      "title": "CashFlowMonthlyCashFlowCharacteristics",
      "type": "object",
      "properties": {
        "month": {
          "description": "One instance for each complete calendar month in the report",
          "example": 1512111600,
          "type": "integer",
          "format": "int64"
        },
        "totalCreditsLessTotalDebits": {
          "description": "Total Credits - Total Debits by month",
          "example": 15000,
          "type": "number",
          "format": "double"
        },
        "totalCreditsLessTotalDebitsLessTransfers": {
          "description": "Total Credits - Total Debits by month (Without Transfers)",
          "example": 11000,
          "type": "number",
          "format": "double"
        },
        "averageTransactionAmount": {
          "description": "Average transaction amount by month",
          "example": 10,
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "month",
        "totalCreditsLessTotalDebits",
        "totalCreditsLessTotalDebitsLessTransfers",
        "averageTransactionAmount"
      ]
    },
    "CashFlowCashFlowCharacteristic": {
      "title": "CashFlowCashFlowCharacteristic",
      "type": "object",
      "properties": {
        "monthlyCashFlowCharacteristics": {
          "description": "List of attributes for each month",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CashFlowMonthlyCashFlowCharacteristics"
          }
        },
        "averageMonthlyNet": {
          "description": "Average (Total Credits - Total Debits) for the account",
          "example": 2350,
          "type": "number",
          "format": "double"
        },
        "averageMonthlyNetLessTransfers": {
          "description": "Average (Total Credits - Total Debits) without transfers for the account",
          "example": 1000,
          "type": "number",
          "format": "double"
        },
        "twelveMonthTotalNet": {
          "description": "Sum of all monthly (Total Credits - Total Debits) each month for the account",
          "example": 12500,
          "type": "number",
          "format": "double"
        },
        "twelveMonthTotalNetLessTransfers": {
          "description": "Sum of all monthly (Total Credits - Total Debits) without transfers for the account",
          "example": 12400,
          "type": "number",
          "format": "double"
        },
        "sixMonthAverageTotalCreditsLessTotalDebits": {
          "description": "6 Month Average (Total Credits - Total Debits)",
          "example": 55555,
          "type": "number",
          "format": "double"
        },
        "sixMonthAverageTotalCreditsLessTotalDebitsLessTransfers": {
          "description": "6 Month Average (Total Credits - Total Debits) - (Without Transfers)",
          "example": 55555,
          "type": "number",
          "format": "double"
        },
        "twoMonthAverageTotalCreditsLessTotalDebits": {
          "description": "2 Month Average (Total Credits - Total Debits)",
          "example": 55555,
          "type": "number",
          "format": "double"
        },
        "twoMonthAverageTotalCreditsLessTotalDebitsLessTransfers": {
          "description": "2 Month Average (Total Credits - Total Debits) - (Without Transfers)",
          "example": 55555,
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "monthlyCashFlowCharacteristics",
        "averageMonthlyNet",
        "averageMonthlyNetLessTransfers",
        "twelveMonthTotalNet",
        "twelveMonthTotalNetLessTransfers",
        "sixMonthAverageTotalCreditsLessTotalDebits",
        "sixMonthAverageTotalCreditsLessTotalDebitsLessTransfers",
        "twoMonthAverageTotalCreditsLessTotalDebits",
        "twoMonthAverageTotalCreditsLessTotalDebitsLessTransfers"
      ]
    },
    "CashFlowMonthlyCashFlowBalances": {
      "title": "CashFlowMonthlyCashFlowBalances",
      "type": "object",
      "properties": {
        "month": {
          "description": "One instance for each complete calendar month in the report",
          "example": 1512111600,
          "type": "integer",
          "format": "int64"
        },
        "minDailyBalance": {
          "description": "Min Daily Balance for each month",
          "example": 3479.39,
          "type": "number",
          "format": "double"
        },
        "maxDailyBalance": {
          "description": "Max Daily Balance for each month",
          "example": 3479.39,
          "type": "number",
          "format": "double"
        },
        "averageDailyBalance": {
          "description": "Average Daily Balance for each month",
          "example": 3479.39,
          "type": "number",
          "format": "double"
        },
        "standardDeviationOfDailyBalance": {
          "description": "Standard Deviation of Daily Balance for each month",
          "example": "20",
          "type": "string"
        },
        "numberOfDaysNegativeBalance": {
          "description": "Number of Days Negative Balance for each month",
          "example": "6",
          "type": "string"
        },
        "numberOfDaysPositiveBalance": {
          "description": "Number of Days positive balance for each month",
          "example": "0",
          "type": "string"
        }
      },
      "required": [
        "month",
        "minDailyBalance",
        "maxDailyBalance",
        "averageDailyBalance",
        "standardDeviationOfDailyBalance",
        "numberOfDaysNegativeBalance",
        "numberOfDaysPositiveBalance"
      ]
    },
    "CashFlowCashFlowBalance": {
      "title": "CashFlowCashFlowBalance",
      "type": "object",
      "properties": {
        "monthlyCashFlowBalances": {
          "description": "List of attributes for each month",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CashFlowMonthlyCashFlowBalances"
          }
        },
        "minDailyBalance": {
          "description": "Min daily balance across entire transaction history",
          "example": 3479.39,
          "type": "number",
          "format": "double"
        },
        "maxDailyBalance": {
          "description": "Max Daily Balance across entire transaction history",
          "example": 3479.39,
          "type": "number",
          "format": "double"
        },
        "twelveMonthAverageDailyBalance": {
          "description": "Average Daily Balance across twelve months for the account",
          "example": 3479.39,
          "type": "number",
          "format": "double"
        },
        "sixMonthAverageDailyBalance": {
          "description": "Average Daily Balance across six months for the account",
          "example": 3479.39,
          "type": "number",
          "format": "double"
        },
        "twoMonthAverageDailyBalance": {
          "description": "Average Daily Balance across two months for the account",
          "example": 3479.39,
          "type": "number",
          "format": "double"
        },
        "twelveMonthStandardDeviationOfDailyBalance": {
          "description": "Standard Deviation of Daily Balance across twelve months for the account",
          "example": "20",
          "type": "string"
        },
        "sixMonthStandardDeviationOfDailyBalance": {
          "description": "Standard Deviation of Daily Balance across six months for the account",
          "example": "20",
          "type": "string"
        },
        "twoMonthStandardDeviationOfDailyBalance": {
          "description": "Standard Deviation of Daily Balance across two months for the account",
          "example": "20",
          "type": "string"
        },
        "numberDaysNegativeBalance": {
          "description": "Number of Days Negative Balance over entire transaction history",
          "example": "6",
          "type": "string"
        },
        "numberOfDaysPositiveBalance": {
          "description": "Number of Days positive balance over entire transaction history",
          "example": "0",
          "type": "string"
        }
      },
      "required": [
        "monthlyCashFlowBalances",
        "minDailyBalance",
        "maxDailyBalance",
        "twelveMonthAverageDailyBalance",
        "sixMonthAverageDailyBalance",
        "twoMonthAverageDailyBalance",
        "twelveMonthStandardDeviationOfDailyBalance",
        "sixMonthStandardDeviationOfDailyBalance",
        "twoMonthStandardDeviationOfDailyBalance",
        "numberDaysNegativeBalance",
        "numberOfDaysPositiveBalance"
      ]
    },
    "ReportInstitution": {
      "title": "ReportInstitution",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID of a financial institution, represented as a number",
          "example": 4222,
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "description": "Finicity institution name",
          "example": "FinBank Profiles",
          "type": "string"
        },
        "urlHomeApp": {
          "description": "The URL of the Financial Institution",
          "example": "http://www.finbank.com",
          "type": "string"
        },
        "accounts": {
          "description": "A list of account records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportInstitutionAccount"
          }
        }
      },
      "required": [
        "id",
        "name",
        "urlHomeApp",
        "accounts"
      ]
    },
    "ReportInstitutionAccount": {
      "title": "ReportInstitutionAccount",
      "description": "An account record",
      "type": "object",
      "properties": {
        "id": {
          "description": "Finicity account ID",
          "example": "6681984",
          "type": "string"
        },
        "ownerName": {
          "description": "The name(s) of the account owner(s), retrieved from the institution.",
          "example": "PATRICK & LORRAINE PURCHASER",
          "type": "string"
        },
        "ownerAddress": {
          "description": "The mailing address of the account owner, retrieved from the institution.",
          "example": "7195 BELMONT ST. PARLIN, NJ 08859",
          "type": "string"
        },
        "name": {
          "description": "The account name from the institution",
          "example": "Checking",
          "type": "string"
        },
        "number": {
          "description": "The account number from the institution (obfuscated)",
          "example": "XX1111",
          "type": "string"
        },
        "type": {
          "description": "CFR: `ALL` (`checking` / `savings` / `loan` / `mortgage` / `credit card` / `CD` / `MM` / `investment`...)",
          "example": "checking",
          "type": "string"
        },
        "aggregationStatusCode": {
          "description": "The status of the most recent aggregation attempt for this account (non-zero means the account was not accessed successfully for this report, and additional fields for this account may not be reliable)",
          "example": "0",
          "type": "string"
        },
        "currentBalance": {
          "description": "The cleared balance of the account as-of `balanceDate`",
          "example": 100000,
          "type": "number",
          "format": "double"
        },
        "availableBalance": {
          "description": "Available balance",
          "example": 1000,
          "type": "number",
          "format": "double"
        },
        "balanceDate": {
          "description": "A timestamp showing when the `balance` was captured",
          "example": 1614880526,
          "type": "integer",
          "format": "int64"
        },
        "transactions": {
          "description": "a list of transaction records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportTransaction"
          }
        },
        "cashFlowBalance": {
          "$ref": "#/definitions/CashFlowCashFlowBalance"
        },
        "cashFlowCredit": {
          "$ref": "#/definitions/CashFlowCashFlowCredit"
        },
        "cashFlowDebit": {
          "$ref": "#/definitions/CashFlowCashFlowDebit"
        },
        "cashFlowCharacteristic": {
          "$ref": "#/definitions/CashFlowCashFlowCharacteristic"
        },
        "balance": {
          "description": "The cleared balance of the account as-of `balanceDate`",
          "example": 501.24,
          "type": "number",
          "format": "double"
        },
        "averageMonthlyBalance": {
          "description": "The average monthly balance of the account",
          "example": 501.02,
          "type": "number",
          "format": "double"
        },
        "totNumberInsufficientFundsFeeDebitTxAccount": {
          "description": "The count for the total number of insufficient funds transactions, based on the `fromDate` of the report",
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount": {
          "description": "The total number of  insufficient funds fees for the account over six months",
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount": {
          "description": "The total number of days since the most recent insufficient funds fee for the account",
          "example": 120,
          "type": "integer",
          "format": "int64"
        },
        "asset": {
          "$ref": "#/definitions/PrequalificationReportAssetSummary"
        },
        "details": {
          "$ref": "#/definitions/AccountDetails"
        },
        "totNumberInsufficientFundsFeeDebitTxOver2MonthsAccount": {
          "description": "The count for the total number of insufficient funds transactions for the last two months, based on the `fromDate` of the report.",
          "example": 0,
          "type": "integer",
          "format": "int64"
        },
        "incomeStreams": {
          "description": "A list of income stream records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VOAIReportIncomeStream2"
          }
        },
        "beginningBalance": {
          "description": "Beginning balance of account per the time period in the report",
          "example": 714.77,
          "type": "number",
          "format": "double"
        },
        "miscDeposits": {
          "description": "A list of miscellaneous deposits",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportTransaction"
          },
          "minItems": 0,
          "maxItems": 100
        }
      },
      "required": [
        "id",
        "ownerName",
        "ownerAddress",
        "name",
        "number",
        "type",
        "aggregationStatusCode",
        "availableBalance",
        "transactions",
        "balance",
        "averageMonthlyBalance",
        "incomeStreams"
      ]
    },
    "CashFlowReport": {
      "title": "CashFlowReport",
      "description": "A Cash Flow report",
      "type": "object",
      "properties": {
        "id": {
          "description": "A report ID",
          "example": "u4hstnnak45g",
          "type": "string"
        },
        "customerType": {
          "description": "The type of customer (\"active\" or \"testing\" or \"\" for all types)",
          "example": "active",
          "type": "string"
        },
        "customerId": {
          "description": "A customer ID represented as a number. See Add Customer API for how to create a customer ID.",
          "example": 1005061234,
          "type": "integer",
          "format": "int64"
        },
        "requestId": {
          "description": "Finicity indicator to track all activity associated with this report",
          "example": "cjqm4wtdcn",
          "type": "string"
        },
        "requesterName": {
          "description": "Name of a Finicity partner",
          "example": "Finicity Test API",
          "type": "string"
        },
        "createdDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "description": "Title of the report",
          "example": "Finicity Asset Ready Report (CRA)",
          "type": "string"
        },
        "consumerId": {
          "description": "A consumer ID. See Create Consumer API for how to create a consumer ID.",
          "example": "0bf46322c167b562e6cbed9d40e19a4c",
          "type": "string"
        },
        "consumerSsn": {
          "description": "Last 4 digits of a SSN",
          "example": "9999",
          "type": "string"
        },
        "type": {
          "description": "A report type. Possible values:\n\n  * \"voi\"\n\n\n  * \"voa\"\n\n\n  * \"voaHistory\"\n\n\n  * \"history\"\n\n\n  * \"voieTxVerify\"\n\n\n  * \"voieWithReport\"\n\n\n  * \"voieWithInterview\"\n\n\n  * \"paystatement\"\n\n\n  * \"preQualVoa\"\n\n\n  * \"assetSummary\"\n\n\n  * \"voie\"\n\n\n  * \"transactions\"\n\n\n  * \"statement\"\n\n\n  * \"voiePayroll\"\n\n\n  * \"voeTransactions\"\n\n\n  * \"voePayroll\"\n\n\n  * \"cfrp\"\n\n\n  * \"cfrb\"",
          "example": "voi",
          "type": "string"
        },
        "status": {
          "description": "A report generation status. Possible values: \"inProgress\", \"success\", \"failure\".",
          "example": "inProgress",
          "type": "string"
        },
        "errors": {
          "description": "In case errors occurred during the report generation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorMessage"
          }
        },
        "portfolioId": {
          "description": "A unique identifier that will be consistent across all reports created for the same customer",
          "example": "y4zsgccj4xpw-6-port",
          "type": "string"
        },
        "startDate": {
          "description": "The `postedDate` of the earliest transaction analyzed for the report. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "endDate": {
          "description": "The `postedDate` of the latest transaction analyzed for the report. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "days": {
          "description": "Number of days covered by the report",
          "example": 730,
          "type": "integer",
          "format": "int32"
        },
        "seasoned": {
          "description": "\"true\" if the report covers more than 365 days",
          "example": true,
          "type": "boolean"
        },
        "institutions": {
          "description": "A list of institution records, including information about the individual accounts used in this report",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportInstitution"
          }
        },
        "cashFlowBalanceSummary": {
          "$ref": "#/definitions/CashFlowCashFlowBalanceSummary"
        },
        "cashFlowCreditSummary": {
          "$ref": "#/definitions/CashFlowCashFlowCreditSummary"
        },
        "cashFlowDebitSummary": {
          "$ref": "#/definitions/CashFlowCashFlowDebitSummary"
        },
        "cashFlowCharacteristicsSummary": {
          "$ref": "#/definitions/CashFlowCashFlowCharacteristicsSummary"
        },
        "possibleLoanDeposits": {
          "description": "A possible loan deposits record",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CashFlowPossibleLoanDeposits"
          }
        }
      }
    },
    "CashFlowPossibleLoanDeposits": {
      "title": "CashFlowPossibleLoanDeposits",
      "type": "object",
      "properties": {
        "id": {
          "description": "Finicity institution ID",
          "example": "102105",
          "type": "string"
        },
        "name": {
          "description": "Finicity institution name",
          "example": "FinBank Profiles",
          "type": "string"
        },
        "urlHomeApp": {
          "description": "The URL of the Financial Institution",
          "example": "http://www.finbank.com",
          "type": "string"
        },
        "accounts": {
          "description": "A list of account records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CashFlowPossibleLoanDepositsAccount"
          }
        }
      },
      "required": [
        "id",
        "name",
        "urlHomeApp",
        "accounts"
      ]
    },
    "CashFlowPossibleLoanDepositsAccount": {
      "title": "CashFlowPossibleLoanDepositsAccount",
      "type": "object",
      "properties": {
        "id": {
          "description": "Finicity account ID",
          "example": "6681984",
          "type": "string"
        },
        "ownerName": {
          "description": "The name(s) of the account owner(s), retrieved from the institution.",
          "example": "PATRICK & LORRAINE PURCHASER",
          "type": "string"
        },
        "ownerAddress": {
          "description": "The mailing address of the account owner, retrieved from the institution.",
          "example": "7195 BELMONT ST. PARLIN, NJ 08859",
          "type": "string"
        },
        "name": {
          "description": "The account name from the institution",
          "example": "Checking",
          "type": "string"
        },
        "number": {
          "description": "The account number from the institution (obfuscated)",
          "example": "XX1111",
          "type": "string"
        },
        "type": {
          "description": "CFR: `ALL` (`checking` / `savings` / `loan` / `mortgage` / `credit card` / `CD` / `MM` / `investment`...)",
          "example": "checking",
          "type": "string"
        },
        "aggregationStatusCode": {
          "description": "The status of the most recent aggregation attempt for this account (non-zero means the account was not accessed successfully for this report, and additional fields for this account may not be reliable)",
          "example": "0",
          "type": "string"
        },
        "currentBalance": {
          "description": "The cleared balance of the account as-of `balanceDate`",
          "example": 100000,
          "type": "number",
          "format": "double"
        },
        "availableBalance": {
          "description": "Available balance",
          "example": 1000,
          "type": "number",
          "format": "double"
        },
        "balanceDate": {
          "description": "A timestamp showing when the `balance` was captured",
          "example": 1614880526,
          "type": "integer",
          "format": "int64"
        },
        "transactions": {
          "description": "a list of transaction records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportTransaction"
          }
        }
      },
      "required": [
        "id",
        "ownerName",
        "ownerAddress",
        "name",
        "number",
        "type",
        "aggregationStatusCode",
        "currentBalance",
        "availableBalance",
        "balanceDate",
        "transactions"
      ]
    },
    "ReportTransaction": {
      "title": "ReportTransaction",
      "type": "object",
      "properties": {
        "id": {
          "description": "A transaction ID",
          "example": 21284820852,
          "type": "integer",
          "format": "int64"
        },
        "amount": {
          "description": "The total amount of the transaction. Transactions for deposits are positive values, withdrawals and debits are negative values.",
          "example": 100,
          "type": "number",
          "format": "double"
        },
        "postedDate": {
          "description": "A timestamp showing when the transaction was posted or cleared by the institution",
          "example": 1571313600,
          "type": "integer",
          "format": "int64"
        },
        "description": {
          "description": "The description of the transaction, as provided by the institution (often known as `payee`). In the event that this field is left blank by the institution, Finicity will pass a value of \"No description provided by institution\". All other values are provided by the institution.",
          "example": "ATM CHECK DEPOSIT mm/dd",
          "type": "string"
        },
        "memo": {
          "description": "The memo field of the transaction, as provided by the institution. The institution must provide either a description, a memo, or both. It is recommended to concatenate the two fields into a single value.",
          "example": "Some St Somewhere City State",
          "type": "string"
        },
        "normalizedPayee": {
          "description": "A normalized payee, derived from the transaction's `description` and `memo` fields",
          "example": "T-Mobile",
          "type": "string"
        },
        "institutionTransactionId": {
          "description": "The unique identifier given by the FI for each transaction",
          "example": "0000000000",
          "type": "string"
        },
        "category": {
          "description": "One of the values from Categories (assigned based on the payee name)",
          "example": "Income",
          "type": "string"
        },
        "type": {
          "description": "One of the values from transaction types",
          "example": "debit",
          "type": "string"
        },
        "securityType": {
          "description": "The type of investment security (VOA only)",
          "type": "string"
        },
        "symbol": {
          "description": "Investment symbol (VOA only)",
          "type": "string"
        },
        "commission": {
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "id",
        "postedDate",
        "description",
        "normalizedPayee",
        "institutionTransactionId",
        "category"
      ]
    },
    "CashFlowMonthlyCashFlowDebitSummaries": {
      "title": "CashFlowMonthlyCashFlowDebitSummaries",
      "type": "object",
      "properties": {
        "month": {
          "description": "One instance for each complete calendar month in the report",
          "example": 1512111600,
          "type": "integer",
          "format": "int64"
        },
        "numberOfDebits": {
          "description": "Number of Debits by month across all accounts",
          "example": "1500",
          "type": "string"
        },
        "totalDebitsAmount": {
          "description": "Total Amount of Debits by month across all accounts",
          "example": -12345.46,
          "type": "number",
          "format": "double"
        },
        "largestDebit": {
          "description": "Largest Debit by month",
          "example": -20000,
          "type": "number",
          "format": "double"
        },
        "numberOfDebitsLessTransfers": {
          "description": "Number of Debits by month (less transfers)",
          "example": "5",
          "type": "string"
        },
        "totalDebitsAmountLessTransfers": {
          "description": "Total amount of debits by month (less transfers)",
          "example": -2000,
          "type": "number",
          "format": "double"
        },
        "averageDebitAmount": {
          "description": "The average debit amount",
          "example": 500,
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "month",
        "numberOfDebits",
        "totalDebitsAmount",
        "largestDebit",
        "numberOfDebitsLessTransfers",
        "totalDebitsAmountLessTransfers",
        "averageDebitAmount"
      ]
    },
    "CashFlowCashFlowDebitSummary": {
      "title": "CashFlowCashFlowDebitSummary",
      "type": "object",
      "properties": {
        "monthlyCashFlowDebitSummaries": {
          "description": "List of attributes for each month",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CashFlowMonthlyCashFlowDebitSummaries"
          }
        },
        "twelveMonthDebitTotal": {
          "description": "Sum of all monthly debit transactions for each month by account",
          "example": -1200,
          "type": "number",
          "format": "double"
        },
        "twelveMonthDebitTotalLessTransfers": {
          "description": "Sum of all monthly debit transactions without transfers for the account",
          "example": -1000,
          "type": "number",
          "format": "double"
        },
        "sixMonthDebitTotal": {
          "description": "Six month sum of all debit transactions by account",
          "example": -750,
          "type": "number",
          "format": "double"
        },
        "sixMonthDebitTotalLessTransfers": {
          "description": "Six month sum of all debit transactions without transfers for the account",
          "example": -500,
          "type": "number",
          "format": "double"
        },
        "twoMonthDebitTotal": {
          "description": "Two month sum of all debit transactions by account",
          "example": -150,
          "type": "number",
          "format": "double"
        },
        "twoMonthDebitTotalLessTransfers": {
          "description": "Two month sum of all debit transactions without transfers for the account",
          "example": -100,
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "monthlyCashFlowDebitSummaries",
        "twelveMonthDebitTotal",
        "twelveMonthDebitTotalLessTransfers",
        "sixMonthDebitTotal",
        "sixMonthDebitTotalLessTransfers",
        "twoMonthDebitTotal",
        "twoMonthDebitTotalLessTransfers"
      ]
    },
    "CashFlowMonthlyCashFlowCharacteristicSummaries": {
      "title": "CashFlowMonthlyCashFlowCharacteristicSummaries",
      "type": "object",
      "properties": {
        "month": {
          "description": "One instance for each complete calendar month in the report",
          "example": 1512111600,
          "type": "integer",
          "format": "int64"
        },
        "totalCreditsLessTotalDebits": {
          "description": "Total Credits - Total Debits by month across all accounts",
          "example": 15000,
          "type": "number",
          "format": "double"
        },
        "totalCreditsLessTotalDebitsLessTransfers": {
          "description": "Total Credits - Total Debits by month (Without Transfers) across all accounts",
          "example": 11000,
          "type": "number",
          "format": "double"
        },
        "averageTransactionAmount": {
          "description": "Average transaction amount across all accounts",
          "example": 10,
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "month",
        "totalCreditsLessTotalDebits",
        "totalCreditsLessTotalDebitsLessTransfers",
        "averageTransactionAmount"
      ]
    },
    "CashFlowCashFlowCharacteristicsSummary": {
      "title": "CashFlowCashFlowCharacteristicsSummary",
      "type": "object",
      "properties": {
        "monthlyCashFlowCharacteristicSummaries": {
          "description": "List of attributes for each month",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CashFlowMonthlyCashFlowCharacteristicSummaries"
          }
        },
        "averageMonthlyNet": {
          "description": "Average monthly net amount",
          "example": 1250,
          "type": "number",
          "format": "double"
        },
        "averageMonthlyNetLessTransfers": {
          "description": "Average monthly net less transfers",
          "example": 1000,
          "type": "number",
          "format": "double"
        },
        "twelveMonthTotalNet": {
          "description": "Sum of all monthly (Total Credits - Total Debits) each month by the account",
          "example": 12500,
          "type": "number",
          "format": "double"
        },
        "twelveMonthTotalNetLessTransfers": {
          "description": "Sum of all monthly (Total Credits - Total Debits) without transfers by the account",
          "example": 12400,
          "type": "number",
          "format": "double"
        },
        "sixMonthAverageTotalCreditsLessTotalDebits": {
          "description": "6 Month Average (Total Credits - Total Debits) across all accounts",
          "example": 55555,
          "type": "number",
          "format": "double"
        },
        "sixMonthAverageTotalCreditsLessTotalDebitsLessTransfers": {
          "description": "6 Month Average (Total Credits - Total Debits) - (Without Transfers) across all accounts",
          "example": 55555,
          "type": "number",
          "format": "double"
        },
        "twoMonthAverageTotalCreditsLessTotalDebits": {
          "description": "2 Month Average (Total Credits - Total Debits) across all accounts",
          "example": 55555,
          "type": "number",
          "format": "double"
        },
        "twoMonthAverageTotalCreditsLessTotalDebitsLessTransfers": {
          "description": "2 Month Average (Total Credits - Total Debits) - (Without Transfers) across all accounts",
          "example": 55555,
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "monthlyCashFlowCharacteristicSummaries",
        "averageMonthlyNet",
        "averageMonthlyNetLessTransfers",
        "twelveMonthTotalNet",
        "twelveMonthTotalNetLessTransfers",
        "sixMonthAverageTotalCreditsLessTotalDebits",
        "sixMonthAverageTotalCreditsLessTotalDebitsLessTransfers",
        "twoMonthAverageTotalCreditsLessTotalDebits",
        "twoMonthAverageTotalCreditsLessTotalDebitsLessTransfers"
      ]
    },
    "CashFlowCashFlowCreditSummary": {
      "title": "CashFlowCashFlowCreditSummary",
      "type": "object",
      "properties": {
        "monthlyCashFlowCreditSummaries": {
          "description": "List of attributes for each month",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CashFlowMonthlyCashFlowCreditSummaries"
          }
        },
        "twelveMonthCreditTotal": {
          "description": "Sum of all credit transactions for each month for all accounts",
          "example": 1200,
          "type": "number",
          "format": "double"
        },
        "twelveMonthCreditTotalLessTransfers": {
          "description": "Sum of all monthly credit transactions without transfers for all accounts",
          "example": 1000,
          "type": "number",
          "format": "double"
        },
        "sixMonthCreditTotal": {
          "description": "Six month sum of all credit transactions",
          "example": 750,
          "type": "number",
          "format": "double"
        },
        "sixMonthCreditTotalLessTransfers": {
          "description": "Six month sum of all monthly credit transactions without transfers for all accounts",
          "example": 500,
          "type": "number",
          "format": "double"
        },
        "twoMonthCreditTotal": {
          "description": "Two month sum of all credit transactions",
          "example": 150,
          "type": "number",
          "format": "double"
        },
        "twoMonthCreditTotalLessTransfers": {
          "description": "Two month sum of all monthly credit transactions without transfers for all accounts",
          "example": 100,
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "monthlyCashFlowCreditSummaries",
        "twelveMonthCreditTotal",
        "twelveMonthCreditTotalLessTransfers",
        "sixMonthCreditTotal",
        "sixMonthCreditTotalLessTransfers",
        "twoMonthCreditTotal",
        "twoMonthCreditTotalLessTransfers"
      ]
    },
    "CashFlowMonthlycashflowDebits": {
      "title": "CashFlowMonthlycashflowDebits",
      "type": "object",
      "properties": {
        "month": {
          "description": "One instance for each complete calendar month in the report",
          "example": 1512111600,
          "type": "integer",
          "format": "int64"
        },
        "numberOfDebits": {
          "description": "Number of Debits by month",
          "example": "5",
          "type": "string"
        },
        "totalDebitsAmount": {
          "description": "Total Amount of Debits by month",
          "example": -12345,
          "type": "number",
          "format": "double"
        },
        "largestDebit": {
          "description": "Largest Debit by month",
          "example": -2000,
          "type": "number",
          "format": "double"
        },
        "numberOfDebitsLessTransfers": {
          "description": "Number of Debits by month (less transfers)",
          "example": "3",
          "type": "string"
        },
        "totalDebitsAmountLessTransfers": {
          "description": "Total amount of debits by month (less transfers)",
          "example": -2000,
          "type": "number",
          "format": "double"
        },
        "averageDebitAmount": {
          "description": "The average debit amount",
          "example": 500,
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "month",
        "numberOfDebits",
        "totalDebitsAmount",
        "largestDebit",
        "numberOfDebitsLessTransfers",
        "totalDebitsAmountLessTransfers",
        "averageDebitAmount"
      ]
    },
    "CashFlowCashFlowDebit": {
      "title": "CashFlowCashFlowDebit",
      "type": "object",
      "properties": {
        "monthlyCashFlowDebits": {
          "description": "List of attributes for each month",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CashFlowMonthlycashflowDebits"
          }
        },
        "twelveMonthDebitTotal": {
          "description": "Sum of all monthly debit transactions for each month by account",
          "example": 1200,
          "type": "number",
          "format": "double"
        },
        "twelveMonthDebitTotalLessTransfers": {
          "description": "Sum of all monthly debit transactions without transfers for the account",
          "example": 1000,
          "type": "number",
          "format": "double"
        },
        "sixMonthDebitTotal": {
          "description": "Six month sum of all debit transactions",
          "example": 750,
          "type": "number",
          "format": "double"
        },
        "sixMonthDebitTotalLessTransfers": {
          "description": "Six month sum of all debit transactions without transfers for the account",
          "example": 500,
          "type": "number",
          "format": "double"
        },
        "twoMonthDebitTotal": {
          "description": "Two month sum of all debit transactions",
          "example": 150,
          "type": "number",
          "format": "double"
        },
        "twoMonthDebitTotalLessTransfers": {
          "description": "Two month sum of all debit transactions without transfers for the account",
          "example": 100,
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "monthlyCashFlowDebits",
        "twelveMonthDebitTotal",
        "twelveMonthDebitTotalLessTransfers",
        "sixMonthDebitTotal",
        "sixMonthDebitTotalLessTransfers",
        "twoMonthDebitTotal",
        "twoMonthDebitTotalLessTransfers"
      ]
    },
    "CashFlowCashFlowBalanceSummary": {
      "title": "CashFlowCashFlowBalanceSummary",
      "type": "object",
      "properties": {
        "monthlyCashFlowBalanceSummaries": {
          "description": "List of attributes for each month",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CashFlowMonthlyCashFlowBalanceSummaries"
          }
        },
        "minDailyBalance": {
          "description": "Min Daily Balance across entire transaction history  for all accounts",
          "example": 3479.39,
          "type": "number",
          "format": "double"
        },
        "maxDailyBalance": {
          "description": "Max Daily Balance across entire transaction history for all accounts",
          "example": 3479.39,
          "type": "number",
          "format": "double"
        },
        "twelveMonthAverageDailyBalance": {
          "description": "Average Daily Balance across twelve months for all accounts",
          "example": 3479.39,
          "type": "number",
          "format": "double"
        },
        "sixMonthAverageDailyBalance": {
          "description": "Average Daily Balance across six months for all accounts",
          "example": 3479.39,
          "type": "number",
          "format": "double"
        },
        "twoMonthAverageDailyBalance": {
          "description": "Average Daily Balance across two months for all accounts",
          "example": 3479.39,
          "type": "number",
          "format": "double"
        },
        "twelveMonthStandardDeviationOfDailyBalance": {
          "description": "Standard Deviation of Daily Balance across twelve months for all accounts",
          "example": "20",
          "type": "string"
        },
        "sixMonthStandardDeviationOfDailyBalance": {
          "description": "Standard Deviation of Daily Balance across six months for all accounts",
          "example": "20",
          "type": "string"
        },
        "twoMonthStandardDeviationOfDailyBalance": {
          "description": "Standard Deviation of Daily Balance across two months for all accounts",
          "example": "20",
          "type": "string"
        },
        "numberOfDaysNegativeBalance": {
          "description": "Number of Days Negative Balance over entire transaction history for all accounts",
          "example": "6",
          "type": "string"
        },
        "numberOfDaysPositiveBalance": {
          "description": "Number of Days Positive Balance over entire transaction history for all accounts",
          "example": "11",
          "type": "string"
        }
      },
      "required": [
        "monthlyCashFlowBalanceSummaries",
        "minDailyBalance",
        "maxDailyBalance",
        "twelveMonthAverageDailyBalance",
        "sixMonthAverageDailyBalance",
        "twoMonthAverageDailyBalance",
        "twelveMonthStandardDeviationOfDailyBalance",
        "sixMonthStandardDeviationOfDailyBalance",
        "twoMonthStandardDeviationOfDailyBalance",
        "numberOfDaysNegativeBalance",
        "numberOfDaysPositiveBalance"
      ]
    },
    "CashFlowMonthlyCashFlowBalanceSummaries": {
      "title": "CashFlowMonthlyCashFlowBalanceSummaries",
      "type": "object",
      "properties": {
        "month": {
          "description": "One instance for each complete calendar month in the report",
          "example": 1512111600,
          "type": "integer",
          "format": "int64"
        },
        "minDailyBalance": {
          "description": "Min Daily Balance for each month for all accounts",
          "example": 3479.39,
          "type": "number",
          "format": "double"
        },
        "maxDailyBalance": {
          "description": "Max Daily Balance for each month for all accounts",
          "example": 3479.39,
          "type": "number",
          "format": "double"
        },
        "averageDailyBalance": {
          "description": "Average Daily Balance for each month for all accounts",
          "example": 3479.39,
          "type": "number",
          "format": "double"
        },
        "standardDeviationOfDailyBalance": {
          "description": "Standard Deviation of Daily Balance for each month for all accounts",
          "example": "20.45454545",
          "type": "string"
        },
        "numberOfDaysNegativeBalance": {
          "description": "Number of Days Negative Balance for each month for all accounts",
          "example": "6",
          "type": "string"
        },
        "numberOfDaysPositiveBalance": {
          "description": "Number of Days Positive Balance for each month for all accounts",
          "example": "0",
          "type": "string"
        }
      },
      "required": [
        "month",
        "minDailyBalance",
        "maxDailyBalance",
        "averageDailyBalance",
        "standardDeviationOfDailyBalance",
        "numberOfDaysNegativeBalance",
        "numberOfDaysPositiveBalance"
      ]
    },
    "CashFlowMonthlyCashFlowCreditSummaries": {
      "title": "CashFlowMonthlyCashFlowCreditSummaries",
      "type": "object",
      "properties": {
        "month": {
          "description": "One instance for each complete calendar month in the report",
          "example": 1512111600,
          "type": "integer",
          "format": "int64"
        },
        "numberOfCredits": {
          "description": "Number of credits by month across all accounts",
          "example": "57",
          "type": "string"
        },
        "totalCreditsAmount": {
          "description": "Total amount of credits by month across all accounts",
          "example": 3479.39,
          "type": "number",
          "format": "double"
        },
        "largestCredit": {
          "description": "Largest credit by month across all accounts",
          "example": 3000.49,
          "type": "number",
          "format": "double"
        },
        "numberOfCreditsLessTransfers": {
          "description": "Number of credits by month (less transfers) across all accounts",
          "example": "5",
          "type": "string"
        },
        "totalCreditsAmountLessTransfers": {
          "description": "Total amount of credits by month (less transfers) across all accounts",
          "example": 25.46,
          "type": "number",
          "format": "double"
        },
        "averageCreditAmount": {
          "description": "The average credit amount",
          "example": 500,
          "type": "number",
          "format": "double"
        },
        "estimatedNumberOfLoanDeposits": {
          "description": "The estimated number of loan deposits by month",
          "example": "0",
          "type": "string"
        },
        "estimatedLoanDepositAmount": {
          "description": "The estimated loan deposit amount by month",
          "example": 0,
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "month",
        "numberOfCredits",
        "totalCreditsAmount",
        "largestCredit",
        "numberOfCreditsLessTransfers",
        "totalCreditsAmountLessTransfers",
        "averageCreditAmount",
        "estimatedNumberOfLoanDeposits",
        "estimatedLoanDepositAmount"
      ]
    },
    "PrequalificationReport": {
      "title": "PrequalificationReport",
      "description": "A Prequalification report",
      "type": "object",
      "properties": {
        "id": {
          "description": "A report ID",
          "example": "u4hstnnak45g",
          "type": "string"
        },
        "customerType": {
          "description": "The type of customer (\"active\" or \"testing\" or \"\" for all types)",
          "example": "active",
          "type": "string"
        },
        "customerId": {
          "description": "A customer ID represented as a number. See Add Customer API for how to create a customer ID.",
          "example": 1005061234,
          "type": "integer",
          "format": "int64"
        },
        "requestId": {
          "description": "Finicity indicator to track all activity associated with this report",
          "example": "cjqm4wtdcn",
          "type": "string"
        },
        "requesterName": {
          "description": "Name of a Finicity partner",
          "example": "Finicity Test API",
          "type": "string"
        },
        "createdDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "description": "Title of the report",
          "example": "Finicity Asset Ready Report (CRA)",
          "type": "string"
        },
        "consumerId": {
          "description": "A consumer ID. See Create Consumer API for how to create a consumer ID.",
          "example": "0bf46322c167b562e6cbed9d40e19a4c",
          "type": "string"
        },
        "consumerSsn": {
          "description": "Last 4 digits of a SSN",
          "example": "9999",
          "type": "string"
        },
        "type": {
          "description": "A report type. Possible values:\n\n  * \"voi\"\n\n\n  * \"voa\"\n\n\n  * \"voaHistory\"\n\n\n  * \"history\"\n\n\n  * \"voieTxVerify\"\n\n\n  * \"voieWithReport\"\n\n\n  * \"voieWithInterview\"\n\n\n  * \"paystatement\"\n\n\n  * \"preQualVoa\"\n\n\n  * \"assetSummary\"\n\n\n  * \"voie\"\n\n\n  * \"transactions\"\n\n\n  * \"statement\"\n\n\n  * \"voiePayroll\"\n\n\n  * \"voeTransactions\"\n\n\n  * \"voePayroll\"\n\n\n  * \"cfrp\"\n\n\n  * \"cfrb\"",
          "example": "voi",
          "type": "string"
        },
        "status": {
          "description": "A report generation status. Possible values: \"inProgress\", \"success\", \"failure\".",
          "example": "inProgress",
          "type": "string"
        },
        "errors": {
          "description": "In case errors occurred during the report generation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorMessage"
          }
        },
        "portfolioId": {
          "description": "A unique identifier that will be consistent across all reports created for the same customer",
          "example": "y4zsgccj4xpw-6-port",
          "type": "string"
        },
        "startDate": {
          "description": "The `postedDate` of the earliest transaction analyzed for the report. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "endDate": {
          "description": "The `postedDate` of the latest transaction analyzed for the report. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "days": {
          "description": "The number of days covered by the report",
          "example": 230,
          "type": "integer",
          "format": "int32"
        },
        "seasoned": {
          "description": "\"true\" if the report covers more than 180 days",
          "example": true,
          "type": "boolean"
        },
        "consolidatedAvailableBalance": {
          "description": "The sum of available balance for all of the accounts included in the report",
          "example": 1929.57,
          "type": "number",
          "format": "double"
        },
        "institutions": {
          "description": "A list of institution records, including information about the individual accounts in this report",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportInstitution"
          }
        },
        "assets": {
          "$ref": "#/definitions/PrequalificationReportAssetSummary"
        }
      }
    },
    "PrequalificationReportAccount": {
      "title": "PrequalificationReportAccount",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID of the account",
          "example": 1000023996,
          "type": "integer",
          "format": "int64"
        },
        "number": {
          "description": "The account number from the institution (all digits except the last four are obfuscated)",
          "example": "1111",
          "type": "string"
        },
        "ownerName": {
          "description": "The name of the account owner. If no owner information is available, this field won't appear in the report.",
          "example": "JOHN DOE",
          "type": "string"
        },
        "ownerAddress": {
          "description": "The mailing address of the account owner. If no owner information is available, this field won't appear in the report.",
          "example": "123 GAINSVILLE STREET BUFORD, GA 84937",
          "type": "string"
        },
        "name": {
          "description": "The account name from the institution",
          "example": "Checking",
          "type": "string"
        },
        "type": {
          "description": "One of the values from account types",
          "example": "checking",
          "type": "string"
        },
        "aggregationStatusCode": {
          "description": "The status of the most recent aggregation attempt",
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "balance": {
          "description": "The cleared balance of the account as-of `balanceDate`",
          "example": 501.24,
          "type": "number",
          "format": "double"
        },
        "balanceDate": {
          "description": "A timestamp of the balance",
          "example": 1588350276,
          "type": "integer",
          "format": "int64"
        },
        "availableBalance": {
          "description": "Available balance",
          "example": 1000,
          "type": "number",
          "format": "double"
        },
        "averageMonthlyBalance": {
          "description": "The average monthly balance of the account",
          "example": 501.02,
          "type": "number",
          "format": "double"
        },
        "totNumberInsufficientFundsFeeDebitTxAccount": {
          "description": "The count for the total number of insufficient funds transactions, based on the `fromDate` of the report",
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount": {
          "description": "The total number of  insufficient funds fees for the account over six months",
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount": {
          "description": "The total number of days since the most recent insufficient funds fee for the account",
          "example": 120,
          "type": "integer",
          "format": "int64"
        },
        "transactions": {
          "description": "a list of transaction records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportTransaction"
          }
        },
        "asset": {
          "$ref": "#/definitions/PrequalificationReportAssetSummary"
        },
        "details": {
          "$ref": "#/definitions/AccountDetails"
        }
      }
    },
    "PrequalificationReportAssetSummary": {
      "title": "PrequalificationReportAssetSummary",
      "type": "object",
      "properties": {
        "type": {
          "description": "The asset type: \"checking\", \"savings\", \"moneyMarket\", \"cd\", \"investment\"",
          "example": "checking",
          "type": "string"
        },
        "availableBalance": {
          "description": "The available balance for the account",
          "example": 1000,
          "type": "number",
          "format": "double"
        },
        "currentBalance": {
          "description": "The current balance of the account",
          "example": 1000,
          "type": "number",
          "format": "double"
        },
        "twoMonthAverage": {
          "description": "The two month average daily balance of the account",
          "example": -1865.96,
          "type": "number",
          "format": "double"
        },
        "sixMonthAverage": {
          "description": "The six month average daily balance of the account",
          "example": -7616.01,
          "type": "number",
          "format": "double"
        },
        "beginningBalance": {
          "description": "The beginning balance of the account per the time period of the report",
          "example": -17795.6,
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "currentBalance",
        "twoMonthAverage",
        "sixMonthAverage",
        "beginningBalance"
      ]
    },
    "AccountDetails": {
      "title": "AccountDetails",
      "type": "object",
      "properties": {
        "interestMarginBalance": {
          "description": "Only available for investment accounts. Net interest earned after deducting interest paid out.",
          "example": -50000,
          "type": "number",
          "format": "double"
        },
        "availableCashBalance": {
          "description": "Only available for investment accounts. Amount available for cash withdrawal.",
          "example": 1500,
          "type": "number",
          "format": "double"
        },
        "vestedBalance": {
          "description": "Only available for investment accounts. Vested amount in account.",
          "example": 300000,
          "type": "number",
          "format": "double"
        },
        "currentLoanBalance": {
          "description": "Only available for investment accounts. Current loan balance.",
          "example": 0,
          "type": "number",
          "format": "double"
        },
        "availableBalanceAmount": {
          "description": "The available balance for the account",
          "example": 1000,
          "type": "number",
          "format": "double"
        }
      }
    },
    "PayStatementReport": {
      "title": "PayStatementReport",
      "description": "A Pay Statement report",
      "type": "object",
      "properties": {
        "id": {
          "description": "A report ID",
          "example": "u4hstnnak45g",
          "type": "string"
        },
        "customerType": {
          "description": "The type of customer (\"active\" or \"testing\" or \"\" for all types)",
          "example": "active",
          "type": "string"
        },
        "customerId": {
          "description": "A customer ID represented as a number. See Add Customer API for how to create a customer ID.",
          "example": 1005061234,
          "type": "integer",
          "format": "int64"
        },
        "requestId": {
          "description": "Finicity indicator to track all activity associated with this report",
          "example": "cjqm4wtdcn",
          "type": "string"
        },
        "requesterName": {
          "description": "Name of a Finicity partner",
          "example": "Finicity Test API",
          "type": "string"
        },
        "createdDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "description": "Title of the report",
          "example": "Finicity Asset Ready Report (CRA)",
          "type": "string"
        },
        "consumerId": {
          "description": "A consumer ID. See Create Consumer API for how to create a consumer ID.",
          "example": "0bf46322c167b562e6cbed9d40e19a4c",
          "type": "string"
        },
        "consumerSsn": {
          "description": "Last 4 digits of a SSN",
          "example": "9999",
          "type": "string"
        },
        "type": {
          "description": "A report type. Possible values:\n\n  * \"voi\"\n\n\n  * \"voa\"\n\n\n  * \"voaHistory\"\n\n\n  * \"history\"\n\n\n  * \"voieTxVerify\"\n\n\n  * \"voieWithReport\"\n\n\n  * \"voieWithInterview\"\n\n\n  * \"paystatement\"\n\n\n  * \"preQualVoa\"\n\n\n  * \"assetSummary\"\n\n\n  * \"voie\"\n\n\n  * \"transactions\"\n\n\n  * \"statement\"\n\n\n  * \"voiePayroll\"\n\n\n  * \"voeTransactions\"\n\n\n  * \"voePayroll\"\n\n\n  * \"cfrp\"\n\n\n  * \"cfrb\"",
          "example": "voi",
          "type": "string"
        },
        "status": {
          "description": "A report generation status. Possible values: \"inProgress\", \"success\", \"failure\".",
          "example": "inProgress",
          "type": "string"
        },
        "errors": {
          "description": "In case errors occurred during the report generation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorMessage"
          }
        },
        "portfolioId": {
          "description": "A unique identifier that will be consistent across all reports created for the same customer",
          "example": "y4zsgccj4xpw-6-port",
          "type": "string"
        },
        "startDate": {
          "description": "The `postedDate` of the earliest transaction analyzed for the report. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "endDate": {
          "description": "The `postedDate` of the latest transaction analyzed for the report. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "reportStyle": {
          "example": "paystatement",
          "type": "string"
        },
        "numberOfBillableAssets": {
          "description": "Total number of billable pay statements included in the report",
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "assetIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "payStatements": {
          "description": "Extracted pay statement details",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VOIEPayStatement"
          }
        }
      }
    },
    "VOIEPayStatement": {
      "title": "VOIEPayStatement",
      "type": "object",
      "properties": {
        "payPeriod": {
          "description": "The pay period of the pay statement",
          "example": "LastPayPeriod",
          "type": "string"
        },
        "billable": {
          "description": "Designates whether the pay statement is billable",
          "example": true,
          "type": "boolean"
        },
        "assetId": {
          "description": "The asset ID of the stored pay statement",
          "example": "6f8fb0a0-e882-4f57-b672-cf53f1397581",
          "type": "string"
        },
        "payDate": {
          "description": "The listed pay date for the pay statement",
          "example": 1559241000,
          "type": "integer",
          "format": "int64"
        },
        "startDate": {
          "description": "The beginning of the pay period",
          "example": 1557513000,
          "type": "integer",
          "format": "int64"
        },
        "endDate": {
          "description": "The end of the pay period",
          "example": 1558722600,
          "type": "integer",
          "format": "int64"
        },
        "netPayCurrent": {
          "description": "The total pay after deductions for the employee for the current pay period",
          "example": 1802.22,
          "type": "number",
          "format": "double"
        },
        "netPayYTD": {
          "description": "The total accumulation of pay after deductions for the employee for the current pay year",
          "example": 36000,
          "type": "number",
          "format": "double"
        },
        "grossPayCurrent": {
          "description": "The total pay before deductions for the employee for the current pay period",
          "example": 24200,
          "type": "number",
          "format": "double"
        },
        "grossPayYTD": {
          "description": "The total accumulation of pay before deductions for the employee for the current pay year",
          "example": 72600,
          "type": "number",
          "format": "double"
        },
        "payrollProvider": {
          "description": "The company that provides the pay stub.",
          "example": "Finicity",
          "type": "string"
        },
        "employer": {
          "$ref": "#/definitions/Employer"
        },
        "employee": {
          "$ref": "#/definitions/Employee"
        },
        "payStat": {
          "description": "Information pertaining to the earnings on the pay statement",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PayStat"
          }
        },
        "deductions": {
          "description": "Information pertaining to deductions on the pay statement",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Deduction"
          }
        },
        "directDeposits": {
          "description": "Information pertaining to direct deposits on the pay statement",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DirectDeposit"
          }
        }
      }
    },
    "Employer": {
      "title": "Employer",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the employer",
          "example": "Rocket Surgery",
          "type": "string"
        }
      }
    },
    "Employee": {
      "title": "Employee",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the employee",
          "example": "Patrick Purchaser",
          "type": "string"
        }
      }
    },
    "DirectDeposit": {
      "title": "DirectDeposit",
      "type": "object",
      "properties": {
        "amountCurrent": {
          "description": "The amount of the deposit",
          "example": 1744.61,
          "type": "number",
          "format": "double"
        },
        "accountLastFour": {
          "description": "The last four numbers of the account the deposit went into",
          "example": "1234",
          "type": "string"
        }
      }
    },
    "Deduction": {
      "title": "Deduction",
      "type": "object",
      "properties": {
        "name": {
          "description": "The normalized category of the deductions in the format [type][number]. The number is the will be the iterating number of the type's occurrence starting at one.",
          "example": "401",
          "type": "string"
        },
        "description": {
          "description": "The deduction line's deduction type description",
          "example": "401k",
          "type": "string"
        },
        "amountCurrent": {
          "description": "The amount for the deduction line deducted from employee's pay for the specified pay period",
          "example": 1744.61,
          "type": "number",
          "format": "double"
        },
        "amountYTD": {
          "description": "The amount for the deduction line being deducted from the employee's pay for the current pay year",
          "example": 1744.6,
          "type": "number",
          "format": "double"
        },
        "type": {
          "description": "Categorization based on the deduction line's description",
          "example": "401 Deductions",
          "type": "string"
        }
      }
    },
    "PayStat": {
      "title": "PayStat",
      "type": "object",
      "properties": {
        "name": {
          "description": "The normalized category of the earnings with a number appended. The number is the will be the iterating number of the type's occurrence starting at one.",
          "example": "regular 1",
          "type": "string"
        },
        "type": {
          "description": "The categorization based on the earning line's description. Possible values:\n* \"bereavement\"\n\n* \"bonus\"\n\n* \"commission\"\n\n* \"holiday\"\n\n* \"jury duty\"\n\n* \"overtime\"\n\n* \"pension\"\n\n* \"pto\"\n\n* \"regular\"\n\n* \"sick\"\n\n* \"tips\"\n\n* \"unknown\"\n\n* \"vacation\"\n\n* \"reimbursement\"\n\n* \"stock\"\n\n* \"benefit\"",
          "type": "string"
        },
        "description": {
          "description": "The earnings line's pay type description",
          "example": "regular income",
          "type": "string"
        },
        "amountCurrent": {
          "description": "The amount for the earning line paid out to the employee for the specified pay period.",
          "example": 6000,
          "type": "number",
          "format": "double"
        },
        "amountYTD": {
          "description": "The amount for the earning line being paid out to the employee for the current pay year.",
          "example": 18000,
          "type": "number",
          "format": "double"
        }
      }
    },
    "StatementReport": {
      "title": "StatementReport",
      "description": "A Statement report",
      "type": "object",
      "properties": {
        "id": {
          "description": "A report ID",
          "example": "u4hstnnak45g",
          "type": "string"
        },
        "customerType": {
          "description": "The type of customer (\"active\" or \"testing\" or \"\" for all types)",
          "example": "active",
          "type": "string"
        },
        "customerId": {
          "description": "A customer ID represented as a number. See Add Customer API for how to create a customer ID.",
          "example": 1005061234,
          "type": "integer",
          "format": "int64"
        },
        "requestId": {
          "description": "Finicity indicator to track all activity associated with this report",
          "example": "cjqm4wtdcn",
          "type": "string"
        },
        "requesterName": {
          "description": "Name of a Finicity partner",
          "example": "Finicity Test API",
          "type": "string"
        },
        "createdDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "description": "Title of the report",
          "example": "Finicity Asset Ready Report (CRA)",
          "type": "string"
        },
        "consumerId": {
          "description": "A consumer ID. See Create Consumer API for how to create a consumer ID.",
          "example": "0bf46322c167b562e6cbed9d40e19a4c",
          "type": "string"
        },
        "consumerSsn": {
          "description": "Last 4 digits of a SSN",
          "example": "9999",
          "type": "string"
        },
        "type": {
          "description": "A report type. Possible values:\n\n  * \"voi\"\n\n\n  * \"voa\"\n\n\n  * \"voaHistory\"\n\n\n  * \"history\"\n\n\n  * \"voieTxVerify\"\n\n\n  * \"voieWithReport\"\n\n\n  * \"voieWithInterview\"\n\n\n  * \"paystatement\"\n\n\n  * \"preQualVoa\"\n\n\n  * \"assetSummary\"\n\n\n  * \"voie\"\n\n\n  * \"transactions\"\n\n\n  * \"statement\"\n\n\n  * \"voiePayroll\"\n\n\n  * \"voeTransactions\"\n\n\n  * \"voePayroll\"\n\n\n  * \"cfrp\"\n\n\n  * \"cfrb\"",
          "example": "voi",
          "type": "string"
        },
        "status": {
          "description": "A report generation status. Possible values: \"inProgress\", \"success\", \"failure\".",
          "example": "inProgress",
          "type": "string"
        },
        "errors": {
          "description": "In case errors occurred during the report generation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorMessage"
          }
        },
        "assetId": {
          "description": "An asset ID. Generated by Connect or by using the Store Customer Pay Statement API.",
          "example": "097545c5-1c2a-4f20-a5ef-77f0820344c9-2018601178",
          "type": "string"
        }
      }
    },
    "TransactionsReport": {
      "title": "TransactionsReport",
      "description": "A Transactions report",
      "type": "object",
      "properties": {
        "id": {
          "description": "A report ID",
          "example": "u4hstnnak45g",
          "type": "string"
        },
        "customerType": {
          "description": "The type of customer (\"active\" or \"testing\" or \"\" for all types)",
          "example": "active",
          "type": "string"
        },
        "customerId": {
          "description": "A customer ID represented as a number. See Add Customer API for how to create a customer ID.",
          "example": 1005061234,
          "type": "integer",
          "format": "int64"
        },
        "requestId": {
          "description": "Finicity indicator to track all activity associated with this report",
          "example": "cjqm4wtdcn",
          "type": "string"
        },
        "requesterName": {
          "description": "Name of a Finicity partner",
          "example": "Finicity Test API",
          "type": "string"
        },
        "createdDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "description": "Title of the report",
          "example": "Finicity Asset Ready Report (CRA)",
          "type": "string"
        },
        "consumerId": {
          "description": "A consumer ID. See Create Consumer API for how to create a consumer ID.",
          "example": "0bf46322c167b562e6cbed9d40e19a4c",
          "type": "string"
        },
        "consumerSsn": {
          "description": "Last 4 digits of a SSN",
          "example": "9999",
          "type": "string"
        },
        "type": {
          "description": "A report type. Possible values:\n\n  * \"voi\"\n\n\n  * \"voa\"\n\n\n  * \"voaHistory\"\n\n\n  * \"history\"\n\n\n  * \"voieTxVerify\"\n\n\n  * \"voieWithReport\"\n\n\n  * \"voieWithInterview\"\n\n\n  * \"paystatement\"\n\n\n  * \"preQualVoa\"\n\n\n  * \"assetSummary\"\n\n\n  * \"voie\"\n\n\n  * \"transactions\"\n\n\n  * \"statement\"\n\n\n  * \"voiePayroll\"\n\n\n  * \"voeTransactions\"\n\n\n  * \"voePayroll\"\n\n\n  * \"cfrp\"\n\n\n  * \"cfrb\"",
          "example": "voi",
          "type": "string"
        },
        "status": {
          "description": "A report generation status. Possible values: \"inProgress\", \"success\", \"failure\".",
          "example": "inProgress",
          "type": "string"
        },
        "errors": {
          "description": "In case errors occurred during the report generation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorMessage"
          }
        },
        "portfolioId": {
          "description": "A unique identifier that will be consistent across all reports created for the same customer",
          "example": "y4zsgccj4xpw-6-port",
          "type": "string"
        },
        "startDate": {
          "description": "The `postedDate` of the earliest transaction analyzed for the report. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "endDate": {
          "description": "The `postedDate` of the latest transaction analyzed for the report. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "days": {
          "description": "Number of days covered by the report",
          "example": 174,
          "type": "integer",
          "format": "int64"
        },
        "seasoned": {
          "description": "\"true\" if the report covers more than 365 days",
          "example": false,
          "type": "boolean"
        },
        "institutions": {
          "description": "A list of institution records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportInstitution"
          }
        }
      }
    },
    "VOAReport": {
      "title": "VOAReport",
      "description": "A VOA report",
      "type": "object",
      "properties": {
        "id": {
          "description": "A report ID",
          "example": "u4hstnnak45g",
          "type": "string"
        },
        "customerType": {
          "description": "The type of customer (\"active\" or \"testing\" or \"\" for all types)",
          "example": "active",
          "type": "string"
        },
        "customerId": {
          "description": "A customer ID represented as a number. See Add Customer API for how to create a customer ID.",
          "example": 1005061234,
          "type": "integer",
          "format": "int64"
        },
        "requestId": {
          "description": "Finicity indicator to track all activity associated with this report",
          "example": "cjqm4wtdcn",
          "type": "string"
        },
        "requesterName": {
          "description": "Name of a Finicity partner",
          "example": "Finicity Test API",
          "type": "string"
        },
        "createdDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "description": "Title of the report",
          "example": "Finicity Asset Ready Report (CRA)",
          "type": "string"
        },
        "consumerId": {
          "description": "A consumer ID. See Create Consumer API for how to create a consumer ID.",
          "example": "0bf46322c167b562e6cbed9d40e19a4c",
          "type": "string"
        },
        "consumerSsn": {
          "description": "Last 4 digits of a SSN",
          "example": "9999",
          "type": "string"
        },
        "type": {
          "description": "A report type. Possible values:\n\n  * \"voi\"\n\n\n  * \"voa\"\n\n\n  * \"voaHistory\"\n\n\n  * \"history\"\n\n\n  * \"voieTxVerify\"\n\n\n  * \"voieWithReport\"\n\n\n  * \"voieWithInterview\"\n\n\n  * \"paystatement\"\n\n\n  * \"preQualVoa\"\n\n\n  * \"assetSummary\"\n\n\n  * \"voie\"\n\n\n  * \"transactions\"\n\n\n  * \"statement\"\n\n\n  * \"voiePayroll\"\n\n\n  * \"voeTransactions\"\n\n\n  * \"voePayroll\"\n\n\n  * \"cfrp\"\n\n\n  * \"cfrb\"",
          "example": "voi",
          "type": "string"
        },
        "status": {
          "description": "A report generation status. Possible values: \"inProgress\", \"success\", \"failure\".",
          "example": "inProgress",
          "type": "string"
        },
        "errors": {
          "description": "In case errors occurred during the report generation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorMessage"
          }
        },
        "portfolioId": {
          "description": "A unique identifier that will be consistent across all reports created for the same customer",
          "example": "y4zsgccj4xpw-6-port",
          "type": "string"
        },
        "startDate": {
          "description": "The `postedDate` of the earliest transaction analyzed for the report. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "endDate": {
          "description": "The `postedDate` of the latest transaction analyzed for the report. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "days": {
          "description": "Number of days covered by the report",
          "example": 180,
          "type": "integer",
          "format": "int32"
        },
        "seasoned": {
          "description": "\"true\" if the report covers more than 180 days",
          "example": true,
          "type": "boolean"
        },
        "consolidatedAvailableBalance": {
          "description": "The sum of available balance for all of the accounts included in the report",
          "example": 1929.57,
          "type": "number",
          "format": "double"
        },
        "institutions": {
          "description": "A list of institution records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportInstitution"
          }
        },
        "assets": {
          "$ref": "#/definitions/PrequalificationReportAssetSummary"
        }
      }
    },
    "VOEPayrollReport": {
      "title": "VOEPayrollReport",
      "description": "A VOE Payroll report",
      "type": "object",
      "properties": {
        "id": {
          "description": "A report ID",
          "example": "u4hstnnak45g",
          "type": "string"
        },
        "customerType": {
          "description": "The type of customer (\"active\" or \"testing\" or \"\" for all types)",
          "example": "active",
          "type": "string"
        },
        "customerId": {
          "description": "A customer ID represented as a number. See Add Customer API for how to create a customer ID.",
          "example": 1005061234,
          "type": "integer",
          "format": "int64"
        },
        "requestId": {
          "description": "Finicity indicator to track all activity associated with this report",
          "example": "cjqm4wtdcn",
          "type": "string"
        },
        "requesterName": {
          "description": "Name of a Finicity partner",
          "example": "Finicity Test API",
          "type": "string"
        },
        "createdDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "description": "Title of the report",
          "example": "Finicity Asset Ready Report (CRA)",
          "type": "string"
        },
        "consumerId": {
          "description": "A consumer ID. See Create Consumer API for how to create a consumer ID.",
          "example": "0bf46322c167b562e6cbed9d40e19a4c",
          "type": "string"
        },
        "consumerSsn": {
          "description": "Last 4 digits of a SSN",
          "example": "9999",
          "type": "string"
        },
        "type": {
          "description": "A report type. Possible values:\n\n  * \"voi\"\n\n\n  * \"voa\"\n\n\n  * \"voaHistory\"\n\n\n  * \"history\"\n\n\n  * \"voieTxVerify\"\n\n\n  * \"voieWithReport\"\n\n\n  * \"voieWithInterview\"\n\n\n  * \"paystatement\"\n\n\n  * \"preQualVoa\"\n\n\n  * \"assetSummary\"\n\n\n  * \"voie\"\n\n\n  * \"transactions\"\n\n\n  * \"statement\"\n\n\n  * \"voiePayroll\"\n\n\n  * \"voeTransactions\"\n\n\n  * \"voePayroll\"\n\n\n  * \"cfrp\"\n\n\n  * \"cfrb\"",
          "example": "voi",
          "type": "string"
        },
        "status": {
          "description": "A report generation status. Possible values: \"inProgress\", \"success\", \"failure\".",
          "example": "inProgress",
          "type": "string"
        },
        "errors": {
          "description": "In case errors occurred during the report generation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorMessage"
          }
        },
        "portfolioId": {
          "description": "A unique identifier that will be consistent across all reports created for the same customer",
          "example": "y4zsgccj4xpw-6-port",
          "type": "string"
        },
        "employmentHistory": {
          "description": "An array of employment histories, one for each of the consumer's verified employers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PayrollEmploymentHistory"
          }
        }
      }
    },
    "PayrollEmploymentHistory": {
      "title": "PayrollEmploymentHistory",
      "type": "object",
      "properties": {
        "asOfDate": {
          "description": "The last time the payroll data was updated in the payroll provider's system",
          "example": 1596175200,
          "type": "integer",
          "format": "int64"
        },
        "employerName": {
          "description": "Name of the employer as stated by the employer in the payroll system",
          "example": "ACME INC",
          "type": "string"
        },
        "payrollSource": {
          "description": "The name of the payroll source where the data was retrieved",
          "example": "finPayroll",
          "type": "string"
        },
        "employee": {
          "$ref": "#/definitions/PayrollEmployeeRecord"
        },
        "employment": {
          "$ref": "#/definitions/PayrollEmploymentRecord"
        },
        "income": {
          "$ref": "#/definitions/PayrollVOEIncomeRecord"
        }
      },
      "required": [
        "asOfDate",
        "employerName",
        "payrollSource",
        "employee",
        "employment",
        "income"
      ]
    },
    "PayrollVOEIncomeRecord": {
      "title": "PayrollVOEIncomeRecord",
      "type": "object",
      "properties": {
        "payFrequency": {
          "description": "The current pay frequency: <br> * `Daily` <br> * `Weekly` <br> * `Bi-Weekly` <br> * `Bi-Weekly Odd` (Bi-Weekly pay on odd weeks) <br> * `Bi-Weekly Even` (Bi-Weekly pay on even weeks) <br> * `Semi-Monthly` <br> * `Monthly` <br> * `Quarterly` <br>* `Semi-Annual` <br> * `Annual` <br>  * `Every 2.6 wks` <br> * `Every 4 wks` <br> * `Every 5.2 wks`",
          "example": "Weekly",
          "type": "string"
        }
      },
      "required": [
        "payFrequency"
      ]
    },
    "PayrollEmployeeRecord": {
      "title": "PayrollEmployeeRecord",
      "type": "object",
      "properties": {
        "name": {
          "description": "Full name of the employee: first, middle (if stated), and last name",
          "example": "John Doe Smith",
          "type": "string"
        },
        "givenName": {
          "description": "First name of employee",
          "example": "John",
          "type": "string"
        },
        "middleName": {
          "description": "Middle name of employee, if stated",
          "example": "Doe",
          "type": "string"
        },
        "familyName": {
          "description": "Last name of employee",
          "example": "Smith",
          "type": "string"
        },
        "address": {
          "description": "Array of addresses",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PayrollEmployeeAddress"
          }
        }
      },
      "required": [
        "name",
        "givenName",
        "familyName"
      ]
    },
    "PayrollEmployerAddress": {
      "title": "PayrollEmployerAddress",
      "type": "object",
      "properties": {
        "address1": {
          "description": "Employer address as stated by the employer in the payroll system",
          "example": "Address 1",
          "type": "string"
        },
        "city": {
          "description": "Employer city as stated by the employer in the payroll system",
          "example": "City",
          "type": "string"
        },
        "state": {
          "description": "Employer state as stated by the employer in the payroll system",
          "example": "TX",
          "type": "string"
        },
        "zip": {
          "description": "Employer zip code as stated by the employer in the payroll system",
          "example": "99999",
          "type": "string"
        }
      }
    },
    "PayrollEmploymentRecord": {
      "title": "PayrollEmploymentRecord",
      "type": "object",
      "properties": {
        "employerName": {
          "description": "Name of the employer as stated by the employer in the payroll system",
          "example": "ACME INC",
          "type": "string"
        },
        "legalEntityId": {
          "description": "Employer identification number (EIN)",
          "example": "752760000",
          "type": "string"
        },
        "originalHireDate": {
          "description": "The original hired date of an employee at the company",
          "example": 1527832800,
          "type": "integer",
          "format": "int64"
        },
        "latestHireDate": {
          "description": "If an employee leaves the company and returns later, then the employer states the latest hire date at the company",
          "example": 1527832800,
          "type": "integer",
          "format": "int64"
        },
        "latestPayDate": {
          "description": "The most recent pay date from an employer",
          "example": 1596175200,
          "type": "integer",
          "format": "int64"
        },
        "daysSinceLastPay": {
          "description": "The number of days since an employee was last paid",
          "example": 10,
          "type": "integer",
          "format": "int32"
        },
        "numberPayCadenceWithoutPay": {
          "description": "The number of pay cadences an employee has not been paid; determined by the pay frequency",
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "employmentEndDate": {
          "description": "The date an employee ended their employment at the company",
          "example": 1527832800,
          "type": "integer",
          "format": "int64"
        },
        "employmentDuration": {
          "description": "The length of time an employee has been employed with that employer in ISO 8601 format (eg P1Y6M0D)",
          "example": "P1Y6M0D",
          "type": "string"
        },
        "employerAddress": {
          "description": "Array of addresses",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PayrollEmployerAddress"
          }
        },
        "employmentStatusCode": {
          "description": "Status codes: `A` - Active, `NLE` - No Longer Employed, `L` - Leave",
          "example": "A",
          "type": "string"
        },
        "employmentStatusName": {
          "description": "Status name: `Active`, `No Longer Employed`, or `Leave`",
          "example": "Active",
          "type": "string"
        },
        "workLevelCode": {
          "description": "The abbreviate code for the employment level names (workLevelName) that we receive from the employer",
          "example": "FT",
          "type": "string"
        },
        "workLevelName": {
          "description": "The employment level name is whatever we receive from the employer, such as full time, part time, temp, contractor, and more",
          "example": "Full Time-Regular",
          "type": "string"
        },
        "workLevelStatus": {
          "description": "The categorized work level status. Enumerations are: <br> * `Temporary` <br> * `Seasonal` <br> * `Retired` <br> * `Student` <br> * `Full Time` <br> * `Part Time` <br> * `Unspecified` <br> This is a new field, currently enabled only for testing reports. It will be added for all reports in August 2021.",
          "example": "Full Time",
          "type": "string"
        },
        "positionTitle": {
          "description": "Employee job title",
          "example": "Shift Supervisor",
          "type": "string"
        },
        "positionDuration": {
          "description": "The length of time an employee has been employed at their current or latest position for this employment in ISO 8601 format (eg P1Y6M0D)",
          "example": "P1Y6M0D",
          "type": "string"
        }
      },
      "required": [
        "employerName",
        "latestPayDate",
        "daysSinceLastPay",
        "numberPayCadenceWithoutPay",
        "employmentStatusCode",
        "employmentStatusName",
        "workLevelStatus"
      ]
    },
    "PayrollEmployeeAddress": {
      "title": "PayrollEmployeeAddress",
      "type": "object",
      "properties": {
        "address1": {
          "description": "Employee address as stated by the employer in the payroll system",
          "example": "Address 1",
          "type": "string"
        },
        "city": {
          "description": "Employee city as stated by the employer in the payroll system",
          "example": "City",
          "type": "string"
        },
        "state": {
          "description": "Employee state as stated by the employer in the payroll system",
          "example": "TX",
          "type": "string"
        },
        "zip": {
          "description": "Employee zip code as stated by the employer in the payroll system",
          "example": "99999",
          "type": "string"
        }
      }
    },
    "VOETransactionsReport": {
      "title": "VOETransactionsReport",
      "description": "A VOE Transactions report",
      "type": "object",
      "properties": {
        "id": {
          "description": "A report ID",
          "example": "u4hstnnak45g",
          "type": "string"
        },
        "customerType": {
          "description": "The type of customer (\"active\" or \"testing\" or \"\" for all types)",
          "example": "active",
          "type": "string"
        },
        "customerId": {
          "description": "A customer ID represented as a number. See Add Customer API for how to create a customer ID.",
          "example": 1005061234,
          "type": "integer",
          "format": "int64"
        },
        "requestId": {
          "description": "Finicity indicator to track all activity associated with this report",
          "example": "cjqm4wtdcn",
          "type": "string"
        },
        "requesterName": {
          "description": "Name of a Finicity partner",
          "example": "Finicity Test API",
          "type": "string"
        },
        "createdDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "description": "Title of the report",
          "example": "Finicity Asset Ready Report (CRA)",
          "type": "string"
        },
        "consumerId": {
          "description": "A consumer ID. See Create Consumer API for how to create a consumer ID.",
          "example": "0bf46322c167b562e6cbed9d40e19a4c",
          "type": "string"
        },
        "consumerSsn": {
          "description": "Last 4 digits of a SSN",
          "example": "9999",
          "type": "string"
        },
        "type": {
          "description": "A report type. Possible values:\n\n  * \"voi\"\n\n\n  * \"voa\"\n\n\n  * \"voaHistory\"\n\n\n  * \"history\"\n\n\n  * \"voieTxVerify\"\n\n\n  * \"voieWithReport\"\n\n\n  * \"voieWithInterview\"\n\n\n  * \"paystatement\"\n\n\n  * \"preQualVoa\"\n\n\n  * \"assetSummary\"\n\n\n  * \"voie\"\n\n\n  * \"transactions\"\n\n\n  * \"statement\"\n\n\n  * \"voiePayroll\"\n\n\n  * \"voeTransactions\"\n\n\n  * \"voePayroll\"\n\n\n  * \"cfrp\"\n\n\n  * \"cfrb\"",
          "example": "voi",
          "type": "string"
        },
        "status": {
          "description": "A report generation status. Possible values: \"inProgress\", \"success\", \"failure\".",
          "example": "inProgress",
          "type": "string"
        },
        "errors": {
          "description": "In case errors occurred during the report generation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorMessage"
          }
        },
        "portfolioId": {
          "description": "A unique identifier that will be consistent across all reports created for the same customer",
          "example": "y4zsgccj4xpw-6-port",
          "type": "string"
        },
        "startDate": {
          "description": "The `postedDate` of the earliest transaction analyzed for the report. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "endDate": {
          "description": "The `postedDate` of the latest transaction analyzed for the report. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "days": {
          "description": "Number of days covered by the report",
          "example": 120,
          "type": "integer",
          "format": "int32"
        },
        "seasoned": {
          "description": "\"true\" if the report covers more than 180 days",
          "example": true,
          "type": "boolean"
        },
        "institutions": {
          "description": "A list of institution records, including information about the individual accounts used in this report",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportInstitution"
          }
        }
      }
    },
    "VOIReport": {
      "title": "VOIReport",
      "description": "A VOI report",
      "type": "object",
      "properties": {
        "id": {
          "description": "A report ID",
          "example": "u4hstnnak45g",
          "type": "string"
        },
        "customerType": {
          "description": "The type of customer (\"active\" or \"testing\" or \"\" for all types)",
          "example": "active",
          "type": "string"
        },
        "customerId": {
          "description": "A customer ID represented as a number. See Add Customer API for how to create a customer ID.",
          "example": 1005061234,
          "type": "integer",
          "format": "int64"
        },
        "requestId": {
          "description": "Finicity indicator to track all activity associated with this report",
          "example": "cjqm4wtdcn",
          "type": "string"
        },
        "requesterName": {
          "description": "Name of a Finicity partner",
          "example": "Finicity Test API",
          "type": "string"
        },
        "createdDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "description": "Title of the report",
          "example": "Finicity Asset Ready Report (CRA)",
          "type": "string"
        },
        "consumerId": {
          "description": "A consumer ID. See Create Consumer API for how to create a consumer ID.",
          "example": "0bf46322c167b562e6cbed9d40e19a4c",
          "type": "string"
        },
        "consumerSsn": {
          "description": "Last 4 digits of a SSN",
          "example": "9999",
          "type": "string"
        },
        "type": {
          "description": "A report type. Possible values:\n\n  * \"voi\"\n\n\n  * \"voa\"\n\n\n  * \"voaHistory\"\n\n\n  * \"history\"\n\n\n  * \"voieTxVerify\"\n\n\n  * \"voieWithReport\"\n\n\n  * \"voieWithInterview\"\n\n\n  * \"paystatement\"\n\n\n  * \"preQualVoa\"\n\n\n  * \"assetSummary\"\n\n\n  * \"voie\"\n\n\n  * \"transactions\"\n\n\n  * \"statement\"\n\n\n  * \"voiePayroll\"\n\n\n  * \"voeTransactions\"\n\n\n  * \"voePayroll\"\n\n\n  * \"cfrp\"\n\n\n  * \"cfrb\"",
          "example": "voi",
          "type": "string"
        },
        "status": {
          "description": "A report generation status. Possible values: \"inProgress\", \"success\", \"failure\".",
          "example": "inProgress",
          "type": "string"
        },
        "errors": {
          "description": "In case errors occurred during the report generation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorMessage"
          }
        },
        "portfolioId": {
          "description": "A unique identifier that will be consistent across all reports created for the same customer",
          "example": "y4zsgccj4xpw-6-port",
          "type": "string"
        },
        "startDate": {
          "description": "The `postedDate` of the earliest transaction analyzed for the report. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "endDate": {
          "description": "The `postedDate` of the latest transaction analyzed for the report. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "days": {
          "description": "Number of days covered by the report",
          "example": 200,
          "type": "integer",
          "format": "int64"
        },
        "seasoned": {
          "description": "\"true\" if the report covers more than 180 days",
          "example": true,
          "type": "boolean"
        },
        "institutions": {
          "description": "A list of institution records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportInstitution"
          }
        },
        "income": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportIncomeStreamSummary"
          }
        }
      }
    },
    "ReportIncomeStreamSummary": {
      "title": "ReportIncomeStreamSummary",
      "type": "object",
      "properties": {
        "confidenceType": {
          "description": "Possible values: \"HIGH\", \"MODERATE\", \"LOW\", \"NO\"",
          "type": "string"
        },
        "netMonthly": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetMonthly"
          }
        },
        "incomeEstimate": {
          "$ref": "#/definitions/ReportIncomeEstimate"
        }
      },
      "required": [
        "confidenceType",
        "netMonthly",
        "incomeEstimate"
      ]
    },
    "ReportIncomeEstimate": {
      "title": "ReportIncomeEstimate",
      "type": "object",
      "properties": {
        "netAnnual": {
          "example": 1000.12,
          "type": "number",
          "format": "double"
        },
        "projectedNetAnnual": {
          "example": 1500.23,
          "type": "number",
          "format": "double"
        },
        "estimatedGrossAnnual": {
          "example": 2000.12,
          "type": "number",
          "format": "double"
        },
        "projectedGrossAnnual": {
          "example": 2500.23,
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "netAnnual",
        "projectedNetAnnual",
        "estimatedGrossAnnual",
        "projectedGrossAnnual"
      ]
    },
    "VOIEPayrollReport": {
      "title": "VOIEPayrollReport",
      "description": "A VOIE Payroll report",
      "type": "object",
      "properties": {
        "id": {
          "description": "A report ID",
          "example": "u4hstnnak45g",
          "type": "string"
        },
        "customerType": {
          "description": "The type of customer (\"active\" or \"testing\" or \"\" for all types)",
          "example": "active",
          "type": "string"
        },
        "customerId": {
          "description": "A customer ID represented as a number. See Add Customer API for how to create a customer ID.",
          "example": 1005061234,
          "type": "integer",
          "format": "int64"
        },
        "requestId": {
          "description": "Finicity indicator to track all activity associated with this report",
          "example": "cjqm4wtdcn",
          "type": "string"
        },
        "requesterName": {
          "description": "Name of a Finicity partner",
          "example": "Finicity Test API",
          "type": "string"
        },
        "createdDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "description": "Title of the report",
          "example": "Finicity Asset Ready Report (CRA)",
          "type": "string"
        },
        "consumerId": {
          "description": "A consumer ID. See Create Consumer API for how to create a consumer ID.",
          "example": "0bf46322c167b562e6cbed9d40e19a4c",
          "type": "string"
        },
        "consumerSsn": {
          "description": "Last 4 digits of a SSN",
          "example": "9999",
          "type": "string"
        },
        "type": {
          "description": "A report type. Possible values:\n\n  * \"voi\"\n\n\n  * \"voa\"\n\n\n  * \"voaHistory\"\n\n\n  * \"history\"\n\n\n  * \"voieTxVerify\"\n\n\n  * \"voieWithReport\"\n\n\n  * \"voieWithInterview\"\n\n\n  * \"paystatement\"\n\n\n  * \"preQualVoa\"\n\n\n  * \"assetSummary\"\n\n\n  * \"voie\"\n\n\n  * \"transactions\"\n\n\n  * \"statement\"\n\n\n  * \"voiePayroll\"\n\n\n  * \"voeTransactions\"\n\n\n  * \"voePayroll\"\n\n\n  * \"cfrp\"\n\n\n  * \"cfrb\"",
          "example": "voi",
          "type": "string"
        },
        "status": {
          "description": "A report generation status. Possible values: \"inProgress\", \"success\", \"failure\".",
          "example": "inProgress",
          "type": "string"
        },
        "errors": {
          "description": "In case errors occurred during the report generation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorMessage"
          }
        },
        "portfolioId": {
          "description": "A unique identifier that will be consistent across all reports created for the same customer",
          "example": "y4zsgccj4xpw-6-port",
          "type": "string"
        },
        "employmentHistory": {
          "description": "An array of employment histories, one for each of the consumer's verified employers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PayrollEmploymentHistory"
          }
        }
      }
    },
    "VOIEPaystubReport": {
      "title": "VOIEPaystubReport",
      "description": "A VOIE Paystub report",
      "type": "object",
      "properties": {
        "id": {
          "description": "A report ID",
          "example": "u4hstnnak45g",
          "type": "string"
        },
        "customerType": {
          "description": "The type of customer (\"active\" or \"testing\" or \"\" for all types)",
          "example": "active",
          "type": "string"
        },
        "customerId": {
          "description": "A customer ID represented as a number. See Add Customer API for how to create a customer ID.",
          "example": 1005061234,
          "type": "integer",
          "format": "int64"
        },
        "requestId": {
          "description": "Finicity indicator to track all activity associated with this report",
          "example": "cjqm4wtdcn",
          "type": "string"
        },
        "requesterName": {
          "description": "Name of a Finicity partner",
          "example": "Finicity Test API",
          "type": "string"
        },
        "createdDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "description": "Title of the report",
          "example": "Finicity Asset Ready Report (CRA)",
          "type": "string"
        },
        "consumerId": {
          "description": "A consumer ID. See Create Consumer API for how to create a consumer ID.",
          "example": "0bf46322c167b562e6cbed9d40e19a4c",
          "type": "string"
        },
        "consumerSsn": {
          "description": "Last 4 digits of a SSN",
          "example": "9999",
          "type": "string"
        },
        "type": {
          "description": "A report type. Possible values:\n\n  * \"voi\"\n\n\n  * \"voa\"\n\n\n  * \"voaHistory\"\n\n\n  * \"history\"\n\n\n  * \"voieTxVerify\"\n\n\n  * \"voieWithReport\"\n\n\n  * \"voieWithInterview\"\n\n\n  * \"paystatement\"\n\n\n  * \"preQualVoa\"\n\n\n  * \"assetSummary\"\n\n\n  * \"voie\"\n\n\n  * \"transactions\"\n\n\n  * \"statement\"\n\n\n  * \"voiePayroll\"\n\n\n  * \"voeTransactions\"\n\n\n  * \"voePayroll\"\n\n\n  * \"cfrp\"\n\n\n  * \"cfrb\"",
          "example": "voi",
          "type": "string"
        },
        "status": {
          "description": "A report generation status. Possible values: \"inProgress\", \"success\", \"failure\".",
          "example": "inProgress",
          "type": "string"
        },
        "errors": {
          "description": "In case errors occurred during the report generation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorMessage"
          }
        },
        "portfolioId": {
          "description": "A unique identifier that will be consistent across all reports created for the same customer",
          "example": "y4zsgccj4xpw-6-port",
          "type": "string"
        },
        "assetIds": {
          "description": "The pay statements included in the report",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "numberOfBillableAssets": {
          "description": "Total number of billable pay statements included in the report",
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "payStatements": {
          "description": "Extracted pay statement details, and the transaction matching summary",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VOIEPaystubWithStatementPayStatement"
          }
        }
      }
    },
    "VOIEPaystubWithStatementPayStatement": {
      "title": "VOIEPaystubWithStatementPayStatement",
      "type": "object",
      "properties": {
        "payPeriod": {
          "description": "The pay period of the pay statement",
          "example": "LastPayPeriod",
          "type": "string"
        },
        "billable": {
          "description": "This will display true if the pay statement is billable. If a pay statement has been digitized previously, this will display as false as it will not be billable.",
          "example": true,
          "type": "boolean"
        },
        "assetId": {
          "description": "The asset ID of the stored pay statement",
          "example": "6f8fb0a0-e882-4f57-b672-cf53f1397581",
          "type": "string"
        },
        "payDate": {
          "description": "The listed pay date for the pay statement",
          "example": 1559241000,
          "type": "integer",
          "format": "int64"
        },
        "startDate": {
          "description": "The beginning of the pay period",
          "example": 1557513000,
          "type": "integer",
          "format": "int64"
        },
        "endDate": {
          "description": "The end of the pay period",
          "example": 1558722600,
          "type": "integer",
          "format": "int64"
        },
        "netPayCurrent": {
          "description": "The total pay after deductions for the employee for the current pay period",
          "example": 1802.22,
          "type": "number",
          "format": "double"
        },
        "netPayYTD": {
          "description": "The total accumulation of pay after deductions for the employee for the current pay year",
          "example": 36000,
          "type": "number",
          "format": "double"
        },
        "grossPayCurrent": {
          "description": "The total pay before deductions for the employee for the current pay period",
          "example": 24200,
          "type": "number",
          "format": "double"
        },
        "grossPayYTD": {
          "description": "The total accumulation of pay before deductions for the employee for the current pay year",
          "example": 72600,
          "type": "number",
          "format": "double"
        },
        "payrollProvider": {
          "description": "The payroll provider extracted from the pay statement",
          "example": "Finicity",
          "type": "string"
        },
        "employer": {
          "$ref": "#/definitions/Employer"
        },
        "employee": {
          "$ref": "#/definitions/Employee"
        },
        "payStat": {
          "description": "Information pertaining to the earnings on the pay statement",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PayStat"
          }
        },
        "directDeposits": {
          "description": "Information pertaining to the direct deposits on the pay statement",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DirectDeposit"
          }
        },
        "monthlyIncome": {
          "$ref": "#/definitions/PaystubMonthlyIncomeRecord"
        },
        "institutions": {
          "description": "Not populated for the voieWithStatement style of paystub report. For the VOIE - Paystub (with TXVerify) reports this would include details of the financial institution accounts and income streams with matching transactions to the pay statement.",
          "example": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "errorCode": {
          "description": "Error code for the asset",
          "type": "integer",
          "format": "int32"
        },
        "errorMessage": {
          "description": "Error message for the asset",
          "type": "string"
        }
      },
      "required": [
        "payPeriod",
        "billable",
        "assetId",
        "payDate",
        "startDate",
        "endDate",
        "netPayCurrent",
        "netPayYTD",
        "grossPayCurrent",
        "grossPayYTD",
        "employer",
        "employee",
        "payStat",
        "directDeposits",
        "monthlyIncome",
        "institutions"
      ]
    },
    "PaystubMonthlyIncomeRecord": {
      "title": "PaystubMonthlyIncomeRecord",
      "type": "object",
      "properties": {
        "estimatedMonthlyBasePay": {
          "description": "The estimated monthly base pay amount for the employment from the paystub, calculated by Finicity",
          "example": 2000,
          "type": "number",
          "format": "double"
        },
        "estimatedMonthlyOvertimePay": {
          "description": "The estimated monthly overtime pay amount for the employment from the paystub, calculated by Finicity",
          "example": 50,
          "type": "number",
          "format": "double"
        },
        "estimatedMonthlyBonusPay": {
          "description": "The estimated monthly bonus pay amount for the employment from the paystub, calculated by Finicity",
          "example": 20,
          "type": "number",
          "format": "double"
        },
        "estimatedMonthlyCommissionPay": {
          "description": "The estimated commission bonus pay amount for the employment from the paystub, calculated by Finicity",
          "example": 50,
          "type": "number",
          "format": "double"
        }
      }
    },
    "VOIEPaystubWithTXVerifyReport": {
      "title": "VOIEPaystubWithTXVerifyReport",
      "description": "A VOIE Paystub With TXVerify report",
      "type": "object",
      "properties": {
        "id": {
          "description": "A report ID",
          "example": "u4hstnnak45g",
          "type": "string"
        },
        "customerType": {
          "description": "The type of customer (\"active\" or \"testing\" or \"\" for all types)",
          "example": "active",
          "type": "string"
        },
        "customerId": {
          "description": "A customer ID represented as a number. See Add Customer API for how to create a customer ID.",
          "example": 1005061234,
          "type": "integer",
          "format": "int64"
        },
        "requestId": {
          "description": "Finicity indicator to track all activity associated with this report",
          "example": "cjqm4wtdcn",
          "type": "string"
        },
        "requesterName": {
          "description": "Name of a Finicity partner",
          "example": "Finicity Test API",
          "type": "string"
        },
        "createdDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "description": "Title of the report",
          "example": "Finicity Asset Ready Report (CRA)",
          "type": "string"
        },
        "consumerId": {
          "description": "A consumer ID. See Create Consumer API for how to create a consumer ID.",
          "example": "0bf46322c167b562e6cbed9d40e19a4c",
          "type": "string"
        },
        "consumerSsn": {
          "description": "Last 4 digits of a SSN",
          "example": "9999",
          "type": "string"
        },
        "type": {
          "description": "A report type. Possible values:\n\n  * \"voi\"\n\n\n  * \"voa\"\n\n\n  * \"voaHistory\"\n\n\n  * \"history\"\n\n\n  * \"voieTxVerify\"\n\n\n  * \"voieWithReport\"\n\n\n  * \"voieWithInterview\"\n\n\n  * \"paystatement\"\n\n\n  * \"preQualVoa\"\n\n\n  * \"assetSummary\"\n\n\n  * \"voie\"\n\n\n  * \"transactions\"\n\n\n  * \"statement\"\n\n\n  * \"voiePayroll\"\n\n\n  * \"voeTransactions\"\n\n\n  * \"voePayroll\"\n\n\n  * \"cfrp\"\n\n\n  * \"cfrb\"",
          "example": "voi",
          "type": "string"
        },
        "status": {
          "description": "A report generation status. Possible values: \"inProgress\", \"success\", \"failure\".",
          "example": "inProgress",
          "type": "string"
        },
        "errors": {
          "description": "In case errors occurred during the report generation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorMessage"
          }
        },
        "portfolioId": {
          "description": "A unique identifier that will be consistent across all reports created for the same customer",
          "example": "y4zsgccj4xpw-6-port",
          "type": "string"
        },
        "assetIds": {
          "description": "The pay statements included in the report",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "numberOfBillableAssets": {
          "description": "Total number of billable pay statements included in the report",
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "payStatements": {
          "description": "Extracted pay statement details, and the transaction matching summary",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VOIEPaystubWithStatementPayStatement"
          }
        },
        "institutions": {
          "description": "The details of the financial institution accounts included in the report.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportInstitution"
          }
        }
      }
    },
    "ReportSummary": {
      "title": "ReportSummary",
      "type": "object",
      "properties": {
        "id": {
          "description": "A report ID",
          "example": "u4hstnnak45g",
          "type": "string"
        },
        "requestId": {
          "description": "Finicity indicator to track all activity associated with this report",
          "example": "cjqm4wtdcn",
          "type": "string"
        },
        "requesterName": {
          "description": "Name of a Finicity partner",
          "example": "Finicity Test API",
          "type": "string"
        },
        "createdDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "consumerId": {
          "description": "A consumer ID. See Create Consumer API for how to create a consumer ID.",
          "example": "0bf46322c167b562e6cbed9d40e19a4c",
          "type": "string"
        },
        "consumerSsn": {
          "description": "Last 4 digits of a SSN",
          "example": "9999",
          "type": "string"
        },
        "type": {
          "description": "A report type. Possible values:\n\n  * \"voi\"\n\n\n  * \"voa\"\n\n\n  * \"voaHistory\"\n\n\n  * \"history\"\n\n\n  * \"voieTxVerify\"\n\n\n  * \"voieWithReport\"\n\n\n  * \"voieWithInterview\"\n\n\n  * \"paystatement\"\n\n\n  * \"preQualVoa\"\n\n\n  * \"assetSummary\"\n\n\n  * \"voie\"\n\n\n  * \"transactions\"\n\n\n  * \"statement\"\n\n\n  * \"voiePayroll\"\n\n\n  * \"voeTransactions\"\n\n\n  * \"voePayroll\"\n\n\n  * \"cfrp\"\n\n\n  * \"cfrb\"",
          "example": "voi",
          "type": "string"
        },
        "status": {
          "description": "A report generation status. Possible values: \"inProgress\", \"success\", \"failure\".",
          "example": "inProgress",
          "type": "string"
        }
      },
      "required": [
        "id",
        "requestId",
        "requesterName",
        "createdDate",
        "consumerId",
        "consumerSsn",
        "type",
        "status"
      ]
    },
    "VOIEWithInterviewData": {
      "title": "VOIEWithInterviewData",
      "type": "object",
      "properties": {
        "txVerifyInterview": {
          "description": "An array of `TxVerifyInterview` objects",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TxVerifyInterview"
          }
        },
        "extractEarnings": {
          "description": "Field to indicate whether to extract the earnings on all pay statements",
          "example": true,
          "type": "boolean",
          "default": true
        },
        "extractDeductions": {
          "description": "Field to indicate whether to extract the deductions on all pay statements",
          "example": true,
          "type": "boolean",
          "default": false
        },
        "extractDirectDeposit": {
          "description": "Field to indicate whether to extract the direct deposits on all pay statements",
          "example": true,
          "type": "boolean",
          "default": true
        }
      },
      "required": [
        "txVerifyInterview"
      ]
    },
    "TxPushSubscriptionParameters": {
      "title": "TxPushSubscriptionParameters",
      "type": "object",
      "properties": {
        "callbackUrl": {
          "description": "A callback URL where to receive TxPush notifications",
          "example": "https://www.mydomain.com/txpush/listener",
          "type": "string"
        }
      },
      "required": [
        "callbackUrl"
      ]
    },
    "PayStatement": {
      "title": "PayStatement",
      "description": "A pay statement document and pay statement label",
      "type": "object",
      "properties": {
        "label": {
          "description": "The label to be associated with the pay statement. This label will allow the paystub to go through data extraction.\n* `lastPayPeriod`: default label that should be used for the VOIE - Paystub products\n* `lastPayPeriodMinusOne`: the second most recent pay statement\n* `lastPayPeriodMinusTwo`: the third most recent pay statement\n* `previousYearLastPayPeriod` Last pay statement of the previous calendar year\n* `previousYear2LastPayPeriod`: last pay statement of the calendar year 2 years prior\n* `earliestPayPeriod`: the earliest pay statement",
          "example": "lastPayPeriod",
          "type": "string"
        },
        "statement": {
          "description": "A Base64 encoded pay statement file. Finicity supports PDF, JPG, or PNG files.",
          "example": "VGhpcyBtdXN0IGJlIGFuIGltYWdl",
          "type": "string"
        }
      },
      "required": [
        "label",
        "statement"
      ]
    },
    "LoanPaymentDetails": {
      "title": "LoanPaymentDetails",
      "description": "Loan payment details for a customer account",
      "type": "object",
      "properties": {
        "loanNumber": {
          "description": "The number of the specific loan under the account.",
          "example": "123456789",
          "type": "string"
        },
        "loanPaymentNumber": {
          "description": "The payment number given by the institution. This number is typically for manual payments. This is not an ACH payment number.",
          "example": "5231123456789",
          "type": "string"
        },
        "loanPaymentAddress": {
          "description": "The payment address to send manual payments to",
          "example": "Heartland ECSI       PO Box 718       Wexford PA 15090",
          "type": "string"
        },
        "accountDetail": {
          "$ref": "#/definitions/LoanPaymentDetailsAccount"
        }
      },
      "required": [
        "loanNumber",
        "loanPaymentNumber",
        "loanPaymentAddress"
      ]
    },
    "Asset": {
      "title": "Asset",
      "description": "An asset",
      "type": "object",
      "properties": {
        "assetId": {
          "description": "An asset ID. Generated by Connect or by using the Store Customer Pay Statement API.",
          "example": "097545c5-1c2a-4f20-a5ef-77f0820344c9-2018601178",
          "type": "string"
        }
      },
      "required": [
        "assetId"
      ]
    },
    "TxPushSubscriptions": {
      "title": "TxPushSubscriptions",
      "type": "object",
      "properties": {
        "subscriptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubscriptionRecord"
          }
        }
      },
      "required": [
        "subscriptions"
      ]
    },
    "SubscriptionRecord": {
      "title": "SubscriptionRecord",
      "description": "TxPush subscription details",
      "type": "object",
      "properties": {
        "id": {
          "description": "ID of a TxPush subscription",
          "example": 17554874,
          "type": "integer",
          "format": "int64"
        },
        "accountId": {
          "description": "An account ID represented as a number",
          "example": 5011648377,
          "type": "integer",
          "format": "int64"
        },
        "type": {
          "description": "A TxPush subscription type (\"account\" or \"transaction\")",
          "example": "account",
          "type": "string"
        },
        "callbackUrl": {
          "description": "A callback URL where to receive TxPush notifications",
          "example": "https://www.mydomain.com/txpush/listener",
          "type": "string"
        },
        "signingKey": {
          "description": "Signing key for events",
          "example": "zg4U0v1IvTzFEHIXzJMxPHnfUwWZAMVpXrUuNuL9IvZI0QzkDdwp39IAKuNOFxOVqCOgHLMS1Zpe4ZL40NX83aJkqI6v0Ez5B7BLBtvr7Ag11kPH3uG1taTeOV0CTyI4LOg7ohSHn0DqaRu2aBq26KI90nYe0CecTCzzhu4yMXL43JV8YfydAexNdkzfg8tY44MlhBPUh2neHW2EFTT2ja4s4Ul10JgID03un8WBSrIm2adHw3QYJB4jk4k1e",
          "type": "string"
        }
      },
      "required": [
        "id",
        "accountId",
        "type",
        "callbackUrl",
        "signingKey"
      ]
    },
    "CreatedTestTxPushTransaction": {
      "title": "CreatedTestTxPushTransaction",
      "description": "Response for TxPush test transaction",
      "type": "object",
      "properties": {
        "id": {
          "description": "A transaction ID",
          "example": 21284820852,
          "type": "integer",
          "format": "int64"
        },
        "createdDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "id",
        "createdDate"
      ]
    },
    "ACHDetails": {
      "title": "ACHDetails",
      "description": "The routing and account number information to initiate ACH transfers",
      "type": "object",
      "properties": {
        "routingNumber": {
          "description": "The routing number of the financial institution for this specific customers account",
          "example": "123456789",
          "type": "string"
        },
        "realAccountNumber": {
          "description": "The account number for initiating ACH transfers for this account",
          "example": "002345678901",
          "type": "string"
        }
      },
      "required": [
        "routingNumber",
        "realAccountNumber"
      ]
    },
    "PayStatementReportConstraints": {
      "title": "PayStatementReportConstraints",
      "type": "object",
      "properties": {
        "paystatementReport": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/PayStatementData"
            },
            {
              "description": "Data to be included within the pay statement report"
            }
          ]
        },
        "reportCustomFields": {
          "description": "The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.\n\nDesignate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is \"true\" or \"false\".\n* \"true\": (default) display the custom field in the PDF report\n* \"false\": don't display the custom field in the PDF report\n\nFor an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.\n\nAll custom fields display in the Reseller Billing API.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportCustomField"
          }
        }
      },
      "required": [
        "paystatementReport"
      ]
    },
    "CashFlowReportConstraints": {
      "title": "CashFlowReportConstraints",
      "type": "object",
      "properties": {
        "accountIds": {
          "description": "A whitespace-separated list of account IDs to be included in the report (all accounts will be included if not set)",
          "example": "5011648377 5011648378 5011648379",
          "type": "string"
        },
        "reportCustomFields": {
          "description": "The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.\n\nDesignate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is \"true\" or \"false\".\n* \"true\": (default) display the custom field in the PDF report\n* \"false\": don't display the custom field in the PDF report\n\nFor an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.\n\nAll custom fields display in the Reseller Billing API.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportCustomField"
          }
        },
        "showNsf": {
          "description": "Include the non-sufficient funds (NSF) summary JSON and the NSF summary PDF section in the report. Data included:\n* Account\n\n* Total number of NSF funds\n\n* Days since the most recent NFS funds fee",
          "example": false,
          "type": "boolean"
        },
        "fromDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "incomeStreamConfidenceMinimum": {
          "description": "Include income streams in the report, based on the income stream's confidence score. For example, Use the value 50 to include only income streams with a confidence score of 50 or higher.",
          "example": 50,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CashFlowReportConstraintsOut": {
      "title": "CashFlowReportConstraintsOut",
      "type": "object",
      "properties": {
        "accountIds": {
          "description": "An array of account IDs to be included in the report (all accounts will be included if not set)",
          "example": [
            "5011648377",
            "5011648378",
            "5011648379"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reportCustomFields": {
          "description": "The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.\n\nDesignate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is \"true\" or \"false\".\n* \"true\": (default) display the custom field in the PDF report\n* \"false\": don't display the custom field in the PDF report\n\nFor an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.\n\nAll custom fields display in the Reseller Billing API.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportCustomField"
          }
        },
        "showNsf": {
          "description": "Include the non-sufficient funds (NSF) summary JSON and the NSF summary PDF section in the report. Data included:\n* Account\n\n* Total number of NSF funds\n\n* Days since the most recent NFS funds fee",
          "example": false,
          "type": "boolean"
        },
        "fromDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "incomeStreamConfidenceMinimum": {
          "description": "Include income streams in the report, based on the income stream's confidence score. For example, Use the value 50 to include only income streams with a confidence score of 50 or higher.",
          "example": 50,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PayStatementReportAck": {
      "title": "PayStatementReportAck",
      "type": "object",
      "properties": {
        "id": {
          "description": "A report ID",
          "example": "u4hstnnak45g",
          "type": "string"
        },
        "customerType": {
          "description": "The type of customer (\"active\" or \"testing\" or \"\" for all types)",
          "example": "active",
          "type": "string"
        },
        "customerId": {
          "description": "A customer ID represented as a number. See Add Customer API for how to create a customer ID.",
          "example": 1005061234,
          "type": "integer",
          "format": "int64"
        },
        "requestId": {
          "description": "Finicity indicator to track all activity associated with this report",
          "example": "cjqm4wtdcn",
          "type": "string"
        },
        "requesterName": {
          "description": "Name of a Finicity partner",
          "example": "Finicity Test API",
          "type": "string"
        },
        "createdDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "description": "Title of the report",
          "example": "Finicity Asset Ready Report (CRA)",
          "type": "string"
        },
        "consumerId": {
          "description": "A consumer ID. See Create Consumer API for how to create a consumer ID.",
          "example": "0bf46322c167b562e6cbed9d40e19a4c",
          "type": "string"
        },
        "consumerSsn": {
          "description": "Last 4 digits of a SSN",
          "example": "9999",
          "type": "string"
        },
        "type": {
          "description": "A report type. Possible values:\n\n  * \"voi\"\n\n\n  * \"voa\"\n\n\n  * \"voaHistory\"\n\n\n  * \"history\"\n\n\n  * \"voieTxVerify\"\n\n\n  * \"voieWithReport\"\n\n\n  * \"voieWithInterview\"\n\n\n  * \"paystatement\"\n\n\n  * \"preQualVoa\"\n\n\n  * \"assetSummary\"\n\n\n  * \"voie\"\n\n\n  * \"transactions\"\n\n\n  * \"statement\"\n\n\n  * \"voiePayroll\"\n\n\n  * \"voeTransactions\"\n\n\n  * \"voePayroll\"\n\n\n  * \"cfrp\"\n\n\n  * \"cfrb\"",
          "example": "voi",
          "type": "string"
        },
        "status": {
          "description": "A report generation status. Possible values: \"inProgress\", \"success\", \"failure\".",
          "example": "inProgress",
          "type": "string"
        },
        "errors": {
          "description": "In case errors occurred during the report generation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorMessage"
          }
        },
        "portfolioId": {
          "description": "A unique identifier that will be consistent across all reports created for the same customer",
          "example": "y4zsgccj4xpw-6-port",
          "type": "string"
        },
        "constraints": {
          "$ref": "#/definitions/PayStatementReportConstraints"
        }
      },
      "required": [
        "id",
        "customerType",
        "customerId",
        "requestId",
        "requesterName",
        "createdDate",
        "title",
        "consumerId",
        "consumerSsn",
        "type",
        "status",
        "portfolioId",
        "constraints"
      ]
    },
    "CashFlowReportAck": {
      "title": "CashFlowReportAck",
      "type": "object",
      "properties": {
        "id": {
          "description": "A report ID",
          "example": "u4hstnnak45g",
          "type": "string"
        },
        "customerType": {
          "description": "The type of customer (\"active\" or \"testing\" or \"\" for all types)",
          "example": "active",
          "type": "string"
        },
        "customerId": {
          "description": "A customer ID represented as a number. See Add Customer API for how to create a customer ID.",
          "example": 1005061234,
          "type": "integer",
          "format": "int64"
        },
        "requestId": {
          "description": "Finicity indicator to track all activity associated with this report",
          "example": "cjqm4wtdcn",
          "type": "string"
        },
        "requesterName": {
          "description": "Name of a Finicity partner",
          "example": "Finicity Test API",
          "type": "string"
        },
        "createdDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "description": "Title of the report",
          "example": "Finicity Asset Ready Report (CRA)",
          "type": "string"
        },
        "consumerId": {
          "description": "A consumer ID. See Create Consumer API for how to create a consumer ID.",
          "example": "0bf46322c167b562e6cbed9d40e19a4c",
          "type": "string"
        },
        "consumerSsn": {
          "description": "Last 4 digits of a SSN",
          "example": "9999",
          "type": "string"
        },
        "type": {
          "description": "A report type. Possible values:\n\n  * \"voi\"\n\n\n  * \"voa\"\n\n\n  * \"voaHistory\"\n\n\n  * \"history\"\n\n\n  * \"voieTxVerify\"\n\n\n  * \"voieWithReport\"\n\n\n  * \"voieWithInterview\"\n\n\n  * \"paystatement\"\n\n\n  * \"preQualVoa\"\n\n\n  * \"assetSummary\"\n\n\n  * \"voie\"\n\n\n  * \"transactions\"\n\n\n  * \"statement\"\n\n\n  * \"voiePayroll\"\n\n\n  * \"voeTransactions\"\n\n\n  * \"voePayroll\"\n\n\n  * \"cfrp\"\n\n\n  * \"cfrb\"",
          "example": "voi",
          "type": "string"
        },
        "status": {
          "description": "A report generation status. Possible values: \"inProgress\", \"success\", \"failure\".",
          "example": "inProgress",
          "type": "string"
        },
        "errors": {
          "description": "In case errors occurred during the report generation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorMessage"
          }
        },
        "constraints": {
          "$ref": "#/definitions/CashFlowReportConstraintsOut"
        }
      },
      "required": [
        "id",
        "customerType",
        "customerId",
        "requestId",
        "requesterName",
        "createdDate",
        "title",
        "consumerId",
        "consumerSsn",
        "type",
        "status",
        "constraints"
      ]
    },
    "VOIEWithTXVerifyReportConstraints": {
      "title": "VOIEWithTXVerifyReportConstraints",
      "type": "object",
      "properties": {
        "accountIds": {
          "description": "A whitespace-separated list of account IDs to be included in the report (all accounts will be included if not set)",
          "example": "5011648377 5011648378 5011648379",
          "type": "string"
        },
        "voieWithInterviewData": {
          "$ref": "#/definitions/VOIEWithInterviewData"
        },
        "reportCustomFields": {
          "description": "The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.\n\nDesignate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is \"true\" or \"false\".\n* \"true\": (default) display the custom field in the PDF report\n* \"false\": don't display the custom field in the PDF report\n\nFor an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.\n\nAll custom fields display in the Reseller Billing API.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportCustomField"
          }
        },
        "fromDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "incomeStreamConfidenceMinimum": {
          "description": "Include income streams in the report, based on the income stream's confidence score. For example, Use the value 50 to include only income streams with a confidence score of 50 or higher.",
          "example": 50,
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "voieWithInterviewData"
      ]
    },
    "VOIEWithTXVerifyReportConstraintsOut": {
      "title": "VOIEWithTXVerifyReportConstraintsOut",
      "type": "object",
      "properties": {
        "accountIds": {
          "description": "An array of account IDs to be included in the report (all accounts will be included if not set)",
          "example": [
            "5011648377",
            "5011648378",
            "5011648379"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "voieWithInterviewData": {
          "$ref": "#/definitions/VOIEWithInterviewData"
        },
        "reportCustomFields": {
          "description": "The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.\n\nDesignate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is \"true\" or \"false\".\n* \"true\": (default) display the custom field in the PDF report\n* \"false\": don't display the custom field in the PDF report\n\nFor an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.\n\nAll custom fields display in the Reseller Billing API.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportCustomField"
          }
        },
        "fromDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "incomeStreamConfidenceMinimum": {
          "description": "Include income streams in the report, based on the income stream's confidence score. For example, Use the value 50 to include only income streams with a confidence score of 50 or higher.",
          "example": 50,
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "voieWithInterviewData"
      ]
    },
    "VOIEPaystubWithTXVerifyReportAck": {
      "title": "VOIEPaystubWithTXVerifyReportAck",
      "type": "object",
      "properties": {
        "id": {
          "description": "A report ID",
          "example": "u4hstnnak45g",
          "type": "string"
        },
        "customerType": {
          "description": "The type of customer (\"active\" or \"testing\" or \"\" for all types)",
          "example": "active",
          "type": "string"
        },
        "customerId": {
          "description": "A customer ID represented as a number. See Add Customer API for how to create a customer ID.",
          "example": 1005061234,
          "type": "integer",
          "format": "int64"
        },
        "requestId": {
          "description": "Finicity indicator to track all activity associated with this report",
          "example": "cjqm4wtdcn",
          "type": "string"
        },
        "requesterName": {
          "description": "Name of a Finicity partner",
          "example": "Finicity Test API",
          "type": "string"
        },
        "createdDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "description": "Title of the report",
          "example": "Finicity Asset Ready Report (CRA)",
          "type": "string"
        },
        "consumerId": {
          "description": "A consumer ID. See Create Consumer API for how to create a consumer ID.",
          "example": "0bf46322c167b562e6cbed9d40e19a4c",
          "type": "string"
        },
        "consumerSsn": {
          "description": "Last 4 digits of a SSN",
          "example": "9999",
          "type": "string"
        },
        "type": {
          "description": "A report type. Possible values:\n\n  * \"voi\"\n\n\n  * \"voa\"\n\n\n  * \"voaHistory\"\n\n\n  * \"history\"\n\n\n  * \"voieTxVerify\"\n\n\n  * \"voieWithReport\"\n\n\n  * \"voieWithInterview\"\n\n\n  * \"paystatement\"\n\n\n  * \"preQualVoa\"\n\n\n  * \"assetSummary\"\n\n\n  * \"voie\"\n\n\n  * \"transactions\"\n\n\n  * \"statement\"\n\n\n  * \"voiePayroll\"\n\n\n  * \"voeTransactions\"\n\n\n  * \"voePayroll\"\n\n\n  * \"cfrp\"\n\n\n  * \"cfrb\"",
          "example": "voi",
          "type": "string"
        },
        "status": {
          "description": "A report generation status. Possible values: \"inProgress\", \"success\", \"failure\".",
          "example": "inProgress",
          "type": "string"
        },
        "errors": {
          "description": "In case errors occurred during the report generation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorMessage"
          }
        },
        "portfolioId": {
          "description": "A unique identifier that will be consistent across all reports created for the same customer",
          "example": "y4zsgccj4xpw-6-port",
          "type": "string"
        },
        "constraints": {
          "$ref": "#/definitions/VOIEWithTXVerifyReportConstraintsOut"
        }
      },
      "required": [
        "id",
        "customerType",
        "customerId",
        "requestId",
        "requesterName",
        "createdDate",
        "title",
        "consumerId",
        "consumerSsn",
        "type",
        "status",
        "portfolioId",
        "constraints"
      ]
    },
    "Transactions": {
      "title": "Transactions",
      "description": "A list of transactions",
      "type": "object",
      "properties": {
        "found": {
          "description": "The total number of results matching search criteria",
          "example": 200,
          "type": "integer",
          "format": "int32"
        },
        "displaying": {
          "description": "The number of results returned",
          "example": 2,
          "type": "integer",
          "format": "int32"
        },
        "moreAvailable": {
          "description": "If the value of `moreAvailable` is \"true\", you can retrieve the next page of results by increasing the value of the start parameter in your next request:\"...&start=6&limit=5\"",
          "example": true,
          "type": "boolean"
        },
        "fromDate": {
          "description": "Value of the `fromDate` request parameter that generated this response",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "toDate": {
          "description": "Value of the `toDate` request parameter that generated this response",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "sort": {
          "description": "Value of the sort request parameter that generated this response",
          "example": "desc",
          "type": "string"
        },
        "transactions": {
          "description": "The array of transactions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Transaction"
          }
        }
      },
      "required": [
        "found",
        "displaying",
        "moreAvailable",
        "fromDate",
        "toDate",
        "sort",
        "transactions"
      ]
    },
    "TestTxPushTransaction": {
      "title": "TestTxPushTransaction",
      "description": "A fake transaction for TxPush testing",
      "type": "object",
      "properties": {
        "amount": {
          "description": "The amount of the transaction",
          "example": -4.25,
          "type": "number",
          "format": "double"
        },
        "description": {
          "description": "The description of the transaction",
          "example": "a testing transaction description",
          "type": "string"
        },
        "status": {
          "description": "\"active\" or \"pending\" (optional)",
          "example": "pending",
          "type": "string",
          "default": "active"
        },
        "postedDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "transactionDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "amount",
        "description",
        "transactionDate"
      ]
    },
    "TransactionsReportAck": {
      "title": "TransactionsReportAck",
      "type": "object",
      "properties": {
        "id": {
          "description": "A report ID",
          "example": "u4hstnnak45g",
          "type": "string"
        },
        "customerType": {
          "description": "The type of customer (\"active\" or \"testing\" or \"\" for all types)",
          "example": "active",
          "type": "string"
        },
        "customerId": {
          "description": "A customer ID represented as a number. See Add Customer API for how to create a customer ID.",
          "example": 1005061234,
          "type": "integer",
          "format": "int64"
        },
        "requestId": {
          "description": "Finicity indicator to track all activity associated with this report",
          "example": "cjqm4wtdcn",
          "type": "string"
        },
        "requesterName": {
          "description": "Name of a Finicity partner",
          "example": "Finicity Test API",
          "type": "string"
        },
        "createdDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "description": "Title of the report",
          "example": "Finicity Asset Ready Report (CRA)",
          "type": "string"
        },
        "consumerId": {
          "description": "A consumer ID. See Create Consumer API for how to create a consumer ID.",
          "example": "0bf46322c167b562e6cbed9d40e19a4c",
          "type": "string"
        },
        "consumerSsn": {
          "description": "Last 4 digits of a SSN",
          "example": "9999",
          "type": "string"
        },
        "type": {
          "description": "A report type. Possible values:\n\n  * \"voi\"\n\n\n  * \"voa\"\n\n\n  * \"voaHistory\"\n\n\n  * \"history\"\n\n\n  * \"voieTxVerify\"\n\n\n  * \"voieWithReport\"\n\n\n  * \"voieWithInterview\"\n\n\n  * \"paystatement\"\n\n\n  * \"preQualVoa\"\n\n\n  * \"assetSummary\"\n\n\n  * \"voie\"\n\n\n  * \"transactions\"\n\n\n  * \"statement\"\n\n\n  * \"voiePayroll\"\n\n\n  * \"voeTransactions\"\n\n\n  * \"voePayroll\"\n\n\n  * \"cfrp\"\n\n\n  * \"cfrb\"",
          "example": "voi",
          "type": "string"
        },
        "status": {
          "description": "A report generation status. Possible values: \"inProgress\", \"success\", \"failure\".",
          "example": "inProgress",
          "type": "string"
        },
        "errors": {
          "description": "In case errors occurred during the report generation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorMessage"
          }
        },
        "portfolioId": {
          "description": "A unique identifier that will be consistent across all reports created for the same customer",
          "example": "y4zsgccj4xpw-6-port",
          "type": "string"
        },
        "constraints": {
          "$ref": "#/definitions/TransactionsReportConstraintsOut"
        }
      },
      "required": [
        "id",
        "customerType",
        "customerId",
        "requestId",
        "requesterName",
        "createdDate",
        "title",
        "consumerId",
        "consumerSsn",
        "type",
        "status",
        "portfolioId",
        "constraints"
      ]
    },
    "TransactionsReportConstraints": {
      "title": "TransactionsReportConstraints",
      "type": "object",
      "properties": {
        "accountIds": {
          "description": "A whitespace-separated list of account IDs to be included in the report (all accounts will be included if not set)",
          "example": "5011648377 5011648378 5011648379",
          "type": "string"
        },
        "fromDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "reportCustomFields": {
          "description": "The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.\n\nDesignate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is \"true\" or \"false\".\n* \"true\": (default) display the custom field in the PDF report\n* \"false\": don't display the custom field in the PDF report\n\nFor an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.\n\nAll custom fields display in the Reseller Billing API.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportCustomField"
          }
        }
      }
    },
    "TransactionsReportConstraintsOut": {
      "title": "TransactionsReportConstraintsOut",
      "type": "object",
      "properties": {
        "accountIds": {
          "description": "An array of account IDs to be included in the report (all accounts will be included if not set)",
          "example": [
            "5011648377",
            "5011648378",
            "5011648379"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fromDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "toDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "includePending": {
          "description": "If pending transactions must be included",
          "example": true,
          "type": "boolean",
          "default": false
        },
        "reportCustomFields": {
          "description": "The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.\n\nDesignate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is \"true\" or \"false\".\n* \"true\": (default) display the custom field in the PDF report\n* \"false\": don't display the custom field in the PDF report\n\nFor an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.\n\nAll custom fields display in the Reseller Billing API.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportCustomField"
          }
        }
      }
    },
    "PortfolioConsumer": {
      "title": "PortfolioConsumer",
      "type": "object",
      "properties": {
        "id": {
          "description": "A consumer ID. See Create Consumer API for how to create a consumer ID.",
          "example": "0bf46322c167b562e6cbed9d40e19a4c",
          "type": "string"
        },
        "firstName": {
          "description": "First name(s) / given name(s)",
          "example": "John",
          "type": "string"
        },
        "lastName": {
          "description": "Last name(s) / surname(s)",
          "example": "Smith",
          "type": "string"
        },
        "customerId": {
          "description": "A customer ID represented as a number. See Add Customer API for how to create a customer ID.",
          "example": 1005061234,
          "type": "integer",
          "format": "int64"
        },
        "ssn": {
          "description": "A full SSN with or without hyphens",
          "example": "999-99-9999",
          "type": "string"
        },
        "birthday": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Birthday"
            },
            {
              "description": "A birth date"
            }
          ]
        },
        "suffix": {
          "description": "A person suffix",
          "example": "Mr",
          "type": "string"
        }
      },
      "required": [
        "id",
        "firstName",
        "lastName",
        "customerId",
        "ssn",
        "birthday"
      ]
    },
    "StatementReportConstraints": {
      "title": "StatementReportConstraints",
      "type": "object",
      "properties": {
        "statementReportData": {
          "$ref": "#/definitions/StatementData"
        },
        "reportCustomFields": {
          "description": "The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.\n\nDesignate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is \"true\" or \"false\".\n* \"true\": (default) display the custom field in the PDF report\n* \"false\": don't display the custom field in the PDF report\n\nFor an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.\n\nAll custom fields display in the Reseller Billing API.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportCustomField"
          }
        }
      },
      "required": [
        "statementReportData"
      ]
    },
    "StatementData": {
      "title": "StatementData",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "An account ID represented as a number",
          "example": 5011648377,
          "type": "integer",
          "format": "int64"
        },
        "index": {
          "description": "Index of the statement to retrieve",
          "example": 1,
          "type": "integer",
          "default": 1,
          "maximum": 6.0,
          "format": "int32"
        }
      },
      "required": [
        "accountId"
      ]
    },
    "StatementReportAck": {
      "title": "StatementReportAck",
      "type": "object",
      "properties": {
        "id": {
          "description": "A report ID",
          "example": "u4hstnnak45g",
          "type": "string"
        },
        "customerType": {
          "description": "The type of customer (\"active\" or \"testing\" or \"\" for all types)",
          "example": "active",
          "type": "string"
        },
        "customerId": {
          "description": "A customer ID represented as a number. See Add Customer API for how to create a customer ID.",
          "example": 1005061234,
          "type": "integer",
          "format": "int64"
        },
        "requestId": {
          "description": "Finicity indicator to track all activity associated with this report",
          "example": "cjqm4wtdcn",
          "type": "string"
        },
        "requesterName": {
          "description": "Name of a Finicity partner",
          "example": "Finicity Test API",
          "type": "string"
        },
        "createdDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "description": "Title of the report",
          "example": "Finicity Asset Ready Report (CRA)",
          "type": "string"
        },
        "consumerId": {
          "description": "A consumer ID. See Create Consumer API for how to create a consumer ID.",
          "example": "0bf46322c167b562e6cbed9d40e19a4c",
          "type": "string"
        },
        "consumerSsn": {
          "description": "Last 4 digits of a SSN",
          "example": "9999",
          "type": "string"
        },
        "type": {
          "description": "A report type. Possible values:\n\n  * \"voi\"\n\n\n  * \"voa\"\n\n\n  * \"voaHistory\"\n\n\n  * \"history\"\n\n\n  * \"voieTxVerify\"\n\n\n  * \"voieWithReport\"\n\n\n  * \"voieWithInterview\"\n\n\n  * \"paystatement\"\n\n\n  * \"preQualVoa\"\n\n\n  * \"assetSummary\"\n\n\n  * \"voie\"\n\n\n  * \"transactions\"\n\n\n  * \"statement\"\n\n\n  * \"voiePayroll\"\n\n\n  * \"voeTransactions\"\n\n\n  * \"voePayroll\"\n\n\n  * \"cfrp\"\n\n\n  * \"cfrb\"",
          "example": "voi",
          "type": "string"
        },
        "status": {
          "description": "A report generation status. Possible values: \"inProgress\", \"success\", \"failure\".",
          "example": "inProgress",
          "type": "string"
        },
        "errors": {
          "description": "In case errors occurred during the report generation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorMessage"
          }
        },
        "portfolioId": {
          "description": "A unique identifier that will be consistent across all reports created for the same customer",
          "example": "y4zsgccj4xpw-6-port",
          "type": "string"
        },
        "constraints": {
          "$ref": "#/definitions/StatementReportConstraints"
        }
      },
      "required": [
        "id",
        "customerType",
        "customerId",
        "requestId",
        "requesterName",
        "createdDate",
        "title",
        "consumerId",
        "consumerSsn",
        "type",
        "status",
        "portfolioId",
        "constraints"
      ]
    },
    "PayrollData": {
      "title": "PayrollData",
      "type": "object",
      "properties": {
        "ssn": {
          "description": "A full SSN without hyphens",
          "example": "999999999",
          "type": "string"
        },
        "dob": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "reportId": {
          "description": "A report ID",
          "example": "u4hstnnak45g",
          "type": "string"
        }
      },
      "required": [
        "ssn",
        "dob"
      ]
    },
    "PayrollReportAck": {
      "title": "PayrollReportAck",
      "type": "object",
      "properties": {
        "id": {
          "description": "A report ID",
          "example": "u4hstnnak45g",
          "type": "string"
        },
        "customerType": {
          "description": "The type of customer (\"active\" or \"testing\" or \"\" for all types)",
          "example": "active",
          "type": "string"
        },
        "customerId": {
          "description": "A customer ID represented as a number. See Add Customer API for how to create a customer ID.",
          "example": 1005061234,
          "type": "integer",
          "format": "int64"
        },
        "requestId": {
          "description": "Finicity indicator to track all activity associated with this report",
          "example": "cjqm4wtdcn",
          "type": "string"
        },
        "requesterName": {
          "description": "Name of a Finicity partner",
          "example": "Finicity Test API",
          "type": "string"
        },
        "createdDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "description": "Title of the report",
          "example": "Finicity Asset Ready Report (CRA)",
          "type": "string"
        },
        "consumerId": {
          "description": "A consumer ID. See Create Consumer API for how to create a consumer ID.",
          "example": "0bf46322c167b562e6cbed9d40e19a4c",
          "type": "string"
        },
        "consumerSsn": {
          "description": "Last 4 digits of a SSN",
          "example": "9999",
          "type": "string"
        },
        "type": {
          "description": "A report type. Possible values:\n\n  * \"voi\"\n\n\n  * \"voa\"\n\n\n  * \"voaHistory\"\n\n\n  * \"history\"\n\n\n  * \"voieTxVerify\"\n\n\n  * \"voieWithReport\"\n\n\n  * \"voieWithInterview\"\n\n\n  * \"paystatement\"\n\n\n  * \"preQualVoa\"\n\n\n  * \"assetSummary\"\n\n\n  * \"voie\"\n\n\n  * \"transactions\"\n\n\n  * \"statement\"\n\n\n  * \"voiePayroll\"\n\n\n  * \"voeTransactions\"\n\n\n  * \"voePayroll\"\n\n\n  * \"cfrp\"\n\n\n  * \"cfrb\"",
          "example": "voi",
          "type": "string"
        },
        "status": {
          "description": "A report generation status. Possible values: \"inProgress\", \"success\", \"failure\".",
          "example": "inProgress",
          "type": "string"
        },
        "errors": {
          "description": "In case errors occurred during the report generation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorMessage"
          }
        },
        "portfolioId": {
          "description": "A unique identifier that will be consistent across all reports created for the same customer",
          "example": "y4zsgccj4xpw-6-port",
          "type": "string"
        },
        "constraints": {
          "$ref": "#/definitions/PayrollReportConstraintsOut"
        }
      },
      "required": [
        "id",
        "customerType",
        "customerId",
        "requestId",
        "requesterName",
        "createdDate",
        "title",
        "consumerId",
        "consumerSsn",
        "type",
        "status",
        "portfolioId",
        "constraints"
      ]
    },
    "PayrollReportConstraintsOut": {
      "title": "PayrollReportConstraintsOut",
      "type": "object",
      "properties": {
        "payrollData": {
          "$ref": "#/definitions/PayrollDataOut"
        },
        "reportCustomFields": {
          "description": "The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.\n\nDesignate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is \"true\" or \"false\".\n* \"true\": (default) display the custom field in the PDF report\n* \"false\": don't display the custom field in the PDF report\n\nFor an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.\n\nAll custom fields display in the Reseller Billing API.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportCustomField"
          }
        },
        "payStatementsFromDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "payrollData"
      ]
    },
    "PayrollDataOut": {
      "title": "PayrollDataOut",
      "type": "object",
      "properties": {
        "payrollDataRetrievalId": {
          "description": "An id to identify the data retrieved from the payroll providers for the report.",
          "example": "hahvhe2k0000",
          "type": "string"
        },
        "employerNames": {
          "description": "An array of employer names that the consumer submitted after completing the Connect application.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reportId": {
          "description": "A report ID",
          "example": "u4hstnnak45g",
          "type": "string"
        }
      },
      "required": [
        "payrollDataRetrievalId",
        "employerNames"
      ]
    },
    "PayrollReportConstraints": {
      "title": "PayrollReportConstraints",
      "type": "object",
      "properties": {
        "payrollData": {
          "$ref": "#/definitions/PayrollData"
        },
        "reportCustomFields": {
          "description": "The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.\n\nDesignate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is \"true\" or \"false\".\n* \"true\": (default) display the custom field in the PDF report\n* \"false\": don't display the custom field in the PDF report\n\nFor an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.\n\nAll custom fields display in the Reseller Billing API.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportCustomField"
          }
        },
        "payStatementsFromDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "marketSegment": {
          "description": "Filter consumer’s data based on the market segment. Currently supported values are; \"Mortgage\", \"KYC\", and \"Identity\".",
          "example": "Mortgage",
          "type": "string"
        },
        "excludeEmpInfo": {
          "description": "If true is passed, Employment information data will not be searched or returned.",
          "example": true,
          "type": "boolean"
        },
        "purpose": {
          "description": "2-digit code from [Permissible Purpose Codes] (https://docs.finicity.com/permissible-purpose-codes/), specifying the reason for retrieving this report.",
          "example": "99",
          "type": "string"
        }
      },
      "required": [
        "payrollData"
      ]
    },
    "AvailableBalance": {
      "title": "AvailableBalance",
      "type": "object",
      "properties": {
        "id": {
          "description": "A customer ID represented as a number. See Add Customer API for how to create a customer ID.",
          "example": 1005061234,
          "type": "integer",
          "format": "int64"
        },
        "realAccountNumberLast4": {
          "description": "The last 4 digits of the ACH account number",
          "example": "5678",
          "type": "string"
        },
        "availableBalance": {
          "description": "The available balance of the account",
          "example": 173.47,
          "type": "number",
          "format": "double"
        },
        "availableBalanceDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "clearedBalance": {
          "description": "The cleared balance of the account. Also referred as posted balance, current balance, ledger balance",
          "example": 222.25,
          "type": "number",
          "format": "double"
        },
        "clearedBalanceDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "aggregationStatusCode": {
          "description": "The status of the most recent aggregation attempt (see [Aggregation Status Codes](https://docs.finicity.com/aggregation-status-codes/)). Won't be present until you have run your first aggregation for the account.",
          "type": "integer",
          "format": "int32"
        },
        "currency": {
          "description": "A currency code",
          "example": "USD",
          "type": "string"
        }
      },
      "required": [
        "id",
        "realAccountNumberLast4",
        "availableBalance",
        "availableBalanceDate",
        "clearedBalance",
        "clearedBalanceDate",
        "aggregationStatusCode",
        "currency"
      ]
    },
    "VOIEWithStatementData": {
      "title": "VOIEWithStatementData",
      "type": "object",
      "properties": {
        "assetIds": {
          "description": "A list of pay statement asset IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "extractEarnings": {
          "description": "Field to indicate whether to extract the earnings on all pay statements",
          "example": true,
          "type": "boolean",
          "default": true
        },
        "extractDeductions": {
          "description": "Field to indicate whether to extract the deductions on all pay statements",
          "example": true,
          "type": "boolean",
          "default": false
        },
        "extractDirectDeposit": {
          "description": "Field to indicate whether to extract the direct deposits on all pay statements",
          "example": true,
          "type": "boolean",
          "default": true
        }
      },
      "required": [
        "assetIds"
      ]
    },
    "VOIEReportConstraints": {
      "title": "VOIEReportConstraints",
      "description": "The request details from the report generation that were used to generate the report",
      "type": "object",
      "properties": {
        "voieWithStatementData": {
          "$ref": "#/definitions/VOIEWithStatementData"
        },
        "reportCustomFields": {
          "description": "The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.\n\nDesignate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is \"true\" or \"false\".\n* \"true\": (default) display the custom field in the PDF report\n* \"false\": don't display the custom field in the PDF report\n\nFor an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.\n\nAll custom fields display in the Reseller Billing API.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportCustomField"
          }
        }
      },
      "required": [
        "voieWithStatementData"
      ]
    },
    "VOIEPaystubReportAck": {
      "title": "VOIEPaystubReportAck",
      "type": "object",
      "properties": {
        "id": {
          "description": "A report ID",
          "example": "u4hstnnak45g",
          "type": "string"
        },
        "customerType": {
          "description": "The type of customer (\"active\" or \"testing\" or \"\" for all types)",
          "example": "active",
          "type": "string"
        },
        "customerId": {
          "description": "A customer ID represented as a number. See Add Customer API for how to create a customer ID.",
          "example": 1005061234,
          "type": "integer",
          "format": "int64"
        },
        "requestId": {
          "description": "Finicity indicator to track all activity associated with this report",
          "example": "cjqm4wtdcn",
          "type": "string"
        },
        "requesterName": {
          "description": "Name of a Finicity partner",
          "example": "Finicity Test API",
          "type": "string"
        },
        "createdDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "description": "Title of the report",
          "example": "Finicity Asset Ready Report (CRA)",
          "type": "string"
        },
        "consumerId": {
          "description": "A consumer ID. See Create Consumer API for how to create a consumer ID.",
          "example": "0bf46322c167b562e6cbed9d40e19a4c",
          "type": "string"
        },
        "consumerSsn": {
          "description": "Last 4 digits of a SSN",
          "example": "9999",
          "type": "string"
        },
        "type": {
          "description": "A report type. Possible values:\n\n  * \"voi\"\n\n\n  * \"voa\"\n\n\n  * \"voaHistory\"\n\n\n  * \"history\"\n\n\n  * \"voieTxVerify\"\n\n\n  * \"voieWithReport\"\n\n\n  * \"voieWithInterview\"\n\n\n  * \"paystatement\"\n\n\n  * \"preQualVoa\"\n\n\n  * \"assetSummary\"\n\n\n  * \"voie\"\n\n\n  * \"transactions\"\n\n\n  * \"statement\"\n\n\n  * \"voiePayroll\"\n\n\n  * \"voeTransactions\"\n\n\n  * \"voePayroll\"\n\n\n  * \"cfrp\"\n\n\n  * \"cfrb\"",
          "example": "voi",
          "type": "string"
        },
        "status": {
          "description": "A report generation status. Possible values: \"inProgress\", \"success\", \"failure\".",
          "example": "inProgress",
          "type": "string"
        },
        "errors": {
          "description": "In case errors occurred during the report generation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorMessage"
          }
        },
        "portfolioId": {
          "description": "A unique identifier that will be consistent across all reports created for the same customer",
          "example": "y4zsgccj4xpw-6-port",
          "type": "string"
        },
        "constraints": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/VOIEReportConstraints"
            },
            {
              "description": "The request details from the report generation that were used to generate the report"
            }
          ]
        }
      },
      "required": [
        "id",
        "customerType",
        "customerId",
        "requestId",
        "requesterName",
        "createdDate",
        "title",
        "consumerId",
        "consumerSsn",
        "type",
        "status",
        "portfolioId",
        "constraints"
      ]
    },
    "VOETransactionsReportConstraints": {
      "title": "VOETransactionsReportConstraints",
      "type": "object",
      "properties": {
        "reportId": {
          "description": "A report ID",
          "example": "u4hstnnak45g",
          "type": "string"
        },
        "accountIds": {
          "description": "A whitespace-separated list of account IDs to be included in the report (all accounts will be included if not set)",
          "example": "5011648377 5011648378 5011648379",
          "type": "string"
        },
        "reportCustomFields": {
          "description": "The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.\n\nDesignate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is \"true\" or \"false\".\n* \"true\": (default) display the custom field in the PDF report\n* \"false\": don't display the custom field in the PDF report\n\nFor an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.\n\nAll custom fields display in the Reseller Billing API.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportCustomField"
          }
        },
        "fromDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "incomeStreamConfidenceMinimum": {
          "description": "Include income streams in the report, based on the income stream's confidence score. For example, Use the value 50 to include only income streams with a confidence score of 50 or higher.",
          "example": 50,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "VOETransactionsReportConstraintsOut": {
      "title": "VOETransactionsReportConstraintsOut",
      "type": "object",
      "properties": {
        "reportId": {
          "description": "A report ID",
          "example": "u4hstnnak45g",
          "type": "string"
        },
        "accountIds": {
          "description": "An array of account IDs to be included in the report (all accounts will be included if not set)",
          "example": [
            "5011648377",
            "5011648378",
            "5011648379"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reportCustomFields": {
          "description": "The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.\n\nDesignate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is \"true\" or \"false\".\n* \"true\": (default) display the custom field in the PDF report\n* \"false\": don't display the custom field in the PDF report\n\nFor an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.\n\nAll custom fields display in the Reseller Billing API.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportCustomField"
          }
        },
        "fromDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "incomeStreamConfidenceMinimum": {
          "description": "Include income streams in the report, based on the income stream's confidence score. For example, Use the value 50 to include only income streams with a confidence score of 50 or higher.",
          "example": 50,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "VOETransactionsReportAck": {
      "title": "VOETransactionsReportAck",
      "type": "object",
      "properties": {
        "id": {
          "description": "A report ID",
          "example": "u4hstnnak45g",
          "type": "string"
        },
        "customerType": {
          "description": "The type of customer (\"active\" or \"testing\" or \"\" for all types)",
          "example": "active",
          "type": "string"
        },
        "customerId": {
          "description": "A customer ID represented as a number. See Add Customer API for how to create a customer ID.",
          "example": 1005061234,
          "type": "integer",
          "format": "int64"
        },
        "requestId": {
          "description": "Finicity indicator to track all activity associated with this report",
          "example": "cjqm4wtdcn",
          "type": "string"
        },
        "requesterName": {
          "description": "Name of a Finicity partner",
          "example": "Finicity Test API",
          "type": "string"
        },
        "createdDate": {
          "description": "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).",
          "example": 1607450357,
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "description": "Title of the report",
          "example": "Finicity Asset Ready Report (CRA)",
          "type": "string"
        },
        "consumerId": {
          "description": "A consumer ID. See Create Consumer API for how to create a consumer ID.",
          "example": "0bf46322c167b562e6cbed9d40e19a4c",
          "type": "string"
        },
        "consumerSsn": {
          "description": "Last 4 digits of a SSN",
          "example": "9999",
          "type": "string"
        },
        "type": {
          "description": "A report type. Possible values:\n\n  * \"voi\"\n\n\n  * \"voa\"\n\n\n  * \"voaHistory\"\n\n\n  * \"history\"\n\n\n  * \"voieTxVerify\"\n\n\n  * \"voieWithReport\"\n\n\n  * \"voieWithInterview\"\n\n\n  * \"paystatement\"\n\n\n  * \"preQualVoa\"\n\n\n  * \"assetSummary\"\n\n\n  * \"voie\"\n\n\n  * \"transactions\"\n\n\n  * \"statement\"\n\n\n  * \"voiePayroll\"\n\n\n  * \"voeTransactions\"\n\n\n  * \"voePayroll\"\n\n\n  * \"cfrp\"\n\n\n  * \"cfrb\"",
          "example": "voi",
          "type": "string"
        },
        "status": {
          "description": "A report generation status. Possible values: \"inProgress\", \"success\", \"failure\".",
          "example": "inProgress",
          "type": "string"
        },
        "errors": {
          "description": "In case errors occurred during the report generation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorMessage"
          }
        },
        "portfolioId": {
          "description": "A unique identifier that will be consistent across all reports created for the same customer",
          "example": "y4zsgccj4xpw-6-port",
          "type": "string"
        },
        "constraints": {
          "$ref": "#/definitions/VOETransactionsReportConstraintsOut"
        }
      },
      "required": [
        "id",
        "customerType",
        "customerId",
        "requestId",
        "requesterName",
        "createdDate",
        "title",
        "consumerId",
        "consumerSsn",
        "type",
        "status",
        "portfolioId",
        "constraints"
      ]
    },
    "LoanPaymentDetailsAccount": {
      "title": "LoanPaymentDetailsAccount",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "An account ID",
          "example": "5011648377",
          "type": "string"
        },
        "accountNumber": {
          "description": "Institution's ID of the Student Loan Account",
          "example": "9876543210",
          "type": "string"
        },
        "accountPaymentNumber": {
          "description": "The payment number given by the institution. This number is typically for manual payments. This is not an ACH payment number.",
          "example": "00001234895413",
          "type": "string"
        },
        "accountPaymentAddress": {
          "description": "The payment address to which send manual payments should be sent",
          "example": "P.O. Box 123 Sioux Falls, IA 51054",
          "type": "string"
        },
        "accountFuturePayoffAmount": {
          "description": "The payoff amount for the account",
          "example": 10000,
          "type": "number",
          "format": "double"
        },
        "accountFuturePayoffDate": {
          "description": "The date to which the \"Future Payoff Amount\" applies",
          "example": "2022-01-01T00:00:00.000Z",
          "type": "string",
          "format": "date-time"
        },
        "groupDetail": {
          "description": "Group details",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoanPaymentDetailsGroup"
          }
        },
        "loanDetail": {
          "description": "Loan details",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoanPaymentDetailsLoan"
          }
        }
      },
      "required": [
        "accountId",
        "accountNumber",
        "accountPaymentNumber",
        "accountPaymentAddress"
      ]
    },
    "LoanPaymentDetailsGroup": {
      "title": "LoanPaymentDetailsGroup",
      "description": "Group details",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "An account ID",
          "example": "5011648377",
          "type": "string"
        },
        "groupNumber": {
          "description": "Institution's ID of the Student Loan Group",
          "example": "3210-Group A",
          "type": "string"
        },
        "groupPaymentNumber": {
          "description": "The payment number given by the institution. This number is typically for manual payments. This is not an ACH payment number.",
          "example": "00001234895413-A",
          "type": "string"
        },
        "groupPaymentAddress": {
          "description": "The payment address to which send manual payments should be sent",
          "example": "P.O. Box 123 Sioux Falls, IA 51054",
          "type": "string"
        },
        "groupFuturePayoffAmount": {
          "description": "The payoff amount for the group",
          "example": 7500,
          "type": "number",
          "format": "double"
        },
        "groupFuturePayoffDate": {
          "description": "The date to which the \"Future Payoff Amount\" applies",
          "example": "2022-01-01T00:00:00.000Z",
          "type": "string",
          "format": "date-time"
        },
        "groupLoanDetail": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoanPaymentDetailsLoan"
          }
        }
      },
      "required": [
        "accountId",
        "groupNumber",
        "groupPaymentNumber",
        "groupPaymentAddress",
        "groupLoanDetail"
      ]
    },
    "LoanPaymentDetailsLoan": {
      "title": "LoanPaymentDetailsLoan",
      "description": "Loan details",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "An account ID",
          "example": "5011648377",
          "type": "string"
        },
        "loanNumber": {
          "description": "Institution's ID of the Student Loan",
          "example": "3210-Group A-1",
          "type": "string"
        },
        "loanPaymentNumber": {
          "description": "The payment number given by the institution. This number is typically for manual payments. This is not an ACH payment number.",
          "example": "00001234895413-A-1",
          "type": "string"
        },
        "loanPaymentAddress": {
          "description": "The payment address to which send manual payments should be sent",
          "example": "P.O. Box 123 Sioux Falls, IA 51054",
          "type": "string"
        },
        "loanFuturePayoffAmount": {
          "description": "The payoff amount for the loan",
          "example": 5000,
          "type": "number",
          "format": "double"
        },
        "loanFuturePayoffDate": {
          "description": "The date to which the \"Future Payoff Amount\" applies",
          "example": "2022-01-01T00:00:00.000Z",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "accountId",
        "loanNumber",
        "loanPaymentNumber",
        "loanPaymentAddress"
      ]
    },
    "ConsumerAttributesAnalyticId": {
      "title": "ConsumerAttributesAnalyticId",
      "description": "An analytic ID and a date",
      "type": "object",
      "properties": {
        "analytic_id": {
          "description": "An ID for a Consumer Attributes report",
          "example": "CA-5dfbaa3ac-5321",
          "type": "string"
        },
        "created_date": {
          "description": "A date-time without time zone",
          "example": "2022-04-12T11:51:23",
          "type": "string"
        }
      },
      "required": [
        "analytic_id",
        "created_date"
      ]
    },
    "ConsumerAttributeList": {
      "title": "ConsumerAttributeList",
      "type": "object",
      "properties": {
        "analytic_ids": {
          "description": "A list of analytic IDs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConsumerAttributesAnalyticId"
          }
        }
      },
      "required": [
        "analytic_ids"
      ]
    },
    "ConsumerAttributesDataDateRange": {
      "title": "ConsumerAttributesDataDateRange",
      "type": "object",
      "properties": {
        "From": {
          "description": "A 'YYYY-MM-DD' date notation as defined by [RFC 3339, section 5.6](https://www.rfc-editor.org/rfc/rfc3339#section-5.6)",
          "example": "2022-04-12",
          "type": "string",
          "format": "date"
        },
        "To": {
          "description": "A 'YYYY-MM-DD' date notation as defined by [RFC 3339, section 5.6](https://www.rfc-editor.org/rfc/rfc3339#section-5.6)",
          "example": "2022-04-12",
          "type": "string",
          "format": "date"
        }
      },
      "required": [
        "From",
        "To"
      ]
    },
    "ConsumerAttributesData": {
      "title": "ConsumerAttributesData",
      "type": "object",
      "properties": {
        "customerId": {
          "description": "A customer ID. See Add Customer API for how to create a customer ID.",
          "example": "1005061234",
          "type": "string"
        },
        "accountIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "dateRange": {
          "$ref": "#/definitions/ConsumerAttributesDataDateRange"
        },
        "income": {
          "$ref": "#/definitions/ConsumerAttributesDataIncome"
        },
        "expenses": {
          "$ref": "#/definitions/ConsumerAttributesDataExpenses"
        },
        "netAmount": {
          "$ref": "#/definitions/ConsumerAttributesDataNetAmount"
        },
        "nsf": {
          "$ref": "#/definitions/ConsumerAttributesDataNSF"
        },
        "assets": {
          "$ref": "#/definitions/ConsumerAttributesDataAssets"
        },
        "liabilities": {
          "$ref": "#/definitions/ConsumerAttributesDataLiabilities"
        }
      },
      "required": [
        "dateRange",
        "income",
        "expenses",
        "netAmount",
        "nsf",
        "assets",
        "liabilities"
      ]
    },
    "ConsumerAttributesDataIncome": {
      "title": "ConsumerAttributesDataIncome",
      "type": "object",
      "properties": {
        "netAnnualIncome": {
          "description": "Net annual of all income by customer for the last 12 months",
          "example": 68068.25,
          "type": "number",
          "format": "double"
        },
        "netAnnualIncomeByAccount": {
          "description": "Net annual of income by account for the last 12 months",
          "example": {
            "5001861692": 229.28,
            "5001861693": 67838.97
          },
          "type": "object"
        },
        "monthlyNetIncome": {
          "description": "Net monthly income by customer for the last 12 months",
          "example": {
            "2021-03-31": 2925.73,
            "2021-04-30": 2562.52,
            "2021-05-31": 2562.96,
            "2021-06-30": 2620.28,
            "2021-07-31": 2770.59,
            "2021-08-31": 2736.4,
            "2021-09-30": 2629.26,
            "2021-10-31": 2836.89,
            "2021-11-30": 1450.15,
            "2021-12-31": 1560.06,
            "2022-01-31": 3897.18,
            "2022-02-28": 2824.58
          },
          "type": "object"
        },
        "monthlyNetIncomeByAccount": {
          "description": "Net monthly income by account for the last 12 months",
          "example": {
            "5001861692": {
              "2021-06-30": 57.32,
              "2021-07-31": 57.32,
              "2021-08-31": 57.32,
              "2021-11-30": 57.32
            },
            "5001861693": {
              "2021-03-31": 2925.73,
              "2021-04-30": 2562.52,
              "2021-05-31": 2562.96,
              "2021-06-30": 2620.28,
              "2021-07-31": 2770.59,
              "2021-08-31": 2736.4,
              "2021-09-30": 2629.26,
              "2021-10-31": 2836.89,
              "2021-11-30": 1450.15,
              "2021-12-31": 1560.06,
              "2022-01-31": 3897.18,
              "2022-02-28": 2824.58
            }
          },
          "type": "object"
        }
      },
      "required": [
        "netAnnualIncome",
        "netAnnualIncomeByAccount",
        "monthlyNetIncome",
        "monthlyNetIncomeByAccount"
      ]
    },
    "ConsumerAttributesDataExpenses": {
      "title": "ConsumerAttributesDataExpenses",
      "type": "object",
      "properties": {
        "dwellingExpenseTotal": {
          "description": "Total dwelling expenses for the last 12 months: rent, mortgage, utilities, and insurance",
          "example": 0,
          "type": "number",
          "format": "double"
        },
        "dwellingExpensesByAccount": {
          "description": "Total dwelling expenses by account for the last 12 months: rent, mortgage, utilities, and insurance",
          "example": {
            "5001861693": -5856.07
          },
          "type": "object"
        },
        "monthlyDwellingExpenseByCustomer": {
          "description": "Monthly dwelling expenses by customer",
          "example": {
            "2021-03-31": -217.37,
            "2021-04-30": -146.25,
            "2021-05-31": -205.86,
            "2021-06-30": -309.84,
            "2021-07-31": -593.07,
            "2021-08-31": -202.1,
            "2021-09-30": -243.55,
            "2021-10-31": -136.96,
            "2021-11-30": -145.37,
            "2021-12-31": -261.35,
            "2021-01-31": -172.99,
            "2021-02-28": -176.96
          },
          "type": "object"
        },
        "monthlyDwellingExpenseByAccount": {
          "description": "Monthly dwelling expenses by account",
          "example": {
            "5001861693": {
              "2021-03-31": -217.37,
              "2021-04-30": -146.25,
              "2021-05-31": -205.86,
              "2021-06-30": -309.84,
              "2021-07-31": -593.07,
              "2021-08-31": -202.1,
              "2021-09-30": -243.55,
              "2021-10-31": -136.96,
              "2021-11-30": -145.37,
              "2021-12-31": -261.35,
              "2021-01-31": -172.99,
              "2021-02-28": -176.96
            }
          },
          "type": "object"
        },
        "monthlyDebitAmountByCustomer": {
          "description": "Total monthly debit amounts by customer",
          "example": {
            "2021-03-31": -7259.58,
            "2021-04-30": -15368.09,
            "2021-05-31": -11937.66,
            "2021-06-30": -12704.43,
            "2021-07-31": -9089.55,
            "2021-08-31": -4099.97,
            "2021-09-30": -19627.13,
            "2021-10-31": -9927.53,
            "2021-11-30": -7694.94,
            "2021-12-31": -37310.54,
            "2021-01-31": -25129.31,
            "2021-02-28": -9548.28
          },
          "type": "object"
        },
        "monthlyExpenseAmountByCustomer": {
          "description": "Total monthly debit amounts, excluding transfers and credit card payments",
          "example": {
            "2021-03-31": -7259.58,
            "2021-04-30": -15368.09,
            "2021-05-31": -11937.66,
            "2021-06-30": -12704.43,
            "2021-07-31": -9089.55,
            "2021-08-31": -4099.97,
            "2021-09-30": -19627.13,
            "2021-10-31": -9927.53,
            "2021-11-30": -7694.94,
            "2021-12-31": -37310.54,
            "2021-01-31": -25129.31,
            "2021-02-28": -9548.28
          },
          "type": "object"
        }
      },
      "required": [
        "dwellingExpenseTotal",
        "dwellingExpensesByAccount",
        "monthlyDwellingExpenseByCustomer",
        "monthlyDwellingExpenseByAccount",
        "monthlyDebitAmountByCustomer",
        "monthlyExpenseAmountByCustomer"
      ]
    },
    "ConsumerAttributesDataNSF": {
      "title": "ConsumerAttributesDataNSF",
      "type": "object",
      "properties": {
        "monthlyNSFOccurrences": {
          "description": "The number of non-sufficient funds occurrences per calendar month",
          "example": {
            "2021-04-30": 1,
            "2021-07-31": 1
          },
          "type": "object"
        },
        "monthlyLateFeeOccurrences": {
          "description": "The number of late fee occurrences",
          "example": {},
          "type": "object"
        }
      },
      "required": [
        "monthlyNSFOccurrences",
        "monthlyLateFeeOccurrences"
      ]
    },
    "ConsumerAttributesDataLiabilities": {
      "title": "ConsumerAttributesDataLiabilities",
      "type": "object",
      "properties": {
        "monthlyLoanDeposits": {
          "description": "Monthly loan deposits amount by account",
          "example": {
            "3-2021": 2799.08,
            "4-2021": 2947.63,
            "5-2021": 2863.37
          },
          "type": "object"
        },
        "monthlyLoanWitdrawls": {
          "description": "Monthly loan withdrawal amount by account",
          "example": {
            "3-2021": -150.17,
            "4-2021": -95.03,
            "5-2021": -341.26
          },
          "type": "object"
        },
        "monthlyNumberOfLoanDeposits": {
          "description": "Monthly count of the number of loan deposits by account",
          "example": {
            "3-2021": 1,
            "4-2021": 1,
            "5-2021": 1
          },
          "type": "object"
        },
        "monthlyNumberOfLoanWithdrawls": {
          "description": "Monthly amount of the number of loan deposits by account",
          "example": {
            "3-2021": 1,
            "4-2021": 1,
            "5-2021": 1
          },
          "type": "object"
        }
      },
      "required": [
        "monthlyLoanDeposits",
        "monthlyLoanWitdrawls",
        "monthlyNumberOfLoanDeposits",
        "monthlyNumberOfLoanWithdrawls"
      ]
    },
    "ConsumerAttributesAssetsCustomer": {
      "title": "ConsumerAttributesAssetsCustomer",
      "type": "object",
      "properties": {
        "monthlyMinimumBalance": {
          "description": "The minimum balance for the month across all customer accounts",
          "example": {
            "2021-03-31": 20841.81,
            "2021-04-30": 16014.16,
            "2021-05-31": 16949.55,
            "2021-06-30": 645.01,
            "2021-07-31": 702.33,
            "2021-08-31": -18.89,
            "2021-09-30": -1346.13,
            "2021-10-31": -1288.81,
            "2021-11-30": -1231.49,
            "2021-12-31": -1952.71,
            "2022-01-31": 14614.31,
            "2022-02-28": 19705.31
          },
          "type": "object"
        },
        "monthlyMaximumBalance": {
          "description": "The maximum balance for the month across all customer accounts",
          "example": {
            "2021-03-31": 26321.24,
            "2021-04-30": 26528.01,
            "2021-05-31": 25110.12,
            "2021-06-30": 22676.89,
            "2021-07-31": 22889.45,
            "2021-08-31": 24431.44,
            "2021-09-30": 26144.03,
            "2021-10-31": 30679.71,
            "2021-11-30": 29099.98,
            "2021-12-31": 52998.24,
            "2022-01-31": 28163.22,
            "2022-02-28": 26827.62
          },
          "type": "object"
        },
        "monthlyAverageBalance": {
          "description": "The average balance for the month across all customer accounts",
          "example": {
            "2021-03-31": 23166.96,
            "2021-04-30": 21500.16,
            "2021-05-31": 21079.24,
            "2021-06-30": 17207.09,
            "2021-07-31": 17680.23,
            "2021-08-31": 20177.06,
            "2021-09-30": 21624.44,
            "2021-10-31": 23147.34,
            "2021-11-30": 23024.08,
            "2021-12-31": 23156.56,
            "2022-01-31": 20371.3,
            "2022-02-28": 22523.83
          },
          "type": "object"
        },
        "monthlyStandardDeviationOfBalance": {
          "description": "The standard deviation for the month across all customer account balances",
          "example": {
            "2021-03-31": 1581.38,
            "2021-04-30": 3880.2,
            "2021-05-31": 2324.47,
            "2021-06-30": 4828.27,
            "2021-07-31": 5078.26,
            "2021-08-31": 5921.8,
            "2021-09-30": 6092.64,
            "2021-10-31": 7479.2,
            "2021-11-30": 6979.12,
            "2021-12-31": 10374.49,
            "2022-01-31": 3116.12,
            "2022-01-28": 2326.82
          },
          "type": "object"
        },
        "monthlyDaysWithPositiveBalance": {
          "description": "The number of days in a month with a positive account balance across all customer account balances",
          "example": {
            "2021-03-31": 21,
            "2021-04-30": 21,
            "2021-05-31": 19,
            "2021-06-30": 17,
            "2021-07-31": 17,
            "2021-08-31": 14,
            "2021-09-30": 18,
            "2021-10-31": 13,
            "2021-11-30": 15,
            "2021-12-31": 16,
            "2022-01-31": 15,
            "2022-02-28": 22
          },
          "type": "object"
        },
        "monthlyDaysWithNegativeBalance": {
          "description": "The number of days in a month with a negative account balance across all customer account balances",
          "example": {
            "2021-03-31": 0,
            "2021-04-30": 0,
            "2021-05-31": 0,
            "2021-06-30": 0,
            "2021-07-31": 0,
            "2021-08-31": 1,
            "2021-09-30": 1,
            "2021-10-31": 1,
            "2021-11-30": 1,
            "2021-12-31": 1,
            "2022-01-31": 0,
            "2022-02-28": 0
          },
          "type": "object"
        },
        "monthlyTwoMonthAverageBalance": {
          "description": "Customer average balance for two months",
          "example": {
            "2021-03-31": 22845.4,
            "2021-04-30": 22333.56,
            "2021-05-31": 21289.7,
            "2021-06-30": 19143.17,
            "2021-07-31": 17443.66,
            "2021-08-31": 18928.64,
            "2021-09-30": 20900.75,
            "2021-10-31": 22385.89,
            "2021-11-30": 23085.71,
            "2021-12-31": 23090.32,
            "2022-01-31": 21763.93,
            "2022-02-28": 24573.46
          },
          "type": "object"
        },
        "monthlySixMonthAverageBalance": {
          "description": "Customer average balance for six months",
          "example": {
            "2021-03-31": 28794.93,
            "2021-04-30": 25860.09,
            "2021-05-31": 23895.76,
            "2021-06-30": 22016.73,
            "2021-07-31": 20526.25,
            "2021-08-31": 20135.12,
            "2021-09-30": 19878.04,
            "2021-10-31": 20152.57,
            "2021-11-30": 20476.71,
            "2021-12-31": 21468.29,
            "2022-01-31": 21916.8,
            "2022-02-28": 32063.74
          },
          "type": "object"
        },
        "twelveMonthAverageBalance": {
          "description": "Customer average balance for twelve months",
          "example": {
            "2021-03-31": 33677.33,
            "2021-04-30": 32656.57,
            "2021-05-31": 31325.31,
            "2021-06-30": 29758.99,
            "2021-07-31": 27896.6,
            "2021-08-31": 26099.43,
            "2021-09-30": 24336.49,
            "2021-10-31": 23006.33,
            "2021-11-30": 22186.24,
            "2021-12-31": 21742.51,
            "2022-01-31": 21221.53,
            "2022-02-28": 34637.95
          },
          "type": "object"
        },
        "twoMonthStandardDeviationOfBalance": {
          "description": "Two month standard deviation of customer balance",
          "example": {
            "2021-03-31": 1954.1,
            "2021-04-30": 2730.79,
            "2021-05-30": 3102.33,
            "2021-06-31": 3576.37,
            "2021-07-31": 4953.27,
            "2021-08-31": 5500.03,
            "2021-09-30": 6007.22,
            "2021-10-31": 6785.92,
            "2021-11-30": 7229.16,
            "2021-12-31": 8676.8,
            "2022-01-31": 6745.3,
            "2022-02-28": 3236.86
          },
          "type": "object"
        },
        "sixMonthStandardDeviationOfBalance": {
          "description": "Six month standard deviation of customer balance",
          "example": {
            "2021-03-31": 3004.4,
            "2021-04-30": 3010.97,
            "2021-05-31": 2975.17,
            "2021-06-30": 3181.34,
            "2021-07-31": 3336.57,
            "2021-08-31": 3935.73,
            "2021-09-30": 4687.61,
            "2021-10-31": 5287.44,
            "2021-11-30": 6063.22,
            "2021-12-31": 6987.58,
            "2022-01-31": 6660.56,
            "2022-02-28": 3023.26
          },
          "type": "object"
        },
        "twelveMonthStandardDeviationOfBalance": {
          "description": "Twelve month standard deviation of customer balance",
          "example": {
            "2021-03-31": 2799.08,
            "2021-04-30": 2947.63,
            "2021-05-31": 2863.37,
            "2021-06-30": 3065.62,
            "2021-07-31": 3224.32,
            "2021-08-31": 3479.49,
            "2021-09-30": 3846,
            "2021-10-31": 4149.2,
            "2021-11-30": 4519.19,
            "2021-12-31": 5084.46,
            "2022-01-31": 4998.56,
            "2022-02-28": 2871.45
          },
          "type": "object"
        }
      },
      "required": [
        "monthlyMinimumBalance",
        "monthlyMaximumBalance",
        "monthlyAverageBalance",
        "monthlyStandardDeviationOfBalance",
        "monthlyDaysWithPositiveBalance",
        "monthlyDaysWithNegativeBalance",
        "monthlyTwoMonthAverageBalance",
        "monthlySixMonthAverageBalance",
        "twelveMonthAverageBalance",
        "twoMonthStandardDeviationOfBalance",
        "sixMonthStandardDeviationOfBalance",
        "twelveMonthStandardDeviationOfBalance"
      ]
    },
    "ConsumerAttributesAssetsAccount": {
      "title": "ConsumerAttributesAssetsAccount",
      "type": "object",
      "properties": {
        "monthlyClosingBalance": {
          "description": "Account closing balance by month",
          "example": {
            "5001861693": {
              "2021-03-31": 20841.81,
              "2021-04-30": 16014.16,
              "2021-05-31": 16949.55,
              "2021-06-30": 645.01,
              "2021-07-31": 702.33,
              "2021-08-31": -18.89,
              "2021-09-30": -1346.13,
              "2021-10-31": -1288.81,
              "2021-11-30": -1231.49,
              "2021-12-31": -1952.71,
              "2022-01-31": 14614.31,
              "2022-02-28": 19705.31
            }
          },
          "type": "object"
        },
        "monthlyMinimumBalance": {
          "description": "Account minimum balance by month",
          "example": {
            "5001861693": {
              "2021-03-31": 20841.81,
              "2021-04-30": 16014.16,
              "2021-05-31": 16949.55,
              "2021-06-30": 645.01,
              "2021-07-31": 702.33,
              "2021-08-31": -18.89,
              "2021-09-30": -1346.13,
              "2021-10-31": -1288.81,
              "2021-11-30": -1231.49,
              "2021-12-31": -1952.71,
              "2022-01-31": 14614.31,
              "2022-02-28": 19705.31
            }
          },
          "type": "object"
        },
        "monthlyMaximumBalance": {
          "description": "Account maximum balance by month",
          "example": {
            "5001861693": {
              "2021-03-31": 26321.24,
              "2021-04-30": 26528.01,
              "2021-05-31": 25110.12,
              "2021-06-30": 22676.89,
              "2021-07-31": 22889.45,
              "2021-08-31": 24431.44,
              "2021-09-30": 26144.03,
              "2021-10-31": 30679.71,
              "2021-11-30": 29099.98,
              "2021-12-31": 52998.24,
              "2022-01-31": 28163.22,
              "2022-02-28": 26827.62
            }
          },
          "type": "object"
        },
        "monthlyAverageBalance": {
          "description": "Account average balance by month",
          "example": {
            "5001861693": {
              "2021-03-31": 23166.96,
              "2021-04-30": 21500.16,
              "2021-05-31": 21079.24,
              "2021-06-30": 17207.09,
              "2021-07-31": 17680.23,
              "2021-08-31": 20177.06,
              "2021-09-30": 21624.44,
              "2021-10-31": 23147.34,
              "2021-11-30": 23024.08,
              "2021-12-31": 23156.56,
              "2022-01-31": 20371.3,
              "2022-02-28": 22523.83
            }
          },
          "type": "object"
        },
        "monthlyStandardDeviationOfBalance": {
          "description": "Standard deviation of balance by account",
          "example": {
            "5001861693": {
              "2021-03-31": 1581.38,
              "2021-04-30": 3880.2,
              "2021-05-31": 2324.47,
              "2021-06-30": 4828.27,
              "2021-07-31": 5078.26,
              "2021-08-31": 5921.8,
              "2021-09-30": 6092.64,
              "2021-10-31": 7479.2,
              "2021-11-30": 6979.12,
              "2021-12-31": 10374.49,
              "2022-01-31": 3116.12,
              "2022-02-28": 2326.82
            }
          },
          "type": "object"
        },
        "monthlyDaysWithPositiveBalance": {
          "description": "Number of days in a month with a positive account balance",
          "example": {
            "5001861693": {
              "2021-03-31": 21,
              "2021-04-30": 21,
              "2021-05-31": 19,
              "2021-06-30": 17,
              "2021-07-31": 17,
              "2021-08-31": 14,
              "2021-09-30": 18,
              "2021-10-31": 13,
              "2021-11-30": 15,
              "2021-12-31": 16,
              "2022-01-31": 15,
              "2022-02-28": 22
            }
          },
          "type": "object"
        },
        "monthlyDaysWithNegativeBalance": {
          "description": "Number of days in a month with a negative account balance",
          "example": {
            "5001861693": {
              "2021-03-31": 0,
              "2021-04-30": 0,
              "2021-05-31": 0,
              "2021-06-30": 0,
              "2021-07-31": 0,
              "2021-08-31": 1,
              "2021-09-30": 1,
              "2021-10-31": 1,
              "2021-11-30": 1,
              "2021-12-31": 1,
              "2022-01-31": 0,
              "2022-02-28": 0
            }
          },
          "type": "object"
        },
        "monthlyTwoMonthAverageBalance": {
          "description": "Two month average balance by account",
          "example": {
            "5001861693": {
              "2021-03-31": 22845.4,
              "2021-04-30": 22333.56,
              "2021-05-31": 21289.7,
              "2021-06-30": 19143.17,
              "2021-07-31": 17443.66,
              "2021-08-31": 18928.64,
              "2021-09-30": 20900.75,
              "2021-10-31": 22385.89,
              "2021-11-30": 23085.71,
              "2021-12-31": 23090.32,
              "2022-01-31": 21763.93,
              "2022-02-28": 24573.46
            }
          },
          "type": "object"
        },
        "monthlySixMonthAverageBalance": {
          "description": "Six month average balance by account",
          "example": {
            "5001861693": {
              "2021-03-31": 28794.93,
              "2021-04-30": 25860.09,
              "2021-05-31": 23895.76,
              "2021-06-30": 22016.73,
              "2021-07-31": 20526.25,
              "2021-08-31": 20135.12,
              "2021-09-30": 19878.04,
              "2021-10-31": 20152.57,
              "2021-11-30": 20476.71,
              "2021-12-31": 21468.29,
              "2022-01-31": 21916.8,
              "2022-02-28": 32063.74
            }
          },
          "type": "object"
        },
        "twelveMonthAverageBalance": {
          "description": "Twelve month average balance by account",
          "example": {
            "5001861693": {
              "2021-03-31": 33677.33,
              "2021-04-30": 32656.57,
              "2021-05-31": 31325.31,
              "2021-06-30": 29758.99,
              "2021-07-31": 27896.6,
              "2021-08-31": 26099.43,
              "2021-09-30": 24336.49,
              "2021-10-31": 23006.33,
              "2021-11-30": 22186.24,
              "2021-12-31": 21742.51,
              "2022-01-31": 21221.53,
              "2022-02-28": 34637.95
            }
          },
          "type": "object"
        },
        "twoMonthStandardDeviationOfBalance": {
          "description": "Standard deviation of account balance across two months",
          "example": {
            "5001861693": {
              "2021-03-31": 1954.1,
              "2021-04-30": 2730.79,
              "2021-05-31": 3102.33,
              "2021-06-30": 3576.37,
              "2021-07-31": 4953.27,
              "2021-08-31": 5500.03,
              "2021-09-30": 6007.22,
              "2021-10-31": 6785.92,
              "2021-11-30": 7229.16,
              "2021-12-31": 8676.8,
              "2022-01-31": 6745.3,
              "2022-02-28": 3236.86
            }
          },
          "type": "object"
        },
        "sixMonthStandardDeviationOfBalance": {
          "description": "Standard deviation of account balance across six months",
          "example": {
            "5001861693": {
              "2021-03-31": 3004.4,
              "2021-04-30": 3010.97,
              "2021-05-31": 2975.17,
              "2021-06-30": 3181.34,
              "2021-07-31": 3336.57,
              "2021-08-31": 3935.73,
              "2021-09-30": 4687.61,
              "2021-10-31": 5287.44,
              "2021-11-30": 6063.22,
              "2021-12-31": 6987.58,
              "2022-01-31": 6660.56,
              "2022-02-28": 3023.26
            }
          },
          "type": "object"
        },
        "twelveMonthStandardDeviationOfBalance": {
          "description": "Standard deviation of account balance across twelve months",
          "example": {
            "5001861693": {
              "2021-03-31": 2799.08,
              "2021-04-30": 2947.63,
              "2021-05-31": 2863.37,
              "2021-06-30": 3065.62,
              "2021-07-31": 3224.32,
              "2021-08-31": 3479.49,
              "2021-09-30": 3846,
              "2021-10-31": 4149.2,
              "2021-11-30": 4519.19,
              "2021-12-31": 5084.46,
              "2022-01-31": 4998.56,
              "2022-02-28": 2871.45
            }
          },
          "type": "object"
        }
      },
      "required": [
        "monthlyClosingBalance",
        "monthlyMinimumBalance",
        "monthlyMaximumBalance",
        "monthlyAverageBalance",
        "monthlyStandardDeviationOfBalance",
        "monthlyDaysWithPositiveBalance",
        "monthlyDaysWithNegativeBalance",
        "monthlyTwoMonthAverageBalance",
        "monthlySixMonthAverageBalance",
        "twelveMonthAverageBalance",
        "twoMonthStandardDeviationOfBalance",
        "sixMonthStandardDeviationOfBalance",
        "twelveMonthStandardDeviationOfBalance"
      ]
    },
    "ConsumerAttributesDataAssets": {
      "title": "ConsumerAttributesDataAssets",
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/ConsumerAttributesAssetsCustomer"
        },
        "account": {
          "$ref": "#/definitions/ConsumerAttributesAssetsAccount"
        }
      },
      "required": [
        "customer",
        "account"
      ]
    },
    "ConsumerAttributes": {
      "title": "ConsumerAttributes",
      "type": "object",
      "properties": {
        "analytics_id": {
          "description": "An ID for a Consumer Attributes report",
          "example": "CA-5dfbaa3ac-5321",
          "type": "string"
        },
        "ca360_data": {
          "$ref": "#/definitions/ConsumerAttributesData"
        }
      },
      "required": [
        "analytics_id",
        "ca360_data"
      ]
    },
    "ConsumerAttributesDataNetAmount": {
      "title": "ConsumerAttributesDataNetAmount",
      "type": "object",
      "properties": {
        "monthlyNetAmount": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/MonthlyNetAmount"
            },
            {
              "description": "Monthly net amount"
            }
          ]
        }
      },
      "required": [
        "monthlyNetAmount"
      ]
    },
    "MonthlyNetAmount": {
      "title": "MonthlyNetAmount",
      "description": "Monthly net amount",
      "type": "object",
      "properties": {
        "NetAmount": {
          "description": "Net amount per month",
          "example": {
            "2021-03-31": -4333.85,
            "2021-04-30": -3605.57,
            "2021-05-31": -9374.7,
            "2021-06-30": -10084.15,
            "2021-07-31": -6318.96,
            "2021-08-31": -1363.57,
            "2021-09-30": -16997.87,
            "2021-10-31": -6870.64,
            "2021-11-30": -6244.79,
            "2021-12-31": -35750.48,
            "2021-01-31": -21232.13,
            "2021-02-28": -6723.7
          },
          "type": "object"
        }
      },
      "required": [
        "NetAmount"
      ]
    },
    "ConsumerAttributeAccountIDs": {
      "title": "ConsumerAttributeAccountIDs",
      "description": "A list of account IDs",
      "type": "object",
      "properties": {
        "accountIds": {
          "description": "The list of account IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "accountIds"
      ]
    },
    "BalanceAndCashFlowAnalyticsReportConstraints": {
      "title": "BalanceAndCashFlowAnalyticsReportConstraints",
      "description": "Request parameters from the partner to control the customer accounts included in the report, and the length of time to report on.",
      "type": "object",
      "properties": {
        "accountIds": {
          "description": "The list of account IDs to include in the report. If omitted, all accounts on record for the customer will be used.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "lengthOfReport": {
          "description": "Number of days to search for transactions. Must be one of 30, 90, 180, 270, 365, or 730. If omitted, defaults to 2 years from current time at which the request was received (730 days).",
          "example": 730,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "BalanceAnalyticsAccountResult": {
      "title": "BalanceAnalyticsAccountResult",
      "type": "object",
      "properties": {
        "accountDetails": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/ObbAccountDetails"
            },
            {
              "description": "Details of the account and financial institution"
            }
          ]
        },
        "accountId": {
          "description": "An account ID represented as a number",
          "example": 5011648377,
          "type": "integer",
          "format": "int64"
        },
        "balanceAnalyticsMetrics": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/BalanceAnalyticsMetrics"
            },
            {
              "description": "Balance analytics metrics and calculations"
            }
          ]
        },
        "currentReportRequest": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/ObbCurrentReportRequestDetails"
            },
            {
              "description": "Describes the requested attributes of the report"
            }
          ]
        },
        "historicDataAvailability": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/ObbDataAvailability"
            },
            {
              "description": "Describes the availability of historical data for the account"
            }
          ]
        }
      },
      "required": [
        "accountDetails",
        "accountId",
        "currentReportRequest",
        "historicDataAvailability"
      ]
    },
    "ObbAccountDetails": {
      "title": "ObbAccountDetails",
      "type": "object",
      "properties": {
        "accountNumberDisplay": {
          "description": "The account number from a financial institution in truncated format",
          "example": "8888",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "accountOwner": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/ObbAccountOwner"
            },
            {
              "description": "Details about who is on record as the owner of the account. May be the business name, the business owner name, or otherwise"
            }
          ]
        },
        "aggregationAttemptDate": {
          "description": "A timestamp showing the last aggregation attempt. This will not be present until you have run your first aggregation for the account.",
          "example": "2022-03-30T14:47:19-07:00",
          "type": "string",
          "minLength": 25,
          "maxLength": 25
        },
        "aggregationStatusCode": {
          "description": "The status of the most recent aggregation attempt. This will not be present until you have run your first aggregation for the account",
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "aggregationSuccessDate": {
          "description": "A timestamp showing the last successful aggregation of the account. This will not be present until you have run your first aggregation for the account.",
          "example": "2022-03-30T14:47:19-07:00",
          "type": "string",
          "minLength": 25,
          "maxLength": 25
        },
        "currency": {
          "description": "The currency of the account",
          "example": "USD",
          "type": "string",
          "minLength": 0,
          "maxLength": 5
        },
        "currentBalance": {
          "description": "Current reported balance of the account",
          "example": 2239.22,
          "type": "number",
          "format": "double"
        },
        "id": {
          "description": "An account ID represented as a number",
          "example": 5011648377,
          "type": "integer",
          "format": "int64"
        },
        "institution": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/ObbInstitution"
            },
            {
              "description": "Details of the financial institution this account is home to"
            }
          ]
        },
        "institutionLoginId": {
          "description": "An institution login ID (from the account record), represented as a number",
          "example": 1007302745,
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "description": "The account name from the institution",
          "example": "Super Checking",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "realAccountNumberLast4": {
          "description": "The last 4 digits of the ACH account number",
          "example": 5678,
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "description": "pending during account discovery, always active following successful account activation",
          "example": "active",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "type": {
          "description": "Account type, e.g. checking/saving",
          "example": "checking",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        }
      },
      "required": [
        "accountOwner",
        "id",
        "institution"
      ]
    },
    "ObbAccountOwner": {
      "title": "ObbAccountOwner",
      "type": "object",
      "properties": {
        "address": {
          "description": "Address of the owner on record for the account",
          "example": "123 Main St, Portland, OR 12345",
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "name": {
          "description": "Name of the owner on record for the account",
          "example": "Johnny Appleseed",
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "address",
        "name"
      ]
    },
    "ObbInstitution": {
      "title": "ObbInstitution",
      "type": "object",
      "properties": {
        "institutionIconUrl": {
          "description": "URL of the institution logo icon for reporting",
          "example": "https://prod-carpintero-branding.s3.us-west-2.amazonaws.com/101732/icon.svg",
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "institutionId": {
          "description": "ID of the financial institution",
          "example": 12345,
          "type": "integer",
          "format": "int32"
        },
        "institutionName": {
          "description": "Name of the financial institution",
          "example": "Wells Fargo",
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "institutionPrimaryColor": {
          "description": "Primary branding color of the institution, in hex color format",
          "example": "#1B3E4A",
          "type": "string",
          "minLength": 7,
          "maxLength": 7
        }
      },
      "required": [
        "institutionId"
      ]
    },
    "BalanceAnalyticsMetrics": {
      "title": "BalanceAnalyticsMetrics",
      "type": "object",
      "properties": {
        "availableBalance": {
          "description": "Available Balance",
          "example": 1000.01,
          "type": "number",
          "format": "double"
        },
        "availableBalanceDate": {
          "description": "Available Balance date",
          "example": "2022-02-18T02:34:00-07:00",
          "type": "string",
          "minLength": 25,
          "maxLength": 25
        },
        "averageDailyBalanceByMonthForTheReportTimePeriod": {
          "description": "Average daily ending balance each month over the report time period",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObbDateRangeAndAmount"
          }
        },
        "averageDailyBalanceForTheReportTimePeriod": {
          "description": "Average Daily Balance",
          "example": -10442.53,
          "type": "number",
          "format": "double"
        },
        "averageWeekdayBalanceForTheReportTimePeriod": {
          "description": "Average Weekday Balance",
          "example": -10442.53,
          "type": "number",
          "format": "double"
        },
        "countDailyNegativeBalancesByMonthForTheReportTimePeriod": {
          "description": "Number of negative daily ending balances each month over the report time period",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObbDateRangeAndCount"
          }
        },
        "currentRunningBalance": {
          "description": "Current Running Balance Date",
          "example": 1000.01,
          "type": "number",
          "format": "double"
        },
        "currentRunningBalanceDate": {
          "description": "Current Running Balance date",
          "example": "2022-02-10T05:00:00-07:00",
          "type": "string",
          "minLength": 25,
          "maxLength": 25
        },
        "dailyBalancesByWeekdayForTheReportTimePeriod": {
          "description": "Daily balance of the account during weekdays over the length of the report",
          "example": [
            {
              "date": "2022-03-23",
              "dayOfWeek": "Monday",
              "endingBalance": 21527.3
            }
          ],
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObbDailyBalance"
          }
        },
        "dailyBalancesForTheReportTimePeriod": {
          "description": "Daily balance of the account over the length of the report",
          "example": [
            {
              "date": "2022-03-22",
              "dayOfWeek": "Sunday",
              "endingBalance": 21527.3
            }
          ],
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObbDailyBalance"
          }
        },
        "historicNumberOfWeeksAverageBalanceIncreasing": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/ObbNumWeeksAverageBalanceIncreasing"
            },
            {
              "description": "Report of average account balance week over week and count of weeks where the average balance increased"
            }
          ]
        },
        "maximumDailyBalanceByMonthForTheReportTimePeriod": {
          "description": "Maximum daily ending balance each month over the report time period",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObbDateRangeAndAmount"
          }
        },
        "maximumRunningBalanceForTheReportTimePeriod": {
          "description": "Maximum Running Balance",
          "example": -28749.44,
          "type": "number",
          "format": "double"
        },
        "minimumDailyBalanceByMonthForTheReportTimePeriod": {
          "description": "Minimum daily ending balance each month over the report time period",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObbDateRangeAndAmount"
          }
        },
        "minimumRunningBalanceForTheReportTimePeriod": {
          "description": "Minimum Running Balance",
          "example": -28749.44,
          "type": "number",
          "format": "double"
        }
      }
    },
    "ObbDateRangeAndAmount": {
      "title": "ObbDateRangeAndAmount",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Metric value for the given period",
          "example": 890.99,
          "type": "number",
          "format": "double"
        },
        "period": {
          "description": "Period represented by this metric",
          "example": "last30to1",
          "type": "string",
          "minLength": 8,
          "maxLength": 12
        },
        "periodBeginDate": {
          "description": "Begin date of the period being reported",
          "example": "2022-03-01",
          "type": "string",
          "minLength": 10,
          "maxLength": 10
        },
        "periodEndDate": {
          "description": "End date of the period being reported",
          "example": "2022-03-30",
          "type": "string",
          "minLength": 10,
          "maxLength": 10
        }
      },
      "required": [
        "period",
        "periodBeginDate",
        "periodEndDate"
      ]
    },
    "ObbDateRangeAndCount": {
      "title": "ObbDateRangeAndCount",
      "type": "object",
      "properties": {
        "count": {
          "description": "Count of occurrences for the given period",
          "example": 5,
          "type": "integer",
          "format": "int32"
        },
        "period": {
          "description": "Period represented by this metric",
          "example": "last30to1",
          "type": "string",
          "minLength": 8,
          "maxLength": 12
        },
        "periodBeginDate": {
          "description": "Begin date of the period being reported",
          "example": "2022-03-01",
          "type": "string",
          "minLength": 10,
          "maxLength": 10
        },
        "periodEndDate": {
          "description": "End date of the period being reported",
          "example": "2022-03-30",
          "type": "string",
          "minLength": 10,
          "maxLength": 10
        }
      },
      "required": [
        "count",
        "period",
        "periodBeginDate",
        "periodEndDate"
      ]
    },
    "ObbDailyBalance": {
      "title": "ObbDailyBalance",
      "type": "object",
      "properties": {
        "date": {
          "description": "Date of balance information",
          "example": "2021-10-11",
          "type": "string",
          "minLength": 10,
          "maxLength": 10
        },
        "dayOfWeek": {
          "description": "Day of the week for which balance information available",
          "example": "Monday",
          "type": "string",
          "minLength": 6,
          "maxLength": 9
        },
        "endingBalance": {
          "description": "End of day balance",
          "example": 21527.3,
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "date",
        "dayOfWeek",
        "endingBalance"
      ]
    },
    "ObbNumWeeksAverageBalanceIncreasing": {
      "title": "ObbNumWeeksAverageBalanceIncreasing",
      "type": "object",
      "properties": {
        "historicAverageWeeklyBalances": {
          "description": "Average weekly balances over the known history",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObbAverageWeeklyBalance"
          }
        },
        "historicNumberOfWeeksAverageBalanceIncreasing": {
          "description": "Number of weeks during the known history where the average balance of the account increased week over week",
          "example": 3,
          "type": "integer",
          "format": "int32"
        },
        "historicNumberOfWeeksWithDataAvailable": {
          "description": "Number of weeks during the history in which data was available",
          "example": 4,
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "historicAverageWeeklyBalances",
        "historicNumberOfWeeksAverageBalanceIncreasing",
        "historicNumberOfWeeksWithDataAvailable"
      ]
    },
    "ObbAverageWeeklyBalance": {
      "title": "ObbAverageWeeklyBalance",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Average daily ending balance during the week",
          "example": 679.07,
          "type": "number",
          "format": "double"
        },
        "fromDate": {
          "description": "Begin date of the week",
          "example": "2020-01-01",
          "type": "string",
          "minLength": 10,
          "maxLength": 10
        },
        "toDate": {
          "description": "End date of the week",
          "example": "2020-01-07",
          "type": "string",
          "minLength": 10,
          "maxLength": 10
        },
        "week": {
          "description": "Week number, where the first week of each year begins on January 1st and ends on January 7th. May be in the range [1, 53]",
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "amount",
        "fromDate",
        "toDate",
        "week"
      ]
    },
    "ObbCurrentReportRequestDetails": {
      "title": "ObbCurrentReportRequestDetails",
      "type": "object",
      "properties": {
        "reportBeginDate": {
          "description": "Date from when the requested data is available",
          "example": "2022-03-01",
          "type": "string",
          "minLength": 10,
          "maxLength": 10
        },
        "reportEndDate": {
          "description": "Date to which the requested data is available",
          "example": "2022-03-30",
          "type": "string",
          "minLength": 10,
          "maxLength": 10
        },
        "reportRequestDate": {
          "description": "The date and time the report was requested",
          "example": "2022-03-30T14:47:19-07:00",
          "type": "string",
          "minLength": 25,
          "maxLength": 25
        },
        "requestedDaysForReport": {
          "description": "Number of days requested for the report",
          "example": 90,
          "type": "integer",
          "format": "int32"
        },
        "requestedReportBeginDate": {
          "description": "Date the report would have began on if enough data was available for which the partner requested",
          "example": "2022-01-01",
          "type": "string",
          "minLength": 10,
          "maxLength": 10
        }
      },
      "required": [
        "reportBeginDate",
        "reportEndDate",
        "reportRequestDate",
        "requestedDaysForReport",
        "requestedReportBeginDate"
      ]
    },
    "ObbDataAvailability": {
      "title": "ObbDataAvailability",
      "type": "object",
      "properties": {
        "historicAvailabilityBeginDate": {
          "description": "Begin date for data availability",
          "example": "2022-03-01",
          "type": "string",
          "minLength": 10,
          "maxLength": 10
        },
        "historicAvailabilityEndDate": {
          "description": "End date for data availability",
          "example": "2022-03-30",
          "type": "string",
          "minLength": 10,
          "maxLength": 10
        },
        "historicAvailableDays": {
          "description": "Days for which transaction details are available",
          "example": 30,
          "type": "integer",
          "format": "int32"
        },
        "historicDataAvailability": {
          "description": "Description of historic data availability",
          "example": "Data is available from 2022-03-01 to 2022-03-30",
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "historicAvailabilityBeginDate",
        "historicAvailabilityEndDate",
        "historicAvailableDays",
        "historicDataAvailability"
      ]
    },
    "BalanceAnalyticsBusinessSummary": {
      "title": "BalanceAnalyticsBusinessSummary",
      "type": "object",
      "properties": {
        "balanceAnalyticsMetrics": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/BalanceAnalyticsMetrics"
            },
            {
              "description": "Balance analytics metrics and calculations across all accounts in the report"
            }
          ]
        },
        "currentReportRequest": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/ObbCurrentReportRequestDetails"
            },
            {
              "description": "Describes the requested attributes of the report"
            }
          ]
        },
        "historicDataAvailability": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/ObbDataAvailability"
            },
            {
              "description": "Describes the availability of historical data for all accounts owned by the business"
            }
          ]
        }
      }
    },
    "ObbReportHeader": {
      "title": "ObbReportHeader",
      "description": "Includes details about the business the report is generated for and metadata about the report",
      "type": "object",
      "properties": {
        "businessAddress": {
          "description": "Business address line 1",
          "example": "123 Main St",
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "businessCity": {
          "description": "Business address city",
          "example": "Portland",
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "businessName": {
          "description": "Name of the business",
          "example": "B&G Construction",
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "businessState": {
          "description": "Business address state",
          "example": "OR",
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "businessZip": {
          "description": "Business address zip",
          "example": "12345",
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "referenceNumber": {
          "description": "Partner-provided reference number",
          "example": "32asdfaasd0823",
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "reportDate": {
          "description": "Date the report was requested",
          "example": "2022-03-16T21:28:38-07:00",
          "type": "string",
          "minLength": 25,
          "maxLength": 25
        },
        "reportId": {
          "description": "Generated unique report ID",
          "example": "8ff8b4b2-706f-45c3-8d66-857bdb516214",
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "reportDate",
        "reportId"
      ]
    },
    "CashFlowAnalyticsAccountResult": {
      "title": "CashFlowAnalyticsAccountResult",
      "type": "object",
      "properties": {
        "accountDetails": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/ObbAccountDetails"
            },
            {
              "description": "Details of the account and financial institution"
            }
          ]
        },
        "accountId": {
          "description": "An account ID represented as a number",
          "example": 5011648377,
          "type": "integer",
          "format": "int64"
        },
        "cashflowAnalyticsMetrics": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/CashFlowAnalyticsMetrics"
            },
            {
              "description": "Generated cashflow calculations/metrics"
            }
          ]
        },
        "currentReportRequest": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/ObbCurrentReportRequestDetails"
            },
            {
              "description": "Describes the requested attributes of the report"
            }
          ]
        },
        "historicDataAvailability": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/ObbDataAvailability"
            },
            {
              "description": "Describes the availability of data at the time the report was requested"
            }
          ]
        }
      },
      "required": [
        "accountDetails",
        "accountId",
        "currentReportRequest",
        "historicDataAvailability"
      ]
    },
    "CashFlowAnalyticsMetrics": {
      "title": "CashFlowAnalyticsMetrics",
      "type": "object",
      "properties": {
        "inflow": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/CashFlowInflowAttributes"
            },
            {
              "description": "Inflow Attributes"
            }
          ]
        },
        "negativeTriggers": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/CashFlowNegativeTriggers"
            },
            {
              "description": "Details of transactions that may be warning signs of bad creditworthiness"
            }
          ]
        },
        "outflow": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/CashFlowOutflowAttributes"
            },
            {
              "description": "Outflow attributes"
            }
          ]
        },
        "revenueByMonthForTheReportTimePeriod": {
          "description": "Sum of all transactions categorized as revenue, split by months",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObbDateRangeAndAmount"
          }
        },
        "revenueForTheReportTimePeriod": {
          "description": "Sum of all transactions categorized as revenue",
          "example": 43893.44,
          "type": "number",
          "format": "double"
        },
        "transactionAnalytics": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/CashFlowTransactionAnalyticsAttributes"
            },
            {
              "description": "Transaction Analytics Attributes"
            }
          ]
        }
      }
    },
    "CashFlowInflowAttributes": {
      "title": "CashFlowInflowAttributes",
      "type": "object",
      "properties": {
        "averageDepositByMonthForTheReportTimePeriod": {
          "description": "Average value of deposits during periods in the report",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObbDateRangeAndAmount"
          }
        },
        "countDepositsByMonthForTheReportTimePeriod": {
          "description": "Count of all deposits during periods in the report",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObbDateRangeAndCount"
          }
        },
        "historicCountOfDepositTransactions": {
          "description": "Count of ALL deposits over entire known history of the account (may exceed requested length of report)",
          "example": 20,
          "type": "integer",
          "format": "int32"
        },
        "historicSumOfDeposits": {
          "description": "Sum of ALL deposits over entire known history of the account (may exceed requested length of report)",
          "example": 389.22,
          "type": "number",
          "format": "double"
        },
        "maximumDepositByMonthForTheReportTimePeriod": {
          "description": "Maximum deposit value for different periods in the report",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObbDateRangeAndAmount"
          }
        },
        "minimumDepositByMonthForTheReportTimePeriod": {
          "description": "Minimum deposit value for different periods in the report",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObbDateRangeAndAmount"
          }
        },
        "sumDepositsByMonthForTheReportTimePeriod": {
          "description": "Sum of all deposits during periods in the report",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObbDateRangeAndAmount"
          }
        }
      },
      "required": [
        "countDepositsByMonthForTheReportTimePeriod",
        "historicCountOfDepositTransactions",
        "maximumDepositByMonthForTheReportTimePeriod",
        "minimumDepositByMonthForTheReportTimePeriod",
        "sumDepositsByMonthForTheReportTimePeriod"
      ]
    },
    "CashFlowNegativeTriggers": {
      "title": "CashFlowNegativeTriggers",
      "type": "object",
      "properties": {
        "insufficientFundFees": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/CashFlowInsufficientFundsFees"
            },
            {
              "description": "Non Sufficient Fund Fees"
            }
          ]
        }
      }
    },
    "CashFlowInsufficientFundsFees": {
      "title": "CashFlowInsufficientFundsFees",
      "type": "object",
      "properties": {
        "countOfTransactionsForTheReportTimePeriod": {
          "description": "Count of all NSF transactions during the report",
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "sumOfTransactionsForTheReportTimePeriod": {
          "description": "Sum of all NSF transactions during the report",
          "example": -1.65,
          "type": "number",
          "format": "double"
        },
        "transactions": {
          "description": "Transactions categorized as NSF",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InsufficientFundsTransaction"
          }
        }
      }
    },
    "InsufficientFundsTransaction": {
      "title": "InsufficientFundsTransaction",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Amount of the NSF transaction",
          "example": -1.65,
          "type": "number",
          "format": "double"
        },
        "description": {
          "description": "Description of the transaction",
          "example": "OVERDRAFT FEE",
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "memo": {
          "description": "Transaction memo",
          "example": "NSF",
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "postedDate": {
          "description": "Posted date of the NSF transaction",
          "example": "2022-12-19",
          "type": "string",
          "minLength": 10,
          "maxLength": 10
        },
        "transactionId": {
          "description": "Finicity transaction ID",
          "example": 23092384290,
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "amount",
        "postedDate",
        "transactionId"
      ]
    },
    "CashFlowOutflowAttributes": {
      "title": "CashFlowOutflowAttributes",
      "type": "object",
      "properties": {
        "averageWithdrawalByMonthForTheReportTimePeriod": {
          "description": "Average value of withdrawals during periods in the report",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObbDateRangeAndAmount"
          }
        },
        "countWithdrawalsByMonthForTheReportTimePeriod": {
          "description": "Count of all withdrawals during periods in the report",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObbDateRangeAndCount"
          }
        },
        "historicCountOfWithdrawalTransactions": {
          "description": "Count of ALL withdrawals over entire known history of the account (may exceed requested length of report)",
          "example": 20,
          "type": "integer",
          "format": "int32"
        },
        "historicSumOfWithdrawals": {
          "description": "Sum of ALL withdrawals over entire known history of the account (may exceed requested length of report)",
          "example": 925.66,
          "type": "number",
          "format": "double"
        },
        "maximumWithdrawalByMonthForTheReportTimePeriod": {
          "description": "Maximum withdrawal value for different periods in the report",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObbDateRangeAndAmount"
          }
        },
        "minimumWithdrawalByMonthForTheReportTimePeriod": {
          "description": "Minimum withdrawal value for different periods in the report",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObbDateRangeAndAmount"
          }
        },
        "sumWithdrawalsByMonthForTheReportTimePeriod": {
          "description": "Sum of all withdrawals during periods in the report",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObbDateRangeAndAmount"
          }
        }
      },
      "required": [
        "countWithdrawalsByMonthForTheReportTimePeriod",
        "historicCountOfWithdrawalTransactions",
        "maximumWithdrawalByMonthForTheReportTimePeriod",
        "minimumWithdrawalByMonthForTheReportTimePeriod",
        "sumWithdrawalsByMonthForTheReportTimePeriod"
      ]
    },
    "CashFlowTransactionAnalyticsAttributes": {
      "title": "CashFlowTransactionAnalyticsAttributes",
      "type": "object",
      "properties": {
        "activityDepositsCreditsForTheReportTimePeriod": {
          "description": "List of all deposit transactions posted to the account during the report period",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CashFlowActivityDepositsCredits"
          }
        },
        "activityWithdrawalsDebitsForTheReportTimePeriod": {
          "description": "List of all withdrawal transactions posted to the account during the report period",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CashFlowActivityWithdrawalsDebits"
          }
        },
        "averageTransactionValueByMonthForTheReportTimePeriod": {
          "description": "Average value of transactions during periods in the report. Values may be positive or negative",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObbDateRangeAndAmount"
          }
        },
        "historicWeeksWithZeroTransactions": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/CashFlowNumWeeksZeros"
            },
            {
              "description": "Details of weeks with zero transactions during the known history of the account"
            }
          ]
        },
        "lastTransactionDate": {
          "description": "Latest posted transaction(s) to the account. May be more than one if they share the same timestamp",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LastTransactionDate"
          }
        },
        "netCashFlowByMonthForTheReportTimePeriod": {
          "description": "Net cash flow for each month during the report period",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObbDateRangeAndAmount"
          }
        },
        "netCashFlowForTheReportTimePeriod": {
          "description": "Net cash flow during the report period (may be positive or negative)",
          "example": 1544.94,
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "activityDepositsCreditsForTheReportTimePeriod",
        "activityWithdrawalsDebitsForTheReportTimePeriod",
        "averageTransactionValueByMonthForTheReportTimePeriod"
      ]
    },
    "CashFlowActivityDepositsCredits": {
      "title": "CashFlowActivityDepositsCredits",
      "type": "object",
      "properties": {
        "date": {
          "description": "Date the deposit transaction was posted",
          "example": "2020-03-25",
          "type": "string",
          "minLength": 10,
          "maxLength": 10
        },
        "depositsCredits": {
          "description": "Amount of the deposit",
          "example": 500,
          "type": "number",
          "format": "double"
        },
        "transactionDescription": {
          "description": "Description of transaction",
          "example": "VENMO            CASHOUT",
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "date",
        "depositsCredits"
      ]
    },
    "CashFlowActivityWithdrawalsDebits": {
      "title": "CashFlowActivityWithdrawalsDebits",
      "type": "object",
      "properties": {
        "date": {
          "description": "Date the withdrawal transaction was posted",
          "example": "2020-03-25",
          "type": "string",
          "minLength": 10,
          "maxLength": 10
        },
        "transactionDescription": {
          "description": "Description of transaction",
          "example": "Payment to Chase card ending in",
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "withdrawalsDebits": {
          "description": "Amount of the withdrawal",
          "example": 15.69,
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "date",
        "withdrawalsDebits"
      ]
    },
    "CashFlowNumWeeksZeros": {
      "title": "CashFlowNumWeeksZeros",
      "type": "object",
      "properties": {
        "historicNumberOfWeeksWithDataAvailable": {
          "description": "Number of weeks during known history of account in which data was available",
          "example": 10,
          "type": "integer",
          "format": "int32"
        },
        "historicNumberOfWeeksZeroTransactions": {
          "description": "Number of weeks during known history of account where zero transactions were posted",
          "example": 5,
          "type": "integer",
          "format": "int32"
        },
        "historicWeeksWithZeroTransactions": {
          "description": "List of weeks with zero reported transactions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObbWeekOfYear"
          }
        }
      },
      "required": [
        "historicNumberOfWeeksWithDataAvailable",
        "historicNumberOfWeeksZeroTransactions",
        "historicWeeksWithZeroTransactions"
      ]
    },
    "ObbWeekOfYear": {
      "title": "ObbWeekOfYear",
      "type": "object",
      "properties": {
        "fromDate": {
          "description": "Begin date of the week",
          "example": "2020-01-01",
          "type": "string",
          "minLength": 10,
          "maxLength": 10
        },
        "toDate": {
          "description": "End date of the week",
          "example": "2020-01-07",
          "type": "string",
          "minLength": 10,
          "maxLength": 10
        },
        "week": {
          "description": "Week number, where the first week of each year begins on January 1st and ends on January 7th. May be in the range [1, 53]",
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "fromDate",
        "toDate",
        "week"
      ]
    },
    "CashFlowAnalyticsBusinessSummary": {
      "title": "CashFlowAnalyticsBusinessSummary",
      "type": "object",
      "properties": {
        "cashflowAnalyticsMetrics": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/CashFlowAnalyticsMetrics"
            },
            {
              "description": "Cash flow analytics metrics and calculations across all accounts in the report"
            }
          ]
        },
        "currentReportRequest": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/ObbCurrentReportRequestDetails"
            },
            {
              "description": "Describes the requested attributes of the report"
            }
          ]
        },
        "historicDataAvailability": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/ObbDataAvailability"
            },
            {
              "description": "Describes the availability of historical data for all accounts owned by the business"
            }
          ]
        }
      },
      "required": [
        "currentReportRequest",
        "historicDataAvailability"
      ]
    },
    "ObbErrorMessage": {
      "title": "ObbErrorMessage",
      "description": "OBB Error response message",
      "type": "object",
      "properties": {
        "errorCode": {
          "description": "Error code",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "Detailed reason about the source of the error",
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "errorCode",
        "message"
      ]
    },
    "BalanceAndCashFlowAnalyticsReportAck": {
      "title": "BalanceAndCashFlowAnalyticsReportAck",
      "description": "Response given when analtyics were generated successfully, providing the caller with a report ID which can be used to retrieve the report as JSON or a PDF.",
      "type": "object",
      "properties": {
        "accountIds": {
          "description": "List of account IDs included in the report",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "businessId": {
          "description": "Business ID associated with the requested customer",
          "type": "integer",
          "format": "int32"
        },
        "createdDate": {
          "description": "Created date of balance analytics request",
          "type": "string",
          "minLength": 25,
          "maxLength": 25
        },
        "customerId": {
          "description": "A customer ID represented as a number. See Add Customer API for how to create a customer ID.",
          "example": 1005061234,
          "type": "integer",
          "format": "int64"
        },
        "reportId": {
          "description": "A report ID",
          "example": "u4hstnnak45g",
          "type": "string"
        },
        "reportPin": {
          "description": "PIN that may be used to access the report",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "requesterName": {
          "description": "Name of requester",
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "title": {
          "description": "Title of the report",
          "example": "Finicity Asset Ready Report (CRA)",
          "type": "string"
        }
      },
      "required": [
        "accountIds",
        "createdDate",
        "customerId",
        "reportId",
        "reportPin",
        "title"
      ]
    },
    "BalanceAnalyticsReport": {
      "title": "BalanceAnalyticsReport",
      "description": "Balance analytics report data as JSON",
      "type": "object",
      "properties": {
        "accountResults": {
          "description": "Balance results per account",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BalanceAnalyticsAccountResult"
          }
        },
        "businessId": {
          "description": "Business ID",
          "example": 4444,
          "type": "integer",
          "format": "int32"
        },
        "businessSummary": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/BalanceAnalyticsBusinessSummary"
            },
            {
              "description": "Balance analytics summarized across all accounts in the report"
            }
          ]
        },
        "customerId": {
          "description": "A customer ID represented as a number. See Add Customer API for how to create a customer ID.",
          "example": 1005061234,
          "type": "integer",
          "format": "int64"
        },
        "reportHeader": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/ObbReportHeader"
            },
            {
              "description": "Customer and report metadata"
            }
          ]
        },
        "requesterName": {
          "description": "Name of requester",
          "example": "Mortgage ABC LLC",
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "title": {
          "description": "Title of the report",
          "example": "Finicity Asset Ready Report (CRA)",
          "type": "string"
        }
      },
      "required": [
        "customerId",
        "reportHeader",
        "title"
      ]
    },
    "CashFlowAnalyticsReport": {
      "title": "CashFlowAnalyticsReport",
      "description": "Cash Flow Analytics report data as JSON",
      "type": "object",
      "properties": {
        "accountResults": {
          "description": "Cash flow results per account",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CashFlowAnalyticsAccountResult"
          }
        },
        "businessId": {
          "description": "Business ID",
          "example": 4444,
          "type": "integer",
          "format": "int32"
        },
        "businessSummary": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/CashFlowAnalyticsBusinessSummary"
            },
            {
              "description": "Cash flow analytics summarized across all accounts in the report"
            }
          ]
        },
        "customerId": {
          "description": "A customer ID represented as a number. See Add Customer API for how to create a customer ID.",
          "example": 1005061234,
          "type": "integer",
          "format": "int64"
        },
        "reportHeader": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/ObbReportHeader"
            },
            {
              "description": "Customer and report metadata"
            }
          ]
        },
        "requesterName": {
          "description": "Name of requester",
          "example": "Mortgage ABC LLC",
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "title": {
          "description": "Title of the report",
          "example": "Finicity Asset Ready Report (CRA)",
          "type": "string"
        },
        "totalRevenue": {
          "description": "The total revenue",
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "customerId",
        "reportHeader",
        "title"
      ]
    },
    "Account": {
      "title": "Account",
      "type": "object",
      "properties": {
        "id": {
          "description": "Finicity account ID",
          "example": "6681984",
          "type": "string"
        },
        "ownerName": {
          "description": "The name(s) of the account owner(s), retrieved from the institution.",
          "example": "PATRICK & LORRAINE PURCHASER",
          "type": "string"
        },
        "ownerAddress": {
          "description": "The mailing address of the account owner, retrieved from the institution.",
          "example": "7195 BELMONT ST. PARLIN, NJ 08859",
          "type": "string"
        },
        "name": {
          "description": "The account name from the institution",
          "example": "Checking",
          "type": "string"
        },
        "number": {
          "description": "The account number from the institution (obfuscated)",
          "example": "XX1111",
          "type": "string"
        },
        "type": {
          "description": "CFR: `ALL` (`checking` / `savings` / `loan` / `mortgage` / `credit card` / `CD` / `MM` / `investment`...)",
          "example": "checking",
          "type": "string"
        },
        "aggregationStatusCode": {
          "description": "The status of the most recent aggregation attempt for this account (non-zero means the account was not accessed successfully for this report, and additional fields for this account may not be reliable)",
          "example": "0",
          "type": "string"
        },
        "currentBalance": {
          "description": "The cleared balance of the account as-of `balanceDate`",
          "example": 100000,
          "type": "number",
          "format": "double"
        },
        "availableBalance": {
          "description": "Available balance",
          "example": 1000,
          "type": "number",
          "format": "double"
        },
        "balanceDate": {
          "description": "A timestamp showing when the `balance` was captured",
          "example": 1614880526,
          "type": "integer",
          "format": "int64"
        },
        "transactions": {
          "description": "a list of transaction records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportTransaction"
          }
        },
        "cashFlowBalance": {
          "$ref": "#/definitions/CashFlowCashFlowBalance"
        },
        "cashFlowCredit": {
          "$ref": "#/definitions/CashFlowCashFlowCredit"
        },
        "cashFlowDebit": {
          "$ref": "#/definitions/CashFlowCashFlowDebit"
        },
        "cashFlowCharacteristic": {
          "$ref": "#/definitions/CashFlowCashFlowCharacteristic"
        },
        "balance": {
          "description": "The cleared balance of the account as-of `balanceDate`",
          "example": 501.24,
          "type": "number",
          "format": "double"
        },
        "averageMonthlyBalance": {
          "description": "The average monthly balance of the account",
          "example": 501.02,
          "type": "number",
          "format": "double"
        },
        "totNumberInsufficientFundsFeeDebitTxAccount": {
          "description": "The count for the total number of insufficient funds transactions, based on the `fromDate` of the report",
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount": {
          "description": "The total number of  insufficient funds fees for the account over six months",
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount": {
          "description": "The total number of days since the most recent insufficient funds fee for the account",
          "example": 120,
          "type": "integer",
          "format": "int64"
        },
        "asset": {
          "$ref": "#/definitions/PrequalificationReportAssetSummary"
        },
        "details": {
          "$ref": "#/definitions/AccountDetails"
        },
        "totNumberInsufficientFundsFeeDebitTxOver2MonthsAccount": {
          "description": "The count for the total number of insufficient funds transactions for the last two months, based on the `fromDate` of the report.",
          "example": 0,
          "type": "integer",
          "format": "int64"
        },
        "incomeStreams": {
          "description": "A list of income stream records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VOAIReportIncomeStream2"
          }
        },
        "beginningBalance": {
          "description": "Beginning balance of account per the time period in the report",
          "example": 714.77,
          "type": "number",
          "format": "double"
        },
        "miscDeposits": {
          "description": "A list of miscellaneous deposits",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportTransaction"
          },
          "minItems": 0,
          "maxItems": 100
        }
      },
      "required": [
        "id",
        "ownerName",
        "ownerAddress",
        "name",
        "number",
        "type",
        "aggregationStatusCode",
        "availableBalance",
        "transactions",
        "balance",
        "averageMonthlyBalance",
        "incomeStreams"
      ]
    },
    "AccountDetails1": {
      "title": "AccountDetails1",
      "type": "object",
      "properties": {
        "accountNumberDisplay": {
          "description": "The account number from a financial institution in truncated format",
          "example": "8888",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "accountOwner": {
          "$ref": "#/definitions/ObbAccountOwner"
        },
        "aggregationAttemptDate": {
          "description": "A timestamp showing the last aggregation attempt. This will not be present until you have run your first aggregation for the account.",
          "example": "2022-03-30T14:47:19-07:00",
          "type": "string",
          "minLength": 25,
          "maxLength": 25
        },
        "aggregationStatusCode": {
          "description": "The status of the most recent aggregation attempt. This will not be present until you have run your first aggregation for the account",
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "aggregationSuccessDate": {
          "description": "A timestamp showing the last successful aggregation of the account. This will not be present until you have run your first aggregation for the account.",
          "example": "2022-03-30T14:47:19-07:00",
          "type": "string",
          "minLength": 25,
          "maxLength": 25
        },
        "currency": {
          "description": "The currency of the account",
          "example": "USD",
          "type": "string",
          "minLength": 0,
          "maxLength": 5
        },
        "currentBalance": {
          "description": "Current reported balance of the account",
          "example": 2239.22,
          "type": "number",
          "format": "double"
        },
        "id": {
          "description": "An account ID represented as a number",
          "example": 5011648377,
          "type": "integer",
          "format": "int64"
        },
        "institution": {
          "$ref": "#/definitions/ObbInstitution"
        },
        "institutionLoginId": {
          "description": "An institution login ID (from the account record), represented as a number",
          "example": 1007302745,
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "description": "The account name from the institution",
          "example": "Super Checking",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "realAccountNumberLast4": {
          "description": "The last 4 digits of the ACH account number",
          "example": 5678,
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "description": "pending during account discovery, always active following successful account activation",
          "example": "active",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "type": {
          "description": "Account type, e.g. checking/saving",
          "example": "checking",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        }
      },
      "required": [
        "accountOwner",
        "id",
        "institution"
      ]
    },
    "BalanceAnalyticsAccountResult1": {
      "title": "BalanceAnalyticsAccountResult1",
      "type": "object",
      "properties": {
        "accountDetails": {
          "$ref": "#/definitions/AccountDetails1"
        },
        "accountId": {
          "description": "An account ID represented as a number",
          "example": 5011648377,
          "type": "integer",
          "format": "int64"
        },
        "balanceAnalyticsMetrics": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/BalanceAnalyticsMetrics"
            },
            {
              "description": "Balance analytics metrics and calculations"
            }
          ]
        },
        "currentReportRequest": {
          "$ref": "#/definitions/ObbCurrentReportRequestDetails"
        },
        "historicDataAvailability": {
          "$ref": "#/definitions/ObbDataAvailability"
        },
        "cashflowAnalyticsMetrics": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/CashFlowAnalyticsMetrics"
            },
            {
              "description": "Generated cashflow calculations/metrics"
            }
          ]
        }
      },
      "required": [
        "accountDetails",
        "accountId",
        "currentReportRequest",
        "historicDataAvailability"
      ]
    },
    "BusinessSummary": {
      "title": "BusinessSummary",
      "type": "object",
      "properties": {
        "cashflowAnalyticsMetrics": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/CashFlowAnalyticsMetrics"
            },
            {
              "description": "Cash flow analytics metrics and calculations across all accounts in the report"
            }
          ]
        },
        "currentReportRequest": {
          "$ref": "#/definitions/ObbCurrentReportRequestDetails"
        },
        "historicDataAvailability": {
          "$ref": "#/definitions/ObbDataAvailability"
        },
        "balanceAnalyticsMetrics": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/BalanceAnalyticsMetrics"
            },
            {
              "description": "Balance analytics metrics and calculations across all accounts in the report"
            }
          ]
        }
      },
      "required": [
        "currentReportRequest",
        "historicDataAvailability"
      ]
    },
    "CashFlowAnalyticsAccountResult1": {
      "title": "CashFlowAnalyticsAccountResult1",
      "type": "object",
      "properties": {
        "accountDetails": {
          "$ref": "#/definitions/AccountDetails1"
        },
        "accountId": {
          "description": "An account ID represented as a number",
          "example": 5011648377,
          "type": "integer",
          "format": "int64"
        },
        "cashflowAnalyticsMetrics": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/CashFlowAnalyticsMetrics"
            },
            {
              "description": "Generated cashflow calculations/metrics"
            }
          ]
        },
        "currentReportRequest": {
          "$ref": "#/definitions/ObbCurrentReportRequestDetails"
        },
        "historicDataAvailability": {
          "$ref": "#/definitions/ObbDataAvailability"
        },
        "balanceAnalyticsMetrics": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/BalanceAnalyticsMetrics"
            },
            {
              "description": "Balance analytics metrics and calculations"
            }
          ]
        }
      },
      "required": [
        "accountDetails",
        "accountId",
        "currentReportRequest",
        "historicDataAvailability"
      ]
    },
    "GetObbAnalyticsReportFcraResponse": {
      "title": "GetObbAnalyticsReportFcraResponse",
      "type": "object",
      "properties": {
        "accountResults": {
          "description": "Balance results per account",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BalanceAnalyticsAccountResult1"
          }
        },
        "businessId": {
          "description": "Business ID",
          "example": 4444,
          "type": "integer",
          "format": "int32"
        },
        "businessSummary": {
          "$ref": "#/definitions/BusinessSummary"
        },
        "customerId": {
          "description": "A customer ID represented as a number. See Add Customer API for how to create a customer ID.",
          "example": 1005061234,
          "type": "integer",
          "format": "int64"
        },
        "reportHeader": {
          "$ref": "#/definitions/ReportHeader"
        },
        "requesterName": {
          "description": "Name of requester",
          "example": "Mortgage ABC LLC",
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "title": {
          "description": "Title of the report",
          "example": "Finicity Asset Ready Report (CRA)",
          "type": "string"
        },
        "totalRevenue": {
          "description": "The total revenue",
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "customerId",
        "reportHeader",
        "title"
      ]
    },
    "GetObbAnalyticsReportResponse": {
      "title": "GetObbAnalyticsReportResponse",
      "type": "object",
      "properties": {
        "accountResults": {
          "description": "Cash flow results per account",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CashFlowAnalyticsAccountResult1"
          }
        },
        "businessId": {
          "description": "Business ID",
          "example": 4444,
          "type": "integer",
          "format": "int32"
        },
        "businessSummary": {
          "$ref": "#/definitions/BusinessSummary"
        },
        "customerId": {
          "description": "A customer ID represented as a number. See Add Customer API for how to create a customer ID.",
          "example": 1005061234,
          "type": "integer",
          "format": "int64"
        },
        "reportHeader": {
          "$ref": "#/definitions/ReportHeader"
        },
        "requesterName": {
          "description": "Name of requester",
          "example": "Mortgage ABC LLC",
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "title": {
          "description": "Title of the report",
          "example": "Finicity Asset Ready Report (CRA)",
          "type": "string"
        },
        "totalRevenue": {
          "description": "The total revenue",
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "customerId",
        "reportHeader",
        "title"
      ]
    },
    "LastTransactionDate": {
      "title": "LastTransactionDate",
      "type": "object",
      "properties": {
        "date": {
          "description": "Date the deposit transaction was posted",
          "example": "2020-03-25",
          "type": "string"
        },
        "depositsCredits": {
          "description": "Amount of transaction if deposit, otherwise null",
          "example": 500,
          "type": "number",
          "format": "double"
        },
        "withdrawalsDebits": {
          "description": "Amount of transaction if withdrawal, otherwise null",
          "example": 500,
          "type": "number",
          "format": "double"
        },
        "zeroAmountTransaction": {
          "description": "Amount of transaction if zero, otherwise null",
          "example": 0,
          "type": "number",
          "format": "double"
        },
        "transactionDescription": {
          "description": "Description of transaction",
          "example": "VENMO            CASHOUT",
          "type": "string"
        }
      },
      "required": [
        "date"
      ]
    },
    "ReportHeader": {
      "title": "ReportHeader",
      "type": "object",
      "properties": {
        "businessAddress": {
          "description": "Business address line 1",
          "example": "123 Main St",
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "businessCity": {
          "description": "Business address city",
          "example": "Portland",
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "businessName": {
          "description": "Name of the business",
          "example": "B&G Construction",
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "businessState": {
          "description": "Business address state",
          "example": "OR",
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "businessZip": {
          "description": "Business address zip",
          "example": "12345",
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "referenceNumber": {
          "description": "Partner-provided reference number",
          "example": "32asdfaasd0823",
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "reportDate": {
          "description": "Date the report was requested",
          "example": "2022-03-16T21:28:38-07:00",
          "type": "string",
          "minLength": 25,
          "maxLength": 25
        },
        "reportId": {
          "description": "Generated unique report ID",
          "example": "8ff8b4b2-706f-45c3-8d66-857bdb516214",
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "reportDate",
        "reportId"
      ]
    },
    "ReportInstitution2": {
      "title": "ReportInstitution2",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID of a financial institution, represented as a number",
          "example": 4222,
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "description": "Finicity institution name",
          "example": "FinBank Profiles",
          "type": "string"
        },
        "urlHomeApp": {
          "description": "The URL of the Financial Institution",
          "example": "http://www.finbank.com",
          "type": "string"
        },
        "accounts": {
          "description": "A list of account records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Account"
          }
        }
      },
      "required": [
        "id",
        "name",
        "urlHomeApp",
        "accounts"
      ]
    },
    "VOAIReportIncomeStream2": {
      "title": "VOAIReportIncomeStream2",
      "description": "A report income stream record",
      "type": "object",
      "properties": {
        "id": {
          "description": "Income stream ID",
          "example": "dens28i3vsch-voah",
          "type": "string"
        },
        "name": {
          "description": "A human-readable name based on the `normalizedPayee` name of the transactions for this income stream",
          "example": "none",
          "type": "string"
        },
        "status": {
          "description": "Possible values: \"ACTIVE\", \"INACTIVE\"",
          "type": "string"
        },
        "estimateInclusion": {
          "description": "Possible values: \"HIGH\", \"MODERATE\", \"LOW\", \"NO\"",
          "type": "string"
        },
        "confidence": {
          "description": "Level of confidence that the deposit stream represents income (example: 85%)",
          "example": 70,
          "type": "integer",
          "format": "int32"
        },
        "cadence": {
          "$ref": "#/definitions/CadenceDetails"
        },
        "netMonthly": {
          "description": "A list of net monthly records. One instance for each complete calendar month in the report.",
          "example": [
            {
              "month": 1522562400,
              "net": 2004.77
            }
          ],
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetMonthly"
          }
        },
        "netAnnual": {
          "description": "Sum of all values in `netMonthlyIncome` over the previous 12 months",
          "example": 110475.7,
          "type": "number",
          "format": "double"
        },
        "projectedNetAnnual": {
          "description": "Projected net income over the next 12 months, across all income streams, based on `netAnnualIncome`",
          "example": 0,
          "type": "number",
          "format": "double"
        },
        "estimatedGrossAnnual": {
          "description": "Before-tax gross annual income (estimated from `netAnnual`) across all income stream in the past 12 months",
          "example": 12321.1,
          "type": "number",
          "format": "double"
        },
        "projectedGrossAnnual": {
          "description": "Projected gross income over the next 12 months, across all active income streams, based on `projectedNetAnnual`",
          "example": 151609,
          "type": "number",
          "format": "double"
        },
        "averageMonthlyIncomeNet": {
          "description": "Monthly average amount over the previous 24 months",
          "example": 9206.31,
          "type": "number",
          "format": "double"
        },
        "incomeStreamMonths": {
          "description": "The number of months the income transactions are observed",
          "example": 18,
          "type": "integer",
          "format": "int32"
        },
        "transactions": {
          "description": "A list of transaction records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportTransaction"
          }
        },
        "daysSinceLastTransaction": {
          "description": "The number of days since the last credit transaction for the particular income stream",
          "example": 15,
          "type": "integer",
          "format": "int32"
        },
        "nextExpectedTransactionDate": {
          "description": "The next expected credit transaction date for the particular income stream, based on the cadence",
          "example": 1572625469,
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "id",
        "name",
        "status",
        "estimateInclusion",
        "confidence",
        "cadence",
        "netMonthly",
        "netAnnual",
        "projectedNetAnnual",
        "estimatedGrossAnnual",
        "projectedGrossAnnual",
        "averageMonthlyIncomeNet",
        "incomeStreamMonths",
        "transactions",
        "daysSinceLastTransaction",
        "nextExpectedTransactionDate"
      ]
    },
    "VOIEPayStatement2": {
      "title": "VOIEPayStatement2",
      "type": "object",
      "properties": {
        "payPeriod": {
          "description": "The pay period of the pay statement",
          "example": "LastPayPeriod",
          "type": "string"
        },
        "billable": {
          "description": "Designates whether the pay statement is billable",
          "example": true,
          "type": "boolean"
        },
        "assetId": {
          "description": "The asset ID of the stored pay statement",
          "example": "6f8fb0a0-e882-4f57-b672-cf53f1397581",
          "type": "string"
        },
        "payDate": {
          "description": "The listed pay date for the pay statement",
          "example": 1559241000,
          "type": "integer",
          "format": "int64"
        },
        "startDate": {
          "description": "The beginning of the pay period",
          "example": 1557513000,
          "type": "integer",
          "format": "int64"
        },
        "endDate": {
          "description": "The end of the pay period",
          "example": 1558722600,
          "type": "integer",
          "format": "int64"
        },
        "netPayCurrent": {
          "description": "The total pay after deductions for the employee for the current pay period",
          "example": 1802.22,
          "type": "number",
          "format": "double"
        },
        "netPayYTD": {
          "description": "The total accumulation of pay after deductions for the employee for the current pay year",
          "example": 36000,
          "type": "number",
          "format": "double"
        },
        "grossPayCurrent": {
          "description": "The total pay before deductions for the employee for the current pay period",
          "example": 24200,
          "type": "number",
          "format": "double"
        },
        "grossPayYTD": {
          "description": "The total accumulation of pay before deductions for the employee for the current pay year",
          "example": 72600,
          "type": "number",
          "format": "double"
        },
        "payrollProvider": {
          "description": "The company that provides the pay stub.",
          "example": "Finicity",
          "type": "string"
        },
        "employer": {
          "$ref": "#/definitions/Employer"
        },
        "employee": {
          "$ref": "#/definitions/Employee"
        },
        "payStat": {
          "description": "Information pertaining to the earnings on the pay statement",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PayStat"
          }
        },
        "deductions": {
          "description": "Information pertaining to deductions on the pay statement",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Deduction"
          }
        },
        "directDeposits": {
          "description": "Information pertaining to direct deposits on the pay statement",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DirectDeposit"
          }
        },
        "monthlyIncome": {
          "$ref": "#/definitions/PaystubMonthlyIncomeRecord"
        },
        "institutions": {
          "description": "Not populated for the voieWithStatement style of paystub report. For the VOIE - Paystub (with TXVerify) reports this would include details of the financial institution accounts and income streams with matching transactions to the pay statement.",
          "example": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "errorCode": {
          "description": "Error code for the asset",
          "type": "integer",
          "format": "int32"
        },
        "errorMessage": {
          "description": "Error message for the asset",
          "type": "string"
        }
      },
      "required": [
        "payPeriod",
        "billable",
        "assetId",
        "payDate",
        "startDate",
        "endDate",
        "netPayCurrent",
        "netPayYTD",
        "grossPayCurrent",
        "grossPayYTD",
        "employer",
        "employee",
        "payStat",
        "directDeposits",
        "monthlyIncome",
        "institutions"
      ]
    }
  },
  "security": [
    {
      "FinicityAppKey": [],
      "FinicityAppToken": []
    }
  ],
  "tags": [
    {
      "name": "Accounts",
      "description": "Fetch or refresh customer accounts"
    },
    {
      "name": "Analytics and Attributes",
      "description": "Generate and fetch consumer attributes (Beta)"
    },
    {
      "name": "App Registration",
      "description": "Register and assign apps to customers"
    },
    {
      "name": "Assets",
      "description": "Download asset files"
    },
    {
      "name": "Authentication",
      "description": "Generate authentication tokens and manage credentials"
    },
    {
      "name": "Balance Analytics",
      "description": "Balance Analytics for businesses"
    },
    {
      "name": "Bank Statements",
      "description": "Fetch account statements and generate reports asynchronously"
    },
    {
      "name": "Cash Flow",
      "description": "Generate cash flow reports asynchronously"
    },
    {
      "name": "Cash Flow Analytics",
      "description": "Cash Flow Analytics for business"
    },
    {
      "name": "Connect 🔗",
      "description": "Allow customers to log into their financial institutions and grant Finicity authorization"
    },
    {
      "name": "Consumers",
      "description": "Create and manage consumers associated with customers in order to use report services"
    },
    {
      "name": "Customers",
      "description": "Enroll and manage customers"
    },
    {
      "name": "Institutions",
      "description": "Search and fetch financial institutions"
    },
    {
      "name": "Pay Statements",
      "description": "Upload pay statements"
    },
    {
      "name": "Payments",
      "description": "Fetch ACH details and account balances"
    },
    {
      "name": "Portfolios",
      "description": "Generate portfolios of the most recent reports"
    },
    {
      "name": "Reports",
      "description": "Fetch generated reports when ready"
    },
    {
      "name": "Transactions",
      "description": "Fetch customer and account transactions and generate reports asynchronously"
    },
    {
      "name": "TxPush",
      "description": "Manage TxPush subscriptions"
    },
    {
      "name": "Verify Assets",
      "description": "Generate asset reports asynchronously"
    },
    {
      "name": "Verify Income and Employment",
      "description": "Generate income and employment reports asynchronously"
    }
  ]
}