<?xml version="1.0" encoding="utf-8"?>
<definitions xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:schemas="https://api.finicity.com/schemas" xmlns:wsdl="https://api.finicity.com/wsdl" targetNamespace="https://api.finicity.com/wsdl" xmlns="http://schemas.xmlsoap.org/wsdl/">
  <types>
    <xs:schema xmlns:tns="https://api.finicity.com/schemas" targetNamespace="https://api.finicity.com/schemas" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="GET_GetCustomerAccountsByInstitutionLogin_InputMessage" type="schemas:GET_GetCustomerAccountsByInstitutionLogin_InputMessage" />
      <xs:element name="GET_GetCustomerAccountsByInstitutionLogin_OutputMessage" type="schemas:GET_GetCustomerAccountsByInstitutionLogin_OutputMessage" />
      <xs:element name="GET_GetCustomerAccountsByInstitutionLogin_400" type="schemas:GET_GetCustomerAccountsByInstitutionLogin_400" />
      <xs:element name="GET_GetCustomerAccountsByInstitutionLogin_401" type="schemas:GET_GetCustomerAccountsByInstitutionLogin_401" />
      <xs:element name="GET_GetCustomerAccountsByInstitutionLogin_404" type="schemas:GET_GetCustomerAccountsByInstitutionLogin_404" />
      <xs:element name="POST_RefreshCustomerAccountsByInstitutionLogin_InputMessage" type="schemas:POST_RefreshCustomerAccountsByInstitutionLogin_InputMessage" />
      <xs:element name="POST_RefreshCustomerAccountsByInstitutionLogin_OutputMessage" type="schemas:POST_RefreshCustomerAccountsByInstitutionLogin_OutputMessage" />
      <xs:element name="POST_RefreshCustomerAccountsByInstitutionLogin_400" type="schemas:POST_RefreshCustomerAccountsByInstitutionLogin_400" />
      <xs:element name="POST_RefreshCustomerAccountsByInstitutionLogin_401" type="schemas:POST_RefreshCustomerAccountsByInstitutionLogin_401" />
      <xs:element name="POST_RefreshCustomerAccountsByInstitutionLogin_404" type="schemas:POST_RefreshCustomerAccountsByInstitutionLogin_404" />
      <xs:element name="DELETE_DeleteCustomerAccountsByInstitutionLogin_InputMessage" type="schemas:DELETE_DeleteCustomerAccountsByInstitutionLogin_InputMessage" />
      <xs:element name="DELETE_DeleteCustomerAccountsByInstitutionLogin_OutputMessage" type="schemas:DELETE_DeleteCustomerAccountsByInstitutionLogin_OutputMessage" />
      <xs:element name="DELETE_DeleteCustomerAccountsByInstitutionLogin_400" type="schemas:DELETE_DeleteCustomerAccountsByInstitutionLogin_400" />
      <xs:element name="DELETE_DeleteCustomerAccountsByInstitutionLogin_401" type="schemas:DELETE_DeleteCustomerAccountsByInstitutionLogin_401" />
      <xs:element name="DELETE_DeleteCustomerAccountsByInstitutionLogin_404" type="schemas:DELETE_DeleteCustomerAccountsByInstitutionLogin_404" />
      <xs:element name="GET_GetCustomerAccount_InputMessage" type="schemas:GET_GetCustomerAccount_InputMessage" />
      <xs:element name="GET_GetCustomerAccount_OutputMessage" type="schemas:GET_GetCustomerAccount_OutputMessage" />
      <xs:element name="GET_GetCustomerAccount_400" type="schemas:GET_GetCustomerAccount_400" />
      <xs:element name="GET_GetCustomerAccount_401" type="schemas:GET_GetCustomerAccount_401" />
      <xs:element name="GET_GetCustomerAccount_404" type="schemas:GET_GetCustomerAccount_404" />
      <xs:element name="DELETE_DeleteCustomerAccount_InputMessage" type="schemas:DELETE_DeleteCustomerAccount_InputMessage" />
      <xs:element name="DELETE_DeleteCustomerAccount_OutputMessage" type="schemas:DELETE_DeleteCustomerAccount_OutputMessage" />
      <xs:element name="DELETE_DeleteCustomerAccount_400" type="schemas:DELETE_DeleteCustomerAccount_400" />
      <xs:element name="DELETE_DeleteCustomerAccount_401" type="schemas:DELETE_DeleteCustomerAccount_401" />
      <xs:element name="DELETE_DeleteCustomerAccount_404" type="schemas:DELETE_DeleteCustomerAccount_404" />
      <xs:element name="GET_GetCustomerAccounts_InputMessage" type="schemas:GET_GetCustomerAccounts_InputMessage" />
      <xs:element name="GET_GetCustomerAccounts_OutputMessage" type="schemas:GET_GetCustomerAccounts_OutputMessage" />
      <xs:element name="GET_GetCustomerAccounts_400" type="schemas:GET_GetCustomerAccounts_400" />
      <xs:element name="GET_GetCustomerAccounts_401" type="schemas:GET_GetCustomerAccounts_401" />
      <xs:element name="GET_GetCustomerAccounts_404" type="schemas:GET_GetCustomerAccounts_404" />
      <xs:element name="POST_RefreshCustomerAccounts_InputMessage" type="schemas:POST_RefreshCustomerAccounts_InputMessage" />
      <xs:element name="POST_RefreshCustomerAccounts_OutputMessage" type="schemas:POST_RefreshCustomerAccounts_OutputMessage" />
      <xs:element name="POST_RefreshCustomerAccounts_400" type="schemas:POST_RefreshCustomerAccounts_400" />
      <xs:element name="POST_RefreshCustomerAccounts_401" type="schemas:POST_RefreshCustomerAccounts_401" />
      <xs:element name="POST_RefreshCustomerAccounts_404" type="schemas:POST_RefreshCustomerAccounts_404" />
      <xs:element name="GET_GetCustomerAccountsByInstitution_InputMessage" type="schemas:GET_GetCustomerAccountsByInstitution_InputMessage" />
      <xs:element name="GET_GetCustomerAccountsByInstitution_OutputMessage" type="schemas:GET_GetCustomerAccountsByInstitution_OutputMessage" />
      <xs:element name="GET_GetCustomerAccountsByInstitution_400" type="schemas:GET_GetCustomerAccountsByInstitution_400" />
      <xs:element name="GET_GetCustomerAccountsByInstitution_401" type="schemas:GET_GetCustomerAccountsByInstitution_401" />
      <xs:element name="GET_GetCustomerAccountsByInstitution_404" type="schemas:GET_GetCustomerAccountsByInstitution_404" />
      <xs:element name="POST_GenerateConsumerAttributes_InputMessage" type="schemas:POST_GenerateConsumerAttributes_InputMessage" />
      <xs:element name="POST_GenerateConsumerAttributes_OutputMessage" type="schemas:POST_GenerateConsumerAttributes_OutputMessage" />
      <xs:element name="POST_GenerateConsumerAttributes_400" type="schemas:POST_GenerateConsumerAttributes_400" />
      <xs:element name="POST_GenerateConsumerAttributes_401" type="schemas:POST_GenerateConsumerAttributes_401" />
      <xs:element name="POST_GenerateConsumerAttributes_404" type="schemas:POST_GenerateConsumerAttributes_404" />
      <xs:element name="GET_ListConsumerAttributes_InputMessage" type="schemas:GET_ListConsumerAttributes_InputMessage" />
      <xs:element name="GET_ListConsumerAttributes_OutputMessage" type="schemas:GET_ListConsumerAttributes_OutputMessage" />
      <xs:element name="GET_ListConsumerAttributes_400" type="schemas:GET_ListConsumerAttributes_400" />
      <xs:element name="GET_ListConsumerAttributes_401" type="schemas:GET_ListConsumerAttributes_401" />
      <xs:element name="GET_ListConsumerAttributes_404" type="schemas:GET_ListConsumerAttributes_404" />
      <xs:element name="POST_GenerateFCRAConsumerAttributes_InputMessage" type="schemas:POST_GenerateFCRAConsumerAttributes_InputMessage" />
      <xs:element name="POST_GenerateFCRAConsumerAttributes_OutputMessage" type="schemas:POST_GenerateFCRAConsumerAttributes_OutputMessage" />
      <xs:element name="POST_GenerateFCRAConsumerAttributes_400" type="schemas:POST_GenerateFCRAConsumerAttributes_400" />
      <xs:element name="POST_GenerateFCRAConsumerAttributes_401" type="schemas:POST_GenerateFCRAConsumerAttributes_401" />
      <xs:element name="POST_GenerateFCRAConsumerAttributes_404" type="schemas:POST_GenerateFCRAConsumerAttributes_404" />
      <xs:element name="GET_GetConsumerAttributesByID_InputMessage" type="schemas:GET_GetConsumerAttributesByID_InputMessage" />
      <xs:element name="GET_GetConsumerAttributesByID_OutputMessage" type="schemas:GET_GetConsumerAttributesByID_OutputMessage" />
      <xs:element name="GET_GetConsumerAttributesByID_400" type="schemas:GET_GetConsumerAttributesByID_400" />
      <xs:element name="GET_GetConsumerAttributesByID_401" type="schemas:GET_GetConsumerAttributesByID_401" />
      <xs:element name="GET_GetConsumerAttributesByID_404" type="schemas:GET_GetConsumerAttributesByID_404" />
      <xs:element name="GET_GetFCRAConsumerAttributesByID_InputMessage" type="schemas:GET_GetFCRAConsumerAttributesByID_InputMessage" />
      <xs:element name="GET_GetFCRAConsumerAttributesByID_OutputMessage" type="schemas:GET_GetFCRAConsumerAttributesByID_OutputMessage" />
      <xs:element name="GET_GetFCRAConsumerAttributesByID_400" type="schemas:GET_GetFCRAConsumerAttributesByID_400" />
      <xs:element name="GET_GetFCRAConsumerAttributesByID_401" type="schemas:GET_GetFCRAConsumerAttributesByID_401" />
      <xs:element name="GET_GetFCRAConsumerAttributesByID_404" type="schemas:GET_GetFCRAConsumerAttributesByID_404" />
      <xs:element name="POST_RegisterApp_InputMessage" type="schemas:POST_RegisterApp_InputMessage" />
      <xs:element name="POST_RegisterApp_OutputMessage" type="schemas:POST_RegisterApp_OutputMessage" />
      <xs:element name="POST_RegisterApp_400" type="schemas:POST_RegisterApp_400" />
      <xs:element name="POST_RegisterApp_401" type="schemas:POST_RegisterApp_401" />
      <xs:element name="PUT_ModifyAppRegistration_InputMessage" type="schemas:PUT_ModifyAppRegistration_InputMessage" />
      <xs:element name="PUT_ModifyAppRegistration_OutputMessage" type="schemas:PUT_ModifyAppRegistration_OutputMessage" />
      <xs:element name="PUT_ModifyAppRegistration_400" type="schemas:PUT_ModifyAppRegistration_400" />
      <xs:element name="PUT_ModifyAppRegistration_401" type="schemas:PUT_ModifyAppRegistration_401" />
      <xs:element name="PUT_ModifyAppRegistration_404" type="schemas:PUT_ModifyAppRegistration_404" />
      <xs:element name="GET_GetAppRegistrationStatus_InputMessage" type="schemas:GET_GetAppRegistrationStatus_InputMessage" />
      <xs:element name="GET_GetAppRegistrationStatus_OutputMessage" type="schemas:GET_GetAppRegistrationStatus_OutputMessage" />
      <xs:element name="GET_GetAppRegistrationStatus_400" type="schemas:GET_GetAppRegistrationStatus_400" />
      <xs:element name="GET_GetAppRegistrationStatus_401" type="schemas:GET_GetAppRegistrationStatus_401" />
      <xs:element name="GET_GetAppRegistrationStatus_404" type="schemas:GET_GetAppRegistrationStatus_404" />
      <xs:element name="PUT_SetCustomerAppID_InputMessage" type="schemas:PUT_SetCustomerAppID_InputMessage" />
      <xs:element name="PUT_SetCustomerAppID_OutputMessage" type="schemas:PUT_SetCustomerAppID_OutputMessage" />
      <xs:element name="PUT_SetCustomerAppID_400" type="schemas:PUT_SetCustomerAppID_400" />
      <xs:element name="PUT_SetCustomerAppID_401" type="schemas:PUT_SetCustomerAppID_401" />
      <xs:element name="PUT_SetCustomerAppID_404" type="schemas:PUT_SetCustomerAppID_404" />
      <xs:element name="PUT_MigrateInstitutionLoginAccounts_InputMessage" type="schemas:PUT_MigrateInstitutionLoginAccounts_InputMessage" />
      <xs:element name="PUT_MigrateInstitutionLoginAccounts_OutputMessage" type="schemas:PUT_MigrateInstitutionLoginAccounts_OutputMessage" />
      <xs:element name="PUT_MigrateInstitutionLoginAccounts_400" type="schemas:PUT_MigrateInstitutionLoginAccounts_400" />
      <xs:element name="PUT_MigrateInstitutionLoginAccounts_401" type="schemas:PUT_MigrateInstitutionLoginAccounts_401" />
      <xs:element name="PUT_MigrateInstitutionLoginAccounts_404" type="schemas:PUT_MigrateInstitutionLoginAccounts_404" />
      <xs:element name="GET_GetAssetByCustomerID_InputMessage" type="schemas:GET_GetAssetByCustomerID_InputMessage" />
      <xs:element name="GET_GetAssetByCustomerID_OutputMessage" type="schemas:GET_GetAssetByCustomerID_OutputMessage" />
      <xs:element name="GET_GetAssetByCustomerID_400" type="schemas:GET_GetAssetByCustomerID_400" />
      <xs:element name="GET_GetAssetByCustomerID_401" type="schemas:GET_GetAssetByCustomerID_401" />
      <xs:element name="GET_GetAssetByCustomerID_404" type="schemas:GET_GetAssetByCustomerID_404" />
      <xs:element name="POST_CreateToken_InputMessage" type="schemas:POST_CreateToken_InputMessage" />
      <xs:element name="POST_CreateToken_OutputMessage" type="schemas:POST_CreateToken_OutputMessage" />
      <xs:element name="POST_CreateToken_400" type="schemas:POST_CreateToken_400" />
      <xs:element name="POST_CreateToken_401" type="schemas:POST_CreateToken_401" />
      <xs:element name="PUT_ModifyPartnerSecret_InputMessage" type="schemas:PUT_ModifyPartnerSecret_InputMessage" />
      <xs:element name="PUT_ModifyPartnerSecret_OutputMessage" type="schemas:PUT_ModifyPartnerSecret_OutputMessage" />
      <xs:element name="PUT_ModifyPartnerSecret_400" type="schemas:PUT_ModifyPartnerSecret_400" />
      <xs:element name="PUT_ModifyPartnerSecret_401" type="schemas:PUT_ModifyPartnerSecret_401" />
      <xs:element name="POST_GenerateBalanceAnalytics_InputMessage" type="schemas:POST_GenerateBalanceAnalytics_InputMessage" />
      <xs:element name="POST_GenerateBalanceAnalytics_OutputMessage" type="schemas:POST_GenerateBalanceAnalytics_OutputMessage" />
      <xs:element name="POST_GenerateBalanceAnalytics_400" type="schemas:POST_GenerateBalanceAnalytics_400" />
      <xs:element name="POST_GenerateBalanceAnalytics_401" type="schemas:POST_GenerateBalanceAnalytics_401" />
      <xs:element name="POST_GenerateBalanceAnalytics_403" type="schemas:POST_GenerateBalanceAnalytics_403" />
      <xs:element name="POST_GenerateBalanceAnalytics_404" type="schemas:POST_GenerateBalanceAnalytics_404" />
      <xs:element name="POST_GenerateBalanceAnalytics_409" type="schemas:POST_GenerateBalanceAnalytics_409" />
      <xs:element name="POST_GenerateBalanceAnalyticsFcra_InputMessage" type="schemas:POST_GenerateBalanceAnalyticsFcra_InputMessage" />
      <xs:element name="POST_GenerateBalanceAnalyticsFcra_OutputMessage" type="schemas:POST_GenerateBalanceAnalyticsFcra_OutputMessage" />
      <xs:element name="POST_GenerateBalanceAnalyticsFcra_400" type="schemas:POST_GenerateBalanceAnalyticsFcra_400" />
      <xs:element name="POST_GenerateBalanceAnalyticsFcra_401" type="schemas:POST_GenerateBalanceAnalyticsFcra_401" />
      <xs:element name="POST_GenerateBalanceAnalyticsFcra_403" type="schemas:POST_GenerateBalanceAnalyticsFcra_403" />
      <xs:element name="POST_GenerateBalanceAnalyticsFcra_404" type="schemas:POST_GenerateBalanceAnalyticsFcra_404" />
      <xs:element name="POST_GenerateBalanceAnalyticsFcra_409" type="schemas:POST_GenerateBalanceAnalyticsFcra_409" />
      <xs:element name="GET_GetObbAnalyticsReport_InputMessage" type="schemas:GET_GetObbAnalyticsReport_InputMessage" />
      <xs:element name="GET_GetObbAnalyticsReport_OutputMessage" type="schemas:GET_GetObbAnalyticsReport_OutputMessage" />
      <xs:element name="GET_GetObbAnalyticsReport_404" type="schemas:GET_GetObbAnalyticsReport_404" />
      <xs:element name="GET_GetObbAnalyticsReportFcra_InputMessage" type="schemas:GET_GetObbAnalyticsReportFcra_InputMessage" />
      <xs:element name="GET_GetObbAnalyticsReportFcra_OutputMessage" type="schemas:GET_GetObbAnalyticsReportFcra_OutputMessage" />
      <xs:element name="GET_GetObbAnalyticsReportFcra_404" type="schemas:GET_GetObbAnalyticsReportFcra_404" />
      <xs:element name="GET_GetCustomerAccountStatement_InputMessage" type="schemas:GET_GetCustomerAccountStatement_InputMessage" />
      <xs:element name="GET_GetCustomerAccountStatement_OutputMessage" type="schemas:GET_GetCustomerAccountStatement_OutputMessage" />
      <xs:element name="GET_GetCustomerAccountStatement_400" type="schemas:GET_GetCustomerAccountStatement_400" />
      <xs:element name="GET_GetCustomerAccountStatement_401" type="schemas:GET_GetCustomerAccountStatement_401" />
      <xs:element name="GET_GetCustomerAccountStatement_404" type="schemas:GET_GetCustomerAccountStatement_404" />
      <xs:element name="POST_GenerateStatementReport_InputMessage" type="schemas:POST_GenerateStatementReport_InputMessage" />
      <xs:element name="POST_GenerateStatementReport_OutputMessage" type="schemas:POST_GenerateStatementReport_OutputMessage" />
      <xs:element name="POST_GenerateStatementReport_400" type="schemas:POST_GenerateStatementReport_400" />
      <xs:element name="POST_GenerateStatementReport_401" type="schemas:POST_GenerateStatementReport_401" />
      <xs:element name="POST_GenerateStatementReport_404" type="schemas:POST_GenerateStatementReport_404" />
      <xs:element name="POST_GenerateCashFlowBusinessReport_InputMessage" type="schemas:POST_GenerateCashFlowBusinessReport_InputMessage" />
      <xs:element name="POST_GenerateCashFlowBusinessReport_OutputMessage" type="schemas:POST_GenerateCashFlowBusinessReport_OutputMessage" />
      <xs:element name="POST_GenerateCashFlowBusinessReport_400" type="schemas:POST_GenerateCashFlowBusinessReport_400" />
      <xs:element name="POST_GenerateCashFlowBusinessReport_401" type="schemas:POST_GenerateCashFlowBusinessReport_401" />
      <xs:element name="POST_GenerateCashFlowBusinessReport_404" type="schemas:POST_GenerateCashFlowBusinessReport_404" />
      <xs:element name="POST_GenerateCashFlowPersonalReport_InputMessage" type="schemas:POST_GenerateCashFlowPersonalReport_InputMessage" />
      <xs:element name="POST_GenerateCashFlowPersonalReport_OutputMessage" type="schemas:POST_GenerateCashFlowPersonalReport_OutputMessage" />
      <xs:element name="POST_GenerateCashFlowPersonalReport_400" type="schemas:POST_GenerateCashFlowPersonalReport_400" />
      <xs:element name="POST_GenerateCashFlowPersonalReport_401" type="schemas:POST_GenerateCashFlowPersonalReport_401" />
      <xs:element name="POST_GenerateCashFlowPersonalReport_404" type="schemas:POST_GenerateCashFlowPersonalReport_404" />
      <xs:element name="POST_GenerateCashFlowAnalytics_InputMessage" type="schemas:POST_GenerateCashFlowAnalytics_InputMessage" />
      <xs:element name="POST_GenerateCashFlowAnalytics_OutputMessage" type="schemas:POST_GenerateCashFlowAnalytics_OutputMessage" />
      <xs:element name="POST_GenerateCashFlowAnalytics_400" type="schemas:POST_GenerateCashFlowAnalytics_400" />
      <xs:element name="POST_GenerateCashFlowAnalytics_401" type="schemas:POST_GenerateCashFlowAnalytics_401" />
      <xs:element name="POST_GenerateCashFlowAnalytics_403" type="schemas:POST_GenerateCashFlowAnalytics_403" />
      <xs:element name="POST_GenerateCashFlowAnalytics_404" type="schemas:POST_GenerateCashFlowAnalytics_404" />
      <xs:element name="POST_GenerateCashFlowAnalytics_409" type="schemas:POST_GenerateCashFlowAnalytics_409" />
      <xs:element name="POST_GenerateCashFlowAnalyticsFcra_InputMessage" type="schemas:POST_GenerateCashFlowAnalyticsFcra_InputMessage" />
      <xs:element name="POST_GenerateCashFlowAnalyticsFcra_OutputMessage" type="schemas:POST_GenerateCashFlowAnalyticsFcra_OutputMessage" />
      <xs:element name="POST_GenerateCashFlowAnalyticsFcra_400" type="schemas:POST_GenerateCashFlowAnalyticsFcra_400" />
      <xs:element name="POST_GenerateCashFlowAnalyticsFcra_401" type="schemas:POST_GenerateCashFlowAnalyticsFcra_401" />
      <xs:element name="POST_GenerateCashFlowAnalyticsFcra_403" type="schemas:POST_GenerateCashFlowAnalyticsFcra_403" />
      <xs:element name="POST_GenerateCashFlowAnalyticsFcra_404" type="schemas:POST_GenerateCashFlowAnalyticsFcra_404" />
      <xs:element name="POST_GenerateCashFlowAnalyticsFcra_409" type="schemas:POST_GenerateCashFlowAnalyticsFcra_409" />
      <xs:element name="POST_GenerateConnectUrl_InputMessage" type="schemas:POST_GenerateConnectUrl_InputMessage" />
      <xs:element name="POST_GenerateConnectUrl_OutputMessage" type="schemas:POST_GenerateConnectUrl_OutputMessage" />
      <xs:element name="POST_GenerateConnectUrl_400" type="schemas:POST_GenerateConnectUrl_400" />
      <xs:element name="POST_GenerateConnectUrl_401" type="schemas:POST_GenerateConnectUrl_401" />
      <xs:element name="POST_GenerateLiteConnectUrl_InputMessage" type="schemas:POST_GenerateLiteConnectUrl_InputMessage" />
      <xs:element name="POST_GenerateLiteConnectUrl_OutputMessage" type="schemas:POST_GenerateLiteConnectUrl_OutputMessage" />
      <xs:element name="POST_GenerateLiteConnectUrl_400" type="schemas:POST_GenerateLiteConnectUrl_400" />
      <xs:element name="POST_GenerateLiteConnectUrl_401" type="schemas:POST_GenerateLiteConnectUrl_401" />
      <xs:element name="POST_GenerateFixConnectUrl_InputMessage" type="schemas:POST_GenerateFixConnectUrl_InputMessage" />
      <xs:element name="POST_GenerateFixConnectUrl_OutputMessage" type="schemas:POST_GenerateFixConnectUrl_OutputMessage" />
      <xs:element name="POST_GenerateFixConnectUrl_400" type="schemas:POST_GenerateFixConnectUrl_400" />
      <xs:element name="POST_GenerateFixConnectUrl_401" type="schemas:POST_GenerateFixConnectUrl_401" />
      <xs:element name="POST_GenerateFixConnectUrl_404" type="schemas:POST_GenerateFixConnectUrl_404" />
      <xs:element name="POST_SendConnectEmail_InputMessage" type="schemas:POST_SendConnectEmail_InputMessage" />
      <xs:element name="POST_SendConnectEmail_OutputMessage" type="schemas:POST_SendConnectEmail_OutputMessage" />
      <xs:element name="POST_SendConnectEmail_400" type="schemas:POST_SendConnectEmail_400" />
      <xs:element name="POST_SendConnectEmail_401" type="schemas:POST_SendConnectEmail_401" />
      <xs:element name="POST_GenerateJointBorrowerConnectUrl_InputMessage" type="schemas:POST_GenerateJointBorrowerConnectUrl_InputMessage" />
      <xs:element name="POST_GenerateJointBorrowerConnectUrl_OutputMessage" type="schemas:POST_GenerateJointBorrowerConnectUrl_OutputMessage" />
      <xs:element name="POST_GenerateJointBorrowerConnectUrl_400" type="schemas:POST_GenerateJointBorrowerConnectUrl_400" />
      <xs:element name="POST_GenerateJointBorrowerConnectUrl_401" type="schemas:POST_GenerateJointBorrowerConnectUrl_401" />
      <xs:element name="POST_SendJointBorrowerConnectEmail_InputMessage" type="schemas:POST_SendJointBorrowerConnectEmail_InputMessage" />
      <xs:element name="POST_SendJointBorrowerConnectEmail_OutputMessage" type="schemas:POST_SendJointBorrowerConnectEmail_OutputMessage" />
      <xs:element name="POST_SendJointBorrowerConnectEmail_400" type="schemas:POST_SendJointBorrowerConnectEmail_400" />
      <xs:element name="POST_SendJointBorrowerConnectEmail_401" type="schemas:POST_SendJointBorrowerConnectEmail_401" />
      <xs:element name="POST_CreateConsumer_InputMessage" type="schemas:POST_CreateConsumer_InputMessage" />
      <xs:element name="POST_CreateConsumer_OutputMessage" type="schemas:POST_CreateConsumer_OutputMessage" />
      <xs:element name="POST_CreateConsumer_400" type="schemas:POST_CreateConsumer_400" />
      <xs:element name="POST_CreateConsumer_401" type="schemas:POST_CreateConsumer_401" />
      <xs:element name="POST_CreateConsumer_404" type="schemas:POST_CreateConsumer_404" />
      <xs:element name="POST_CreateConsumer_409" type="schemas:POST_CreateConsumer_409" />
      <xs:element name="GET_GetConsumerForCustomer_InputMessage" type="schemas:GET_GetConsumerForCustomer_InputMessage" />
      <xs:element name="GET_GetConsumerForCustomer_OutputMessage" type="schemas:GET_GetConsumerForCustomer_OutputMessage" />
      <xs:element name="GET_GetConsumerForCustomer_400" type="schemas:GET_GetConsumerForCustomer_400" />
      <xs:element name="GET_GetConsumerForCustomer_401" type="schemas:GET_GetConsumerForCustomer_401" />
      <xs:element name="GET_GetConsumerForCustomer_404" type="schemas:GET_GetConsumerForCustomer_404" />
      <xs:element name="GET_GetConsumer_InputMessage" type="schemas:GET_GetConsumer_InputMessage" />
      <xs:element name="GET_GetConsumer_OutputMessage" type="schemas:GET_GetConsumer_OutputMessage" />
      <xs:element name="GET_GetConsumer_400" type="schemas:GET_GetConsumer_400" />
      <xs:element name="GET_GetConsumer_401" type="schemas:GET_GetConsumer_401" />
      <xs:element name="GET_GetConsumer_404" type="schemas:GET_GetConsumer_404" />
      <xs:element name="PUT_ModifyConsumer_InputMessage" type="schemas:PUT_ModifyConsumer_InputMessage" />
      <xs:element name="PUT_ModifyConsumer_OutputMessage" type="schemas:PUT_ModifyConsumer_OutputMessage" />
      <xs:element name="PUT_ModifyConsumer_400" type="schemas:PUT_ModifyConsumer_400" />
      <xs:element name="PUT_ModifyConsumer_401" type="schemas:PUT_ModifyConsumer_401" />
      <xs:element name="PUT_ModifyConsumer_404" type="schemas:PUT_ModifyConsumer_404" />
      <xs:element name="POST_AddTestingCustomer_InputMessage" type="schemas:POST_AddTestingCustomer_InputMessage" />
      <xs:element name="POST_AddTestingCustomer_OutputMessage" type="schemas:POST_AddTestingCustomer_OutputMessage" />
      <xs:element name="POST_AddTestingCustomer_400" type="schemas:POST_AddTestingCustomer_400" />
      <xs:element name="POST_AddTestingCustomer_401" type="schemas:POST_AddTestingCustomer_401" />
      <xs:element name="POST_AddCustomer_InputMessage" type="schemas:POST_AddCustomer_InputMessage" />
      <xs:element name="POST_AddCustomer_OutputMessage" type="schemas:POST_AddCustomer_OutputMessage" />
      <xs:element name="POST_AddCustomer_400" type="schemas:POST_AddCustomer_400" />
      <xs:element name="POST_AddCustomer_401" type="schemas:POST_AddCustomer_401" />
      <xs:element name="POST_AddCustomer_429" type="schemas:POST_AddCustomer_429" />
      <xs:element name="GET_GetCustomers_InputMessage" type="schemas:GET_GetCustomers_InputMessage" />
      <xs:element name="GET_GetCustomers_OutputMessage" type="schemas:GET_GetCustomers_OutputMessage" />
      <xs:element name="GET_GetCustomers_400" type="schemas:GET_GetCustomers_400" />
      <xs:element name="GET_GetCustomers_401" type="schemas:GET_GetCustomers_401" />
      <xs:element name="GET_GetCustomerWithAppData_InputMessage" type="schemas:GET_GetCustomerWithAppData_InputMessage" />
      <xs:element name="GET_GetCustomerWithAppData_OutputMessage" type="schemas:GET_GetCustomerWithAppData_OutputMessage" />
      <xs:element name="GET_GetCustomerWithAppData_400" type="schemas:GET_GetCustomerWithAppData_400" />
      <xs:element name="GET_GetCustomerWithAppData_401" type="schemas:GET_GetCustomerWithAppData_401" />
      <xs:element name="GET_GetCustomerWithAppData_404" type="schemas:GET_GetCustomerWithAppData_404" />
      <xs:element name="GET_GetCustomer_InputMessage" type="schemas:GET_GetCustomer_InputMessage" />
      <xs:element name="GET_GetCustomer_OutputMessage" type="schemas:GET_GetCustomer_OutputMessage" />
      <xs:element name="GET_GetCustomer_400" type="schemas:GET_GetCustomer_400" />
      <xs:element name="GET_GetCustomer_401" type="schemas:GET_GetCustomer_401" />
      <xs:element name="GET_GetCustomer_404" type="schemas:GET_GetCustomer_404" />
      <xs:element name="PUT_ModifyCustomer_InputMessage" type="schemas:PUT_ModifyCustomer_InputMessage" />
      <xs:element name="PUT_ModifyCustomer_OutputMessage" type="schemas:PUT_ModifyCustomer_OutputMessage" />
      <xs:element name="PUT_ModifyCustomer_400" type="schemas:PUT_ModifyCustomer_400" />
      <xs:element name="PUT_ModifyCustomer_401" type="schemas:PUT_ModifyCustomer_401" />
      <xs:element name="PUT_ModifyCustomer_404" type="schemas:PUT_ModifyCustomer_404" />
      <xs:element name="DELETE_DeleteCustomer_InputMessage" type="schemas:DELETE_DeleteCustomer_InputMessage" />
      <xs:element name="DELETE_DeleteCustomer_OutputMessage" type="schemas:DELETE_DeleteCustomer_OutputMessage" />
      <xs:element name="DELETE_DeleteCustomer_401" type="schemas:DELETE_DeleteCustomer_401" />
      <xs:element name="DELETE_DeleteCustomer_404" type="schemas:DELETE_DeleteCustomer_404" />
      <xs:element name="GET_GetCertifiedInstitutionsWithRSSD_InputMessage" type="schemas:GET_GetCertifiedInstitutionsWithRSSD_InputMessage" />
      <xs:element name="GET_GetCertifiedInstitutionsWithRSSD_OutputMessage" type="schemas:GET_GetCertifiedInstitutionsWithRSSD_OutputMessage" />
      <xs:element name="GET_GetCertifiedInstitutionsWithRSSD_400" type="schemas:GET_GetCertifiedInstitutionsWithRSSD_400" />
      <xs:element name="GET_GetCertifiedInstitutionsWithRSSD_401" type="schemas:GET_GetCertifiedInstitutionsWithRSSD_401" />
      <xs:element name="GET_GetInstitutions_InputMessage" type="schemas:GET_GetInstitutions_InputMessage" />
      <xs:element name="GET_GetInstitutions_OutputMessage" type="schemas:GET_GetInstitutions_OutputMessage" />
      <xs:element name="GET_GetInstitutions_400" type="schemas:GET_GetInstitutions_400" />
      <xs:element name="GET_GetInstitutions_401" type="schemas:GET_GetInstitutions_401" />
      <xs:element name="GET_GetCertifiedInstitutions_InputMessage" type="schemas:GET_GetCertifiedInstitutions_InputMessage" />
      <xs:element name="GET_GetCertifiedInstitutions_OutputMessage" type="schemas:GET_GetCertifiedInstitutions_OutputMessage" />
      <xs:element name="GET_GetCertifiedInstitutions_400" type="schemas:GET_GetCertifiedInstitutions_400" />
      <xs:element name="GET_GetCertifiedInstitutions_401" type="schemas:GET_GetCertifiedInstitutions_401" />
      <xs:element name="GET_GetInstitution_InputMessage" type="schemas:GET_GetInstitution_InputMessage" />
      <xs:element name="GET_GetInstitution_OutputMessage" type="schemas:GET_GetInstitution_OutputMessage" />
      <xs:element name="GET_GetInstitution_400" type="schemas:GET_GetInstitution_400" />
      <xs:element name="GET_GetInstitution_401" type="schemas:GET_GetInstitution_401" />
      <xs:element name="GET_GetInstitution_404" type="schemas:GET_GetInstitution_404" />
      <xs:element name="GET_GetInstitutionBranding_InputMessage" type="schemas:GET_GetInstitutionBranding_InputMessage" />
      <xs:element name="GET_GetInstitutionBranding_OutputMessage" type="schemas:GET_GetInstitutionBranding_OutputMessage" />
      <xs:element name="GET_GetInstitutionBranding_400" type="schemas:GET_GetInstitutionBranding_400" />
      <xs:element name="GET_GetInstitutionBranding_401" type="schemas:GET_GetInstitutionBranding_401" />
      <xs:element name="GET_GetInstitutionBranding_404" type="schemas:GET_GetInstitutionBranding_404" />
      <xs:element name="POST_StoreCustomerPayStatement_InputMessage" type="schemas:POST_StoreCustomerPayStatement_InputMessage" />
      <xs:element name="POST_StoreCustomerPayStatement_OutputMessage" type="schemas:POST_StoreCustomerPayStatement_OutputMessage" />
      <xs:element name="POST_StoreCustomerPayStatement_400" type="schemas:POST_StoreCustomerPayStatement_400" />
      <xs:element name="POST_StoreCustomerPayStatement_401" type="schemas:POST_StoreCustomerPayStatement_401" />
      <xs:element name="POST_StoreCustomerPayStatement_404" type="schemas:POST_StoreCustomerPayStatement_404" />
      <xs:element name="GET_GetAccountOwner_InputMessage" type="schemas:GET_GetAccountOwner_InputMessage" />
      <xs:element name="GET_GetAccountOwner_OutputMessage" type="schemas:GET_GetAccountOwner_OutputMessage" />
      <xs:element name="GET_GetAccountOwner_400" type="schemas:GET_GetAccountOwner_400" />
      <xs:element name="GET_GetAccountOwner_401" type="schemas:GET_GetAccountOwner_401" />
      <xs:element name="GET_GetAccountOwner_404" type="schemas:GET_GetAccountOwner_404" />
      <xs:element name="GET_GetLoanPaymentDetails_InputMessage" type="schemas:GET_GetLoanPaymentDetails_InputMessage" />
      <xs:element name="GET_GetLoanPaymentDetails_OutputMessage" type="schemas:GET_GetLoanPaymentDetails_OutputMessage" />
      <xs:element name="GET_GetLoanPaymentDetails_400" type="schemas:GET_GetLoanPaymentDetails_400" />
      <xs:element name="GET_GetLoanPaymentDetails_401" type="schemas:GET_GetLoanPaymentDetails_401" />
      <xs:element name="GET_GetLoanPaymentDetails_404" type="schemas:GET_GetLoanPaymentDetails_404" />
      <xs:element name="GET_GetAccountACHDetails_InputMessage" type="schemas:GET_GetAccountACHDetails_InputMessage" />
      <xs:element name="GET_GetAccountACHDetails_OutputMessage" type="schemas:GET_GetAccountACHDetails_OutputMessage" />
      <xs:element name="GET_GetAccountACHDetails_400" type="schemas:GET_GetAccountACHDetails_400" />
      <xs:element name="GET_GetAccountACHDetails_401" type="schemas:GET_GetAccountACHDetails_401" />
      <xs:element name="GET_GetAccountACHDetails_404" type="schemas:GET_GetAccountACHDetails_404" />
      <xs:element name="GET_GetAvailableBalanceLive_InputMessage" type="schemas:GET_GetAvailableBalanceLive_InputMessage" />
      <xs:element name="GET_GetAvailableBalanceLive_OutputMessage" type="schemas:GET_GetAvailableBalanceLive_OutputMessage" />
      <xs:element name="GET_GetAvailableBalanceLive_400" type="schemas:GET_GetAvailableBalanceLive_400" />
      <xs:element name="GET_GetAvailableBalanceLive_401" type="schemas:GET_GetAvailableBalanceLive_401" />
      <xs:element name="GET_GetAvailableBalanceLive_404" type="schemas:GET_GetAvailableBalanceLive_404" />
      <xs:element name="GET_GetAvailableBalance_InputMessage" type="schemas:GET_GetAvailableBalance_InputMessage" />
      <xs:element name="GET_GetAvailableBalance_OutputMessage" type="schemas:GET_GetAvailableBalance_OutputMessage" />
      <xs:element name="GET_GetAvailableBalance_400" type="schemas:GET_GetAvailableBalance_400" />
      <xs:element name="GET_GetAvailableBalance_401" type="schemas:GET_GetAvailableBalance_401" />
      <xs:element name="GET_GetAvailableBalance_404" type="schemas:GET_GetAvailableBalance_404" />
      <xs:element name="GET_GetPortfolioByCustomer_InputMessage" type="schemas:GET_GetPortfolioByCustomer_InputMessage" />
      <xs:element name="GET_GetPortfolioByCustomer_OutputMessage" type="schemas:GET_GetPortfolioByCustomer_OutputMessage" />
      <xs:element name="GET_GetPortfolioByCustomer_400" type="schemas:GET_GetPortfolioByCustomer_400" />
      <xs:element name="GET_GetPortfolioByCustomer_401" type="schemas:GET_GetPortfolioByCustomer_401" />
      <xs:element name="GET_GetPortfolioByCustomer_404" type="schemas:GET_GetPortfolioByCustomer_404" />
      <xs:element name="GET_GetPortfolioByConsumer_InputMessage" type="schemas:GET_GetPortfolioByConsumer_InputMessage" />
      <xs:element name="GET_GetPortfolioByConsumer_OutputMessage" type="schemas:GET_GetPortfolioByConsumer_OutputMessage" />
      <xs:element name="GET_GetPortfolioByConsumer_400" type="schemas:GET_GetPortfolioByConsumer_400" />
      <xs:element name="GET_GetPortfolioByConsumer_401" type="schemas:GET_GetPortfolioByConsumer_401" />
      <xs:element name="GET_GetPortfolioByConsumer_404" type="schemas:GET_GetPortfolioByConsumer_404" />
      <xs:element name="GET_GetReportByCustomer_InputMessage" type="schemas:GET_GetReportByCustomer_InputMessage" />
      <xs:element name="GET_GetReportByCustomer_OutputMessage" type="schemas:GET_GetReportByCustomer_OutputMessage" />
      <xs:element name="GET_GetReportByCustomer_400" type="schemas:GET_GetReportByCustomer_400" />
      <xs:element name="GET_GetReportByCustomer_401" type="schemas:GET_GetReportByCustomer_401" />
      <xs:element name="GET_GetReportByCustomer_404" type="schemas:GET_GetReportByCustomer_404" />
      <xs:element name="GET_GetReportByConsumer_InputMessage" type="schemas:GET_GetReportByConsumer_InputMessage" />
      <xs:element name="GET_GetReportByConsumer_OutputMessage" type="schemas:GET_GetReportByConsumer_OutputMessage" />
      <xs:element name="GET_GetReportByConsumer_400" type="schemas:GET_GetReportByConsumer_400" />
      <xs:element name="GET_GetReportByConsumer_401" type="schemas:GET_GetReportByConsumer_401" />
      <xs:element name="GET_GetReportByConsumer_404" type="schemas:GET_GetReportByConsumer_404" />
      <xs:element name="GET_GetReportsByCustomerId_InputMessage" type="schemas:GET_GetReportsByCustomerId_InputMessage" />
      <xs:element name="GET_GetReportsByCustomerId_OutputMessage" type="schemas:GET_GetReportsByCustomerId_OutputMessage" />
      <xs:element name="GET_GetReportsByCustomerId_400" type="schemas:GET_GetReportsByCustomerId_400" />
      <xs:element name="GET_GetReportsByCustomerId_401" type="schemas:GET_GetReportsByCustomerId_401" />
      <xs:element name="GET_GetReportsByCustomerId_404" type="schemas:GET_GetReportsByCustomerId_404" />
      <xs:element name="GET_GetReportsByCustomerId_429" type="schemas:GET_GetReportsByCustomerId_429" />
      <xs:element name="GET_GetReportsByConsumerId_InputMessage" type="schemas:GET_GetReportsByConsumerId_InputMessage" />
      <xs:element name="GET_GetReportsByConsumerId_OutputMessage" type="schemas:GET_GetReportsByConsumerId_OutputMessage" />
      <xs:element name="GET_GetReportsByConsumerId_400" type="schemas:GET_GetReportsByConsumerId_400" />
      <xs:element name="GET_GetReportsByConsumerId_401" type="schemas:GET_GetReportsByConsumerId_401" />
      <xs:element name="GET_GetReportsByConsumerId_404" type="schemas:GET_GetReportsByConsumerId_404" />
      <xs:element name="GET_GetReportsByConsumerId_429" type="schemas:GET_GetReportsByConsumerId_429" />
      <xs:element name="POST_LoadHistoricTransactionsForCustomerAccount_InputMessage" type="schemas:POST_LoadHistoricTransactionsForCustomerAccount_InputMessage" />
      <xs:element name="POST_LoadHistoricTransactionsForCustomerAccount_OutputMessage" type="schemas:POST_LoadHistoricTransactionsForCustomerAccount_OutputMessage" />
      <xs:element name="POST_LoadHistoricTransactionsForCustomerAccount_400" type="schemas:POST_LoadHistoricTransactionsForCustomerAccount_400" />
      <xs:element name="POST_LoadHistoricTransactionsForCustomerAccount_401" type="schemas:POST_LoadHistoricTransactionsForCustomerAccount_401" />
      <xs:element name="POST_LoadHistoricTransactionsForCustomerAccount_404" type="schemas:POST_LoadHistoricTransactionsForCustomerAccount_404" />
      <xs:element name="GET_GetAllCustomerTransactions_InputMessage" type="schemas:GET_GetAllCustomerTransactions_InputMessage" />
      <xs:element name="GET_GetAllCustomerTransactions_OutputMessage" type="schemas:GET_GetAllCustomerTransactions_OutputMessage" />
      <xs:element name="GET_GetAllCustomerTransactions_400" type="schemas:GET_GetAllCustomerTransactions_400" />
      <xs:element name="GET_GetAllCustomerTransactions_401" type="schemas:GET_GetAllCustomerTransactions_401" />
      <xs:element name="GET_GetAllCustomerTransactions_404" type="schemas:GET_GetAllCustomerTransactions_404" />
      <xs:element name="GET_GetCustomerTransaction_InputMessage" type="schemas:GET_GetCustomerTransaction_InputMessage" />
      <xs:element name="GET_GetCustomerTransaction_OutputMessage" type="schemas:GET_GetCustomerTransaction_OutputMessage" />
      <xs:element name="GET_GetCustomerTransaction_400" type="schemas:GET_GetCustomerTransaction_400" />
      <xs:element name="GET_GetCustomerTransaction_401" type="schemas:GET_GetCustomerTransaction_401" />
      <xs:element name="GET_GetCustomerTransaction_404" type="schemas:GET_GetCustomerTransaction_404" />
      <xs:element name="GET_GetCustomerAccountTransactions_InputMessage" type="schemas:GET_GetCustomerAccountTransactions_InputMessage" />
      <xs:element name="GET_GetCustomerAccountTransactions_OutputMessage" type="schemas:GET_GetCustomerAccountTransactions_OutputMessage" />
      <xs:element name="GET_GetCustomerAccountTransactions_400" type="schemas:GET_GetCustomerAccountTransactions_400" />
      <xs:element name="GET_GetCustomerAccountTransactions_401" type="schemas:GET_GetCustomerAccountTransactions_401" />
      <xs:element name="GET_GetCustomerAccountTransactions_404" type="schemas:GET_GetCustomerAccountTransactions_404" />
      <xs:element name="POST_GenerateTransactionsReport_InputMessage" type="schemas:POST_GenerateTransactionsReport_InputMessage" />
      <xs:element name="POST_GenerateTransactionsReport_OutputMessage" type="schemas:POST_GenerateTransactionsReport_OutputMessage" />
      <xs:element name="POST_GenerateTransactionsReport_400" type="schemas:POST_GenerateTransactionsReport_400" />
      <xs:element name="POST_GenerateTransactionsReport_401" type="schemas:POST_GenerateTransactionsReport_401" />
      <xs:element name="POST_GenerateTransactionsReport_404" type="schemas:POST_GenerateTransactionsReport_404" />
      <xs:element name="POST_SubscribeToTxPushNotifications_InputMessage" type="schemas:POST_SubscribeToTxPushNotifications_InputMessage" />
      <xs:element name="POST_SubscribeToTxPushNotifications_OutputMessage" type="schemas:POST_SubscribeToTxPushNotifications_OutputMessage" />
      <xs:element name="POST_SubscribeToTxPushNotifications_400" type="schemas:POST_SubscribeToTxPushNotifications_400" />
      <xs:element name="POST_SubscribeToTxPushNotifications_401" type="schemas:POST_SubscribeToTxPushNotifications_401" />
      <xs:element name="POST_SubscribeToTxPushNotifications_404" type="schemas:POST_SubscribeToTxPushNotifications_404" />
      <xs:element name="DELETE_DisableTxPushNotifications_InputMessage" type="schemas:DELETE_DisableTxPushNotifications_InputMessage" />
      <xs:element name="DELETE_DisableTxPushNotifications_OutputMessage" type="schemas:DELETE_DisableTxPushNotifications_OutputMessage" />
      <xs:element name="DELETE_DisableTxPushNotifications_400" type="schemas:DELETE_DisableTxPushNotifications_400" />
      <xs:element name="DELETE_DisableTxPushNotifications_401" type="schemas:DELETE_DisableTxPushNotifications_401" />
      <xs:element name="DELETE_DisableTxPushNotifications_404" type="schemas:DELETE_DisableTxPushNotifications_404" />
      <xs:element name="POST_CreateTxPushTestTransaction_InputMessage" type="schemas:POST_CreateTxPushTestTransaction_InputMessage" />
      <xs:element name="POST_CreateTxPushTestTransaction_OutputMessage" type="schemas:POST_CreateTxPushTestTransaction_OutputMessage" />
      <xs:element name="POST_CreateTxPushTestTransaction_400" type="schemas:POST_CreateTxPushTestTransaction_400" />
      <xs:element name="POST_CreateTxPushTestTransaction_401" type="schemas:POST_CreateTxPushTestTransaction_401" />
      <xs:element name="POST_CreateTxPushTestTransaction_404" type="schemas:POST_CreateTxPushTestTransaction_404" />
      <xs:element name="DELETE_DeleteTxPushSubscription_InputMessage" type="schemas:DELETE_DeleteTxPushSubscription_InputMessage" />
      <xs:element name="DELETE_DeleteTxPushSubscription_OutputMessage" type="schemas:DELETE_DeleteTxPushSubscription_OutputMessage" />
      <xs:element name="DELETE_DeleteTxPushSubscription_400" type="schemas:DELETE_DeleteTxPushSubscription_400" />
      <xs:element name="DELETE_DeleteTxPushSubscription_401" type="schemas:DELETE_DeleteTxPushSubscription_401" />
      <xs:element name="DELETE_DeleteTxPushSubscription_404" type="schemas:DELETE_DeleteTxPushSubscription_404" />
      <xs:element name="POST_GenerateVOAReport_InputMessage" type="schemas:POST_GenerateVOAReport_InputMessage" />
      <xs:element name="POST_GenerateVOAReport_OutputMessage" type="schemas:POST_GenerateVOAReport_OutputMessage" />
      <xs:element name="POST_GenerateVOAReport_400" type="schemas:POST_GenerateVOAReport_400" />
      <xs:element name="POST_GenerateVOAReport_401" type="schemas:POST_GenerateVOAReport_401" />
      <xs:element name="POST_GenerateVOAReport_404" type="schemas:POST_GenerateVOAReport_404" />
      <xs:element name="POST_GenerateVOAWithIncomeReport_InputMessage" type="schemas:POST_GenerateVOAWithIncomeReport_InputMessage" />
      <xs:element name="POST_GenerateVOAWithIncomeReport_OutputMessage" type="schemas:POST_GenerateVOAWithIncomeReport_OutputMessage" />
      <xs:element name="POST_GenerateVOAWithIncomeReport_400" type="schemas:POST_GenerateVOAWithIncomeReport_400" />
      <xs:element name="POST_GenerateVOAWithIncomeReport_401" type="schemas:POST_GenerateVOAWithIncomeReport_401" />
      <xs:element name="POST_GenerateVOAWithIncomeReport_404" type="schemas:POST_GenerateVOAWithIncomeReport_404" />
      <xs:element name="POST_GeneratePrequalificationCRAReport_InputMessage" type="schemas:POST_GeneratePrequalificationCRAReport_InputMessage" />
      <xs:element name="POST_GeneratePrequalificationCRAReport_OutputMessage" type="schemas:POST_GeneratePrequalificationCRAReport_OutputMessage" />
      <xs:element name="POST_GeneratePrequalificationCRAReport_400" type="schemas:POST_GeneratePrequalificationCRAReport_400" />
      <xs:element name="POST_GeneratePrequalificationCRAReport_401" type="schemas:POST_GeneratePrequalificationCRAReport_401" />
      <xs:element name="POST_GeneratePrequalificationCRAReport_404" type="schemas:POST_GeneratePrequalificationCRAReport_404" />
      <xs:element name="POST_GeneratePrequalificationNonCRAReport_InputMessage" type="schemas:POST_GeneratePrequalificationNonCRAReport_InputMessage" />
      <xs:element name="POST_GeneratePrequalificationNonCRAReport_OutputMessage" type="schemas:POST_GeneratePrequalificationNonCRAReport_OutputMessage" />
      <xs:element name="POST_GeneratePrequalificationNonCRAReport_400" type="schemas:POST_GeneratePrequalificationNonCRAReport_400" />
      <xs:element name="POST_GeneratePrequalificationNonCRAReport_401" type="schemas:POST_GeneratePrequalificationNonCRAReport_401" />
      <xs:element name="POST_GeneratePrequalificationNonCRAReport_404" type="schemas:POST_GeneratePrequalificationNonCRAReport_404" />
      <xs:element name="POST_GenerateVOIReport_InputMessage" type="schemas:POST_GenerateVOIReport_InputMessage" />
      <xs:element name="POST_GenerateVOIReport_OutputMessage" type="schemas:POST_GenerateVOIReport_OutputMessage" />
      <xs:element name="POST_GenerateVOIReport_400" type="schemas:POST_GenerateVOIReport_400" />
      <xs:element name="POST_GenerateVOIReport_401" type="schemas:POST_GenerateVOIReport_401" />
      <xs:element name="POST_GenerateVOIReport_404" type="schemas:POST_GenerateVOIReport_404" />
      <xs:element name="POST_GenerateVOEPayrollReport_InputMessage" type="schemas:POST_GenerateVOEPayrollReport_InputMessage" />
      <xs:element name="POST_GenerateVOEPayrollReport_OutputMessage" type="schemas:POST_GenerateVOEPayrollReport_OutputMessage" />
      <xs:element name="POST_GenerateVOEPayrollReport_400" type="schemas:POST_GenerateVOEPayrollReport_400" />
      <xs:element name="POST_GenerateVOEPayrollReport_401" type="schemas:POST_GenerateVOEPayrollReport_401" />
      <xs:element name="POST_GenerateVOEPayrollReport_404" type="schemas:POST_GenerateVOEPayrollReport_404" />
      <xs:element name="POST_GenerateVOETransactionsReport_InputMessage" type="schemas:POST_GenerateVOETransactionsReport_InputMessage" />
      <xs:element name="POST_GenerateVOETransactionsReport_OutputMessage" type="schemas:POST_GenerateVOETransactionsReport_OutputMessage" />
      <xs:element name="POST_GenerateVOETransactionsReport_400" type="schemas:POST_GenerateVOETransactionsReport_400" />
      <xs:element name="POST_GenerateVOETransactionsReport_401" type="schemas:POST_GenerateVOETransactionsReport_401" />
      <xs:element name="POST_GenerateVOETransactionsReport_404" type="schemas:POST_GenerateVOETransactionsReport_404" />
      <xs:element name="POST_GeneratePayStatementReport_InputMessage" type="schemas:POST_GeneratePayStatementReport_InputMessage" />
      <xs:element name="POST_GeneratePayStatementReport_OutputMessage" type="schemas:POST_GeneratePayStatementReport_OutputMessage" />
      <xs:element name="POST_GeneratePayStatementReport_400" type="schemas:POST_GeneratePayStatementReport_400" />
      <xs:element name="POST_GeneratePayStatementReport_401" type="schemas:POST_GeneratePayStatementReport_401" />
      <xs:element name="POST_GeneratePayStatementReport_404" type="schemas:POST_GeneratePayStatementReport_404" />
      <xs:element name="POST_GenerateVOIEPaystubWithTXVerifyReport_InputMessage" type="schemas:POST_GenerateVOIEPaystubWithTXVerifyReport_InputMessage" />
      <xs:element name="POST_GenerateVOIEPaystubWithTXVerifyReport_OutputMessage" type="schemas:POST_GenerateVOIEPaystubWithTXVerifyReport_OutputMessage" />
      <xs:element name="POST_GenerateVOIEPaystubWithTXVerifyReport_400" type="schemas:POST_GenerateVOIEPaystubWithTXVerifyReport_400" />
      <xs:element name="POST_GenerateVOIEPaystubWithTXVerifyReport_401" type="schemas:POST_GenerateVOIEPaystubWithTXVerifyReport_401" />
      <xs:element name="POST_GenerateVOIEPaystubWithTXVerifyReport_404" type="schemas:POST_GenerateVOIEPaystubWithTXVerifyReport_404" />
      <xs:element name="POST_GenerateVOIEPaystubReport_InputMessage" type="schemas:POST_GenerateVOIEPaystubReport_InputMessage" />
      <xs:element name="POST_GenerateVOIEPaystubReport_OutputMessage" type="schemas:POST_GenerateVOIEPaystubReport_OutputMessage" />
      <xs:element name="POST_GenerateVOIEPaystubReport_400" type="schemas:POST_GenerateVOIEPaystubReport_400" />
      <xs:element name="POST_GenerateVOIEPaystubReport_401" type="schemas:POST_GenerateVOIEPaystubReport_401" />
      <xs:element name="POST_GenerateVOIEPaystubReport_404" type="schemas:POST_GenerateVOIEPaystubReport_404" />
      <xs:element name="POST_RefreshVOIEPayrollReport_InputMessage" type="schemas:POST_RefreshVOIEPayrollReport_InputMessage" />
      <xs:element name="POST_RefreshVOIEPayrollReport_OutputMessage" type="schemas:POST_RefreshVOIEPayrollReport_OutputMessage" />
      <xs:element name="POST_RefreshVOIEPayrollReport_400" type="schemas:POST_RefreshVOIEPayrollReport_400" />
      <xs:element name="POST_RefreshVOIEPayrollReport_401" type="schemas:POST_RefreshVOIEPayrollReport_401" />
      <xs:element name="POST_RefreshVOIEPayrollReport_404" type="schemas:POST_RefreshVOIEPayrollReport_404" />
      <xs:complexType name="ErrorMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="code">
            <xs:annotation>
              <xs:documentation>An error code (can be returned as a number or a string). Useful links: [API Errors](https://docs.finicity.com/api-errors/), [Aggregation Status Codes](https://docs.finicity.com/aggregation-status-codes/).</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>A status code</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>A title for the error</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="level" type="xs:string">
            <xs:annotation>
              <xs:documentation>An error level</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="message" type="xs:string">
            <xs:annotation>
              <xs:documentation>An error message</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="user_message" type="xs:string">
            <xs:annotation>
              <xs:documentation>Some more details about the error</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="assetId" type="xs:string">
            <xs:annotation>
              <xs:documentation>An asset ID. Generated by Connect or by using the Store Customer Pay Statement API.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="accountId" type="xs:string">
            <xs:annotation>
              <xs:documentation>An account ID</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PartnerCredentials">
        <xs:sequence>
          <xs:element minOccurs="1" name="partnerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Your Partner ID displayed in the [Developer Dashboard](https://developer.finicity.com/admin)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="partnerSecret" type="xs:string">
            <xs:annotation>
              <xs:documentation>Your Partner Secret displayed in the [Developer Dashboard](https://developer.finicity.com/admin)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PartnerCredentialsWithNewSecret">
        <xs:sequence>
          <xs:element minOccurs="1" name="partnerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Your Partner ID displayed in the [Developer Dashboard](https://developer.finicity.com/admin)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="partnerSecret" type="xs:string">
            <xs:annotation>
              <xs:documentation>Your Partner Secret displayed in the [Developer Dashboard](https://developer.finicity.com/admin)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="newPartnerSecret" type="xs:string">
            <xs:annotation>
              <xs:documentation>A new value for the Partner Secret</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AccessToken">
        <xs:annotation>
          <xs:documentation>A temporary access token to be passed in the `Finicity-App-Token` HTTP header of all subsequent API requests</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="token" type="xs:string">
            <xs:annotation>
              <xs:documentation>The access token value</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ConnectParameters">
        <xs:sequence>
          <xs:element minOccurs="0" name="language" type="xs:string">
            <xs:annotation>
              <xs:documentation>Generate a translated Connect URL link. 

Supported languages: 
* English (default)
* Spanish (United States): `es`
* French (Canada): `fr` or `fr-CA`</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="partnerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Your Partner ID displayed in the [Developer Dashboard](https://developer.finicity.com/admin)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="consumerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A consumer ID. See Create Consumer API for how to create a consumer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="redirectUri" type="xs:string">
            <xs:annotation>
              <xs:documentation>The URL that customers will be redirected to after completing Finicity Connect. Required unless Connect is embedded inside our application (iframe).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="webhook" type="xs:string">
            <xs:annotation>
              <xs:documentation>The publicly available URL you want to be notified with events as the user progresses through the application. See [Connect Webhook Event](https://docs.finicity.com/connect-and-mvs-webhooks/) for event details.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="application/json" name="webhookContentType" type="xs:string">
            <xs:annotation>
              <xs:documentation>The content type the webhook events will be sent in. Supported types: "application/json" and "application/xml".</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="webhookData">
            <xs:annotation>
              <xs:documentation>Allows additional identifiable information to be inserted into the payload of connect webhook events. See: [Custom Webhooks](https://docs.finicity.com/custom-webhooks/).</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="webhookHeaders">
            <xs:annotation>
              <xs:documentation>Allows additional identifiable information to be included as headers of connect webhook event. See: [Custom Webhooks](https://docs.finicity.com/custom-webhooks/).</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="optionalConsumerInfo" type="schemas:ConsumerInfo">
            <xs:annotation>
              <xs:documentation>The SSN and date of birth of a consumer</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="singleUseUrl" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>"true": The URL link expires after a Connect session successfully completes.

Note: when the `singleUseUrl` and the `experience` parameters are passed in the same call, the `singleUseUrl` value overrides the `singleUseUrl` value configured in the `experience` parameter.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="experience" type="xs:string">
            <xs:annotation>
              <xs:documentation>The `experience` field allows you to customize:
* Brand: color and logo
* Icon: displayed on the "Share your data" page 
* Popular institutions: displayed on the Bank Search page 
* Report: the credit decisioning report to send when Connect completes. 
* MVS modules: financial, payroll, paystub

Note: the Finicity sales engineers (SE) help you set up a default experience for your company when you migrate to Connect 2.0. For each additional experience you create thereafter, they'll give you a unique ID. See [Generate 2.0 Connect URL APIs](https://docs.finicity.com/migrate-to-connect-web-sdk-2-0/#migrate-connect-web-sdk-1).

Experience values options: 
* "default": your default experience (must be defined) 
* GUID: the code for a different experience
* Not defined: If you don't pass the experience parameter, then Connect's out of the box default experience (add accounts but no branding) is used, and the MVS modules will not run.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="institutionSettings">
            <xs:annotation>
              <xs:documentation>Advanced options for configuration of which institutions to display in. See [Institution Settings](https://docs.finicity.com/connect-institution-settings/).</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="fromDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>The `fromDate` parameter is used when experiences are associated with a credit decisioning report and any other reports with transaction data. The value is in epoch time and must be 10 digits. Example: 1494449017. If it's greater than 10 digits, then the `fromDate` is set to the credit decisioning report's default `fromDate`.

For an experience that generates multiple reports, the `fromDate` gets passed to the reports that support it.

However, Connect doesn't pass this parameter to the following reports:
* Pay Statement Extraction Report 
* VOIE - Paystub (with TXVerify) Report 
* Statement Report 
* Verification of Income Report 
* VOIE - Payroll Report 

Note: this field isn't used if you're only collecting transaction data without a report.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="reportCustomFields" type="schemas:ReportCustomField">
            <xs:annotation>
              <xs:documentation>The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.

Designate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is "true" or "false".
* "true": (default) display the custom field in the PDF report
* "false": don't display the custom field in the PDF report

For an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.

All custom fields display in the Reseller Billing API.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LiteConnectParameters">
        <xs:sequence>
          <xs:element minOccurs="0" name="language" type="xs:string">
            <xs:annotation>
              <xs:documentation>Generate a translated Connect URL link. 

Supported languages: 
* English (default)
* Spanish (United States): `es`
* French (Canada): `fr` or `fr-CA`</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="partnerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Your Partner ID displayed in the [Developer Dashboard](https://developer.finicity.com/admin)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="institutionId" type="xs:long">
            <xs:annotation>
              <xs:documentation>The ID of a financial institution, represented as a number</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="redirectUri" type="xs:string">
            <xs:annotation>
              <xs:documentation>The URL that customers will be redirected to after completing Finicity Connect. Required unless Connect is embedded inside our application (iframe).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="webhook" type="xs:string">
            <xs:annotation>
              <xs:documentation>The publicly available URL you want to be notified with events as the user progresses through the application. See [Connect Webhook Event](https://docs.finicity.com/connect-and-mvs-webhooks/) for event details.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="application/json" name="webhookContentType" type="xs:string">
            <xs:annotation>
              <xs:documentation>The content type the webhook events will be sent in. Supported types: "application/json" and "application/xml".</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="webhookData">
            <xs:annotation>
              <xs:documentation>Allows additional identifiable information to be inserted into the payload of connect webhook events. See: [Custom Webhooks](https://docs.finicity.com/custom-webhooks/).</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="webhookHeaders">
            <xs:annotation>
              <xs:documentation>Allows additional identifiable information to be included as headers of connect webhook event. See: [Custom Webhooks](https://docs.finicity.com/custom-webhooks/).</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="experience" type="xs:string">
            <xs:annotation>
              <xs:documentation>The `experience` field allows you to customize:
* Brand: color and logo
* Icon: displayed on the "Share your data" page 
* Popular institutions: displayed on the Bank Search page 
* Report: the credit decisioning report to send when Connect completes. 
* MVS modules: financial, payroll, paystub

Note: the Finicity sales engineers (SE) help you set up a default experience for your company when you migrate to Connect 2.0. For each additional experience you create thereafter, they'll give you a unique ID. See [Generate 2.0 Connect URL APIs](https://docs.finicity.com/migrate-to-connect-web-sdk-2-0/#migrate-connect-web-sdk-1).

Experience values options: 
* "default": your default experience (must be defined) 
* GUID: the code for a different experience
* Not defined: If you don't pass the experience parameter, then Connect's out of the box default experience (add accounts but no branding) is used, and the MVS modules will not run.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="singleUseUrl" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>"true": The URL link expires after a Connect session successfully completes.

Note: when the `singleUseUrl` and the `experience` parameters are passed in the same call, the `singleUseUrl` value overrides the `singleUseUrl` value configured in the `experience` parameter.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FixConnectParameters">
        <xs:sequence>
          <xs:element minOccurs="0" name="language" type="xs:string">
            <xs:annotation>
              <xs:documentation>Generate a translated Connect URL link. 

Supported languages: 
* English (default)
* Spanish (United States): `es`
* French (Canada): `fr` or `fr-CA`</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="partnerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Your Partner ID displayed in the [Developer Dashboard](https://developer.finicity.com/admin)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="institutionLoginId" type="xs:string">
            <xs:annotation>
              <xs:documentation>An institution login ID (from the account record)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="redirectUri" type="xs:string">
            <xs:annotation>
              <xs:documentation>The URL that customers will be redirected to after completing Finicity Connect. Required unless Connect is embedded inside our application (iframe).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="webhook" type="xs:string">
            <xs:annotation>
              <xs:documentation>The publicly available URL you want to be notified with events as the user progresses through the application. See [Connect Webhook Event](https://docs.finicity.com/connect-and-mvs-webhooks/) for event details.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="application/json" name="webhookContentType" type="xs:string">
            <xs:annotation>
              <xs:documentation>The content type the webhook events will be sent in. Supported types: "application/json" and "application/xml".</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="webhookData">
            <xs:annotation>
              <xs:documentation>Allows additional identifiable information to be inserted into the payload of connect webhook events. See: [Custom Webhooks](https://docs.finicity.com/custom-webhooks/).</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="webhookHeaders">
            <xs:annotation>
              <xs:documentation>Allows additional identifiable information to be included as headers of connect webhook event. See: [Custom Webhooks](https://docs.finicity.com/custom-webhooks/).</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="experience" type="xs:string">
            <xs:annotation>
              <xs:documentation>The `experience` field allows you to customize:
* Brand: color and logo
* Icon: displayed on the "Share your data" page 
* Popular institutions: displayed on the Bank Search page 
* Report: the credit decisioning report to send when Connect completes. 
* MVS modules: financial, payroll, paystub

Note: the Finicity sales engineers (SE) help you set up a default experience for your company when you migrate to Connect 2.0. For each additional experience you create thereafter, they'll give you a unique ID. See [Generate 2.0 Connect URL APIs](https://docs.finicity.com/migrate-to-connect-web-sdk-2-0/#migrate-connect-web-sdk-1).

Experience values options: 
* "default": your default experience (must be defined) 
* GUID: the code for a different experience
* Not defined: If you don't pass the experience parameter, then Connect's out of the box default experience (add accounts but no branding) is used, and the MVS modules will not run.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="singleUseUrl" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>"true": The URL link expires after a Connect session successfully completes.

Note: when the `singleUseUrl` and the `experience` parameters are passed in the same call, the `singleUseUrl` value overrides the `singleUseUrl` value configured in the `experience` parameter.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ConnectEmailParameters">
        <xs:sequence>
          <xs:element minOccurs="0" name="language" type="xs:string">
            <xs:annotation>
              <xs:documentation>Generate a translated Connect URL link. 

Supported languages: 
* English (default)
* Spanish (United States): `es`
* French (Canada): `fr` or `fr-CA`</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="partnerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Your Partner ID displayed in the [Developer Dashboard](https://developer.finicity.com/admin)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="consumerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A consumer ID. See Create Consumer API for how to create a consumer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="redirectUri" type="xs:string">
            <xs:annotation>
              <xs:documentation>The URL that customers will be redirected to after completing Finicity Connect. Required unless Connect is embedded inside our application (iframe).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="webhook" type="xs:string">
            <xs:annotation>
              <xs:documentation>The publicly available URL you want to be notified with events as the user progresses through the application. See [Connect Webhook Event](https://docs.finicity.com/connect-and-mvs-webhooks/) for event details.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="application/json" name="webhookContentType" type="xs:string">
            <xs:annotation>
              <xs:documentation>The content type the webhook events will be sent in. Supported types: "application/json" and "application/xml".</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="webhookData">
            <xs:annotation>
              <xs:documentation>Allows additional identifiable information to be inserted into the payload of connect webhook events. See: [Custom Webhooks](https://docs.finicity.com/custom-webhooks/).</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="webhookHeaders">
            <xs:annotation>
              <xs:documentation>Allows additional identifiable information to be included as headers of connect webhook event. See: [Custom Webhooks](https://docs.finicity.com/custom-webhooks/).</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="institutionSettings">
            <xs:annotation>
              <xs:documentation>Advanced options for configuration of which institutions to display in. See [Institution Settings](https://docs.finicity.com/connect-institution-settings/).</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="1" name="email" type="schemas:EmailOptions">
            <xs:annotation>
              <xs:documentation>Configuration for the Connect email's sent to customers</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="experience" type="xs:string">
            <xs:annotation>
              <xs:documentation>The `experience` field allows you to customize:
* Brand: color and logo
* Icon: displayed on the "Share your data" page 
* Popular institutions: displayed on the Bank Search page 
* Report: the credit decisioning report to send when Connect completes. 
* MVS modules: financial, payroll, paystub

Note: the Finicity sales engineers (SE) help you set up a default experience for your company when you migrate to Connect 2.0. For each additional experience you create thereafter, they'll give you a unique ID. See [Generate 2.0 Connect URL APIs](https://docs.finicity.com/migrate-to-connect-web-sdk-2-0/#migrate-connect-web-sdk-1).

Experience values options: 
* "default": your default experience (must be defined) 
* GUID: the code for a different experience
* Not defined: If you don't pass the experience parameter, then Connect's out of the box default experience (add accounts but no branding) is used, and the MVS modules will not run.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="singleUseUrl" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>"true": The URL link expires after a Connect session successfully completes.

Note: when the `singleUseUrl` and the `experience` parameters are passed in the same call, the `singleUseUrl` value overrides the `singleUseUrl` value configured in the `experience` parameter.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="fromDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>The `fromDate` parameter is used when experiences are associated with a credit decisioning report and any other reports with transaction data. The value is in epoch time and must be 10 digits. Example: 1494449017. If it's greater than 10 digits, then the `fromDate` is set to the credit decisioning report's default `fromDate`.

For an experience that generates multiple reports, the `fromDate` gets passed to the reports that support it.

However, Connect doesn't pass this parameter to the following reports:
* Pay Statement Extraction Report 
* VOIE - Paystub (with TXVerify) Report 
* Statement Report 
* Verification of Income Report 
* VOIE - Payroll Report 

Note: this field isn't used if you're only collecting transaction data without a report.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="reportCustomFields" type="schemas:ReportCustomField">
            <xs:annotation>
              <xs:documentation>The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.

Designate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is "true" or "false".
* "true": (default) display the custom field in the PDF report
* "false": don't display the custom field in the PDF report

For an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.

All custom fields display in the Reseller Billing API.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="optionalConsumerInfo" type="schemas:ConsumerInfo">
            <xs:annotation>
              <xs:documentation>The SSN and date of birth of a consumer</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ConnectJointBorrowerParameters">
        <xs:sequence>
          <xs:element minOccurs="0" name="language" type="xs:string">
            <xs:annotation>
              <xs:documentation>Generate a translated Connect URL link. 

Supported languages: 
* English (default)
* Spanish (United States): `es`
* French (Canada): `fr` or `fr-CA`</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="partnerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Your Partner ID displayed in the [Developer Dashboard](https://developer.finicity.com/admin)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="borrowers" type="schemas:Borrower">
            <xs:annotation>
              <xs:documentation>(MVS) Array of borrowers to pass the primary and joint borrower's customer and consumer IDs</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="redirectUri" type="xs:string">
            <xs:annotation>
              <xs:documentation>The URL that customers will be redirected to after completing Finicity Connect. Required unless Connect is embedded inside our application (iframe).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="webhook" type="xs:string">
            <xs:annotation>
              <xs:documentation>The publicly available URL you want to be notified with events as the user progresses through the application. See [Connect Webhook Event](https://docs.finicity.com/connect-and-mvs-webhooks/) for event details.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="application/json" name="webhookContentType" type="xs:string">
            <xs:annotation>
              <xs:documentation>The content type the webhook events will be sent in. Supported types: "application/json" and "application/xml".</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="webhookData">
            <xs:annotation>
              <xs:documentation>Allows additional identifiable information to be inserted into the payload of connect webhook events. See: [Custom Webhooks](https://docs.finicity.com/custom-webhooks/).</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="webhookHeaders">
            <xs:annotation>
              <xs:documentation>Allows additional identifiable information to be included as headers of connect webhook event. See: [Custom Webhooks](https://docs.finicity.com/custom-webhooks/).</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="institutionSettings">
            <xs:annotation>
              <xs:documentation>Advanced options for configuration of which institutions to display in. See [Institution Settings](https://docs.finicity.com/connect-institution-settings/).</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="experience" type="xs:string">
            <xs:annotation>
              <xs:documentation>The `experience` field allows you to customize:
* Brand: color and logo
* Icon: displayed on the "Share your data" page 
* Popular institutions: displayed on the Bank Search page 
* Report: the credit decisioning report to send when Connect completes. 
* MVS modules: financial, payroll, paystub

Note: the Finicity sales engineers (SE) help you set up a default experience for your company when you migrate to Connect 2.0. For each additional experience you create thereafter, they'll give you a unique ID. See [Generate 2.0 Connect URL APIs](https://docs.finicity.com/migrate-to-connect-web-sdk-2-0/#migrate-connect-web-sdk-1).

Experience values options: 
* "default": your default experience (must be defined) 
* GUID: the code for a different experience
* Not defined: If you don't pass the experience parameter, then Connect's out of the box default experience (add accounts but no branding) is used, and the MVS modules will not run.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="fromDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>The `fromDate` parameter is used when experiences are associated with a credit decisioning report and any other reports with transaction data. The value is in epoch time and must be 10 digits. Example: 1494449017. If it's greater than 10 digits, then the `fromDate` is set to the credit decisioning report's default `fromDate`.

For an experience that generates multiple reports, the `fromDate` gets passed to the reports that support it.

However, Connect doesn't pass this parameter to the following reports:
* Pay Statement Extraction Report 
* VOIE - Paystub (with TXVerify) Report 
* Statement Report 
* Verification of Income Report 
* VOIE - Payroll Report 

Note: this field isn't used if you're only collecting transaction data without a report.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="reportCustomFields" type="schemas:ReportCustomField">
            <xs:annotation>
              <xs:documentation>The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.

Designate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is "true" or "false".
* "true": (default) display the custom field in the PDF report
* "false": don't display the custom field in the PDF report

For an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.

All custom fields display in the Reseller Billing API.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="singleUseUrl" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>"true": The URL link expires after a Connect session successfully completes.

Note: when the `singleUseUrl` and the `experience` parameters are passed in the same call, the `singleUseUrl` value overrides the `singleUseUrl` value configured in the `experience` parameter.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ConnectJointBorrowerEmailParameters">
        <xs:sequence>
          <xs:element minOccurs="0" name="language" type="xs:string">
            <xs:annotation>
              <xs:documentation>Generate a translated Connect URL link. 

Supported languages: 
* English (default)
* Spanish (United States): `es`
* French (Canada): `fr` or `fr-CA`</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="partnerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Your Partner ID displayed in the [Developer Dashboard](https://developer.finicity.com/admin)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="borrowers" type="schemas:Borrower">
            <xs:annotation>
              <xs:documentation>(MVS) Array of borrowers to pass the primary and joint borrower's customer and consumer IDs</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="redirectUri" type="xs:string">
            <xs:annotation>
              <xs:documentation>The URL that customers will be redirected to after completing Finicity Connect. Required unless Connect is embedded inside our application (iframe).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="webhook" type="xs:string">
            <xs:annotation>
              <xs:documentation>The publicly available URL you want to be notified with events as the user progresses through the application. See [Connect Webhook Event](https://docs.finicity.com/connect-and-mvs-webhooks/) for event details.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="application/json" name="webhookContentType" type="xs:string">
            <xs:annotation>
              <xs:documentation>The content type the webhook events will be sent in. Supported types: "application/json" and "application/xml".</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="webhookData">
            <xs:annotation>
              <xs:documentation>Allows additional identifiable information to be inserted into the payload of connect webhook events. See: [Custom Webhooks](https://docs.finicity.com/custom-webhooks/).</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="webhookHeaders">
            <xs:annotation>
              <xs:documentation>Allows additional identifiable information to be included as headers of connect webhook event. See: [Custom Webhooks](https://docs.finicity.com/custom-webhooks/).</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="institutionSettings">
            <xs:annotation>
              <xs:documentation>Advanced options for configuration of which institutions to display in. See [Institution Settings](https://docs.finicity.com/connect-institution-settings/).</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="1" name="email" type="schemas:EmailOptions">
            <xs:annotation>
              <xs:documentation>Configuration for the Connect email's sent to customers</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="experience" type="xs:string">
            <xs:annotation>
              <xs:documentation>The `experience` field allows you to customize:
* Brand: color and logo
* Icon: displayed on the "Share your data" page 
* Popular institutions: displayed on the Bank Search page 
* Report: the credit decisioning report to send when Connect completes. 
* MVS modules: financial, payroll, paystub

Note: the Finicity sales engineers (SE) help you set up a default experience for your company when you migrate to Connect 2.0. For each additional experience you create thereafter, they'll give you a unique ID. See [Generate 2.0 Connect URL APIs](https://docs.finicity.com/migrate-to-connect-web-sdk-2-0/#migrate-connect-web-sdk-1).

Experience values options: 
* "default": your default experience (must be defined) 
* GUID: the code for a different experience
* Not defined: If you don't pass the experience parameter, then Connect's out of the box default experience (add accounts but no branding) is used, and the MVS modules will not run.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="fromDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>The `fromDate` parameter is used when experiences are associated with a credit decisioning report and any other reports with transaction data. The value is in epoch time and must be 10 digits. Example: 1494449017. If it's greater than 10 digits, then the `fromDate` is set to the credit decisioning report's default `fromDate`.

For an experience that generates multiple reports, the `fromDate` gets passed to the reports that support it.

However, Connect doesn't pass this parameter to the following reports:
* Pay Statement Extraction Report 
* VOIE - Paystub (with TXVerify) Report 
* Statement Report 
* Verification of Income Report 
* VOIE - Payroll Report 

Note: this field isn't used if you're only collecting transaction data without a report.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="reportCustomFields" type="schemas:ReportCustomField">
            <xs:annotation>
              <xs:documentation>The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.

Designate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is "true" or "false".
* "true": (default) display the custom field in the PDF report
* "false": don't display the custom field in the PDF report

For an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.

All custom fields display in the Reseller Billing API.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="singleUseUrl" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>"true": The URL link expires after a Connect session successfully completes.

Note: when the `singleUseUrl` and the `experience` parameters are passed in the same call, the `singleUseUrl` value overrides the `singleUseUrl` value configured in the `experience` parameter.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Borrower">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="consumerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A consumer ID. See Create Consumer API for how to create a consumer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>"primary" or "jointBorrower"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="optionalConsumerInfo" type="schemas:ConsumerInfo">
            <xs:annotation>
              <xs:documentation>The SSN and date of birth of a consumer</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ConsumerInfo">
        <xs:annotation>
          <xs:documentation>The SSN and date of birth of a consumer</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="ssn" type="xs:string">
            <xs:annotation>
              <xs:documentation>A full SSN without hyphens</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="dob" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VOAReportConstraints">
        <xs:sequence>
          <xs:element minOccurs="0" name="accountIds" type="xs:string">
            <xs:annotation>
              <xs:documentation>A whitespace-separated list of account IDs to be included in the report (all accounts will be included if not set)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="reportCustomFields" type="schemas:ReportCustomField">
            <xs:annotation>
              <xs:documentation>The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.

Designate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is "true" or "false".
* "true": (default) display the custom field in the PDF report
* "false": don't display the custom field in the PDF report

For an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.

All custom fields display in the Reseller Billing API.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="showNsf" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Include the non-sufficient funds (NSF) summary JSON and the NSF summary PDF section in the report. Data included:
* Account

* Total number of NSF funds

* Days since the most recent NFS funds fee</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="fromDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VOAReportConstraintsOut">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="accountIds" type="xs:string">
            <xs:annotation>
              <xs:documentation>An array of account IDs to be included in the report (all accounts will be included if not set)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="reportCustomFields" type="schemas:ReportCustomField">
            <xs:annotation>
              <xs:documentation>The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.

Designate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is "true" or "false".
* "true": (default) display the custom field in the PDF report
* "false": don't display the custom field in the PDF report

For an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.

All custom fields display in the Reseller Billing API.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="showNsf" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Include the non-sufficient funds (NSF) summary JSON and the NSF summary PDF section in the report. Data included:
* Account

* Total number of NSF funds

* Days since the most recent NFS funds fee</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="fromDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VOAWithIncomeReportConstraints">
        <xs:sequence>
          <xs:element minOccurs="0" name="accountIds" type="xs:string">
            <xs:annotation>
              <xs:documentation>A whitespace-separated list of account IDs to be included in the report (all accounts will be included if not set)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="reportCustomFields" type="schemas:ReportCustomField">
            <xs:annotation>
              <xs:documentation>The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.

Designate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is "true" or "false".
* "true": (default) display the custom field in the PDF report
* "false": don't display the custom field in the PDF report

For an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.

All custom fields display in the Reseller Billing API.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="showNsf" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Include the non-sufficient funds (NSF) summary JSON and the NSF summary PDF section in the report. Data included:
* Account

* Total number of NSF funds

* Days since the most recent NFS funds fee</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="fromDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="incomeStreamConfidenceMinimum" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Include income streams in the report, based on the income stream's confidence score. For example, Use the value 50 to include only income streams with a confidence score of 50 or higher.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VOAWithIncomeReportConstraintsOut">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="accountIds" type="xs:string">
            <xs:annotation>
              <xs:documentation>An array of account IDs to be included in the report (all accounts will be included if not set)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="reportCustomFields" type="schemas:ReportCustomField">
            <xs:annotation>
              <xs:documentation>The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.

Designate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is "true" or "false".
* "true": (default) display the custom field in the PDF report
* "false": don't display the custom field in the PDF report

For an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.

All custom fields display in the Reseller Billing API.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="showNsf" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Include the non-sufficient funds (NSF) summary JSON and the NSF summary PDF section in the report. Data included:
* Account

* Total number of NSF funds

* Days since the most recent NFS funds fee</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="fromDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="incomeStreamConfidenceMinimum" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Include income streams in the report, based on the income stream's confidence score. For example, Use the value 50 to include only income streams with a confidence score of 50 or higher.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PrequalificationReportConstraints">
        <xs:sequence>
          <xs:element minOccurs="0" name="accountIds" type="xs:string">
            <xs:annotation>
              <xs:documentation>A whitespace-separated list of account IDs to be included in the report (all accounts will be included if not set)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="reportCustomFields" type="schemas:ReportCustomField">
            <xs:annotation>
              <xs:documentation>The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.

Designate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is "true" or "false".
* "true": (default) display the custom field in the PDF report
* "false": don't display the custom field in the PDF report

For an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.

All custom fields display in the Reseller Billing API.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="showNsf" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Include the non-sufficient funds (NSF) summary JSON and the NSF summary PDF section in the report. Data included:
* Account

* Total number of NSF funds

* Days since the most recent NFS funds fee</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="fromDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PrequalificationReportConstraintsOut">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="accountIds" type="xs:string">
            <xs:annotation>
              <xs:documentation>An array of account IDs to be included in the report (all accounts will be included if not set)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="reportCustomFields" type="schemas:ReportCustomField">
            <xs:annotation>
              <xs:documentation>The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.

Designate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is "true" or "false".
* "true": (default) display the custom field in the PDF report
* "false": don't display the custom field in the PDF report

For an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.

All custom fields display in the Reseller Billing API.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="showNsf" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Include the non-sufficient funds (NSF) summary JSON and the NSF summary PDF section in the report. Data included:
* Account

* Total number of NSF funds

* Days since the most recent NFS funds fee</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="fromDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VOIReportConstraints">
        <xs:sequence>
          <xs:element minOccurs="0" name="accountIds" type="xs:string">
            <xs:annotation>
              <xs:documentation>A whitespace-separated list of account IDs to be included in the report (all accounts will be included if not set)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="reportCustomFields" type="schemas:ReportCustomField">
            <xs:annotation>
              <xs:documentation>The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.

Designate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is "true" or "false".
* "true": (default) display the custom field in the PDF report
* "false": don't display the custom field in the PDF report

For an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.

All custom fields display in the Reseller Billing API.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="fromDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="incomeStreamConfidenceMinimum" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Include income streams in the report, based on the income stream's confidence score. For example, Use the value 50 to include only income streams with a confidence score of 50 or higher.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VOIReportConstraintsOut">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="accountIds" type="xs:string">
            <xs:annotation>
              <xs:documentation>An array of account IDs to be included in the report (all accounts will be included if not set)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="reportCustomFields" type="schemas:ReportCustomField">
            <xs:annotation>
              <xs:documentation>The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.

Designate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is "true" or "false".
* "true": (default) display the custom field in the PDF report
* "false": don't display the custom field in the PDF report

For an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.

All custom fields display in the Reseller Billing API.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="fromDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="incomeStreamConfidenceMinimum" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Include income streams in the report, based on the income stream's confidence score. For example, Use the value 50 to include only income streams with a confidence score of 50 or higher.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ReportCustomField">
        <xs:sequence>
          <xs:element minOccurs="0" name="label" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the custom field</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="value" type="xs:string">
            <xs:annotation>
              <xs:documentation>The value of the custom field</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="shown" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>If the custom field will show on the PDF or not</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ConnectUrl">
        <xs:annotation>
          <xs:documentation>A Connect URL object</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="link" type="xs:string">
            <xs:annotation>
              <xs:documentation>A generated Connect URL</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ConnectEmailUrl">
        <xs:sequence>
          <xs:element minOccurs="1" name="link" type="xs:string">
            <xs:annotation>
              <xs:documentation>A generated Connect URL</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="emailConfig" type="schemas:EmailOptions">
            <xs:annotation>
              <xs:documentation>Configuration for the Connect email's sent to customers</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="EmailOptions">
        <xs:annotation>
          <xs:documentation>Configuration for the Connect email's sent to customers</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="to" type="xs:string">
            <xs:annotation>
              <xs:documentation>The email address for the customer receiving the Connect email</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="from" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of a person or business sending the Connect email</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="supportPhone" type="xs:string">
            <xs:annotation>
              <xs:documentation>The support phone number listed in the email</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="subject" type="xs:string">
            <xs:annotation>
              <xs:documentation>The subject line of the email. The default is "Verify your Financial Information".</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="firstName" type="xs:string">
            <xs:annotation>
              <xs:documentation>The first name of the customer or both names of the customers for joint borrowers. Example: "Marvin and Jenny".</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="institutionName" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of your company</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="institutionAddress" type="xs:string">
            <xs:annotation>
              <xs:documentation>The institution address to appear in the footer of the email</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="signature" type="xs:string">
            <xs:annotation>
              <xs:documentation>A signature for the email</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="NewCustomer">
        <xs:annotation>
          <xs:documentation>A new customer to be enrolled</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="username" type="xs:string">
            <xs:annotation>
              <xs:documentation>The customer's username, assigned by the partner (a unique identifier), following these rules: minimum 6 characters maximum 255 characters any mix of uppercase, lowercase, numeric, and non-alphabet special characters ! @ . # $ % &amp; * _ – + the use of email in this field is discouraged it is recommended to use a unique non-email identifier. Use of special characters may result in an error (e.g. í, ü, etc.). Usernames are unique. A username used in [Test Drive](https://signup.finicity.com/) can't be reused in other plans.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="firstName" type="xs:string">
            <xs:annotation>
              <xs:documentation>First name(s) / given name(s)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="lastName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Last name(s) / surname(s)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="applicationId" type="xs:string">
            <xs:annotation>
              <xs:documentation>`applicationId` value returned from the Get App Registration Status API and the partner assign the customers to. This cannot be changed once set. Only applicable in cases of partners with multiple registered applications. If the partner only has one app, this can usually be omitted. This field is populated after the app is in a status approved.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CustomerUpdate">
        <xs:annotation>
          <xs:documentation>Represent an update to customer fields</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="firstName" type="xs:string">
            <xs:annotation>
              <xs:documentation>First name(s) / given name(s)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="lastName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Last name(s) / surname(s)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CreatedCustomer">
        <xs:annotation>
          <xs:documentation>A new customer that was just enrolled</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="username" type="xs:string">
            <xs:annotation>
              <xs:documentation>The customer's username, assigned by the partner (a unique identifier), following these rules: minimum 6 characters maximum 255 characters any mix of uppercase, lowercase, numeric, and non-alphabet special characters ! @ . # $ % &amp; * _ – + the use of email in this field is discouraged it is recommended to use a unique non-email identifier. Use of special characters may result in an error (e.g. í, ü, etc.). Usernames are unique. A username used in [Test Drive](https://signup.finicity.com/) can't be reused in other plans.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="createdDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Customer">
        <xs:annotation>
          <xs:documentation>A finicity customer record</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="username" type="xs:string">
            <xs:annotation>
              <xs:documentation>The customer's username, assigned by the partner (a unique identifier), following these rules: minimum 6 characters maximum 255 characters any mix of uppercase, lowercase, numeric, and non-alphabet special characters ! @ . # $ % &amp; * _ – + the use of email in this field is discouraged it is recommended to use a unique non-email identifier. Use of special characters may result in an error (e.g. í, ü, etc.). Usernames are unique. A username used in [Test Drive](https://signup.finicity.com/) can't be reused in other plans.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="firstName" type="xs:string">
            <xs:annotation>
              <xs:documentation>First name(s) / given name(s)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="lastName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Last name(s) / surname(s)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>The type of customer ("active" or "testing" or "" for all types)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="createdDate" type="xs:string">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="lastModifiedDate" type="xs:string">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CustomerWithAppData">
        <xs:annotation>
          <xs:documentation>A finicity customer record with application info</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="username" type="xs:string">
            <xs:annotation>
              <xs:documentation>The customer's username, assigned by the partner (a unique identifier), following these rules: minimum 6 characters maximum 255 characters any mix of uppercase, lowercase, numeric, and non-alphabet special characters ! @ . # $ % &amp; * _ – + the use of email in this field is discouraged it is recommended to use a unique non-email identifier. Use of special characters may result in an error (e.g. í, ü, etc.). Usernames are unique. A username used in [Test Drive](https://signup.finicity.com/) can't be reused in other plans.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="firstName" type="xs:string">
            <xs:annotation>
              <xs:documentation>First name(s) / given name(s)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="lastName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Last name(s) / surname(s)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>The type of customer ("active" or "testing" or "" for all types)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="createdDate" type="xs:string">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="lastModifiedDate" type="xs:string">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="applicationId" type="xs:string">
            <xs:annotation>
              <xs:documentation>`applicationId` value returned from the Get App Registration Status API and the partner assign the customers to. This cannot be changed once set. Only applicable in cases of partners with multiple registered applications. If the partner only has one app, this can usually be omitted. This field is populated after the app is in a status approved.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="applicationName" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the application assigned to the customer</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Customers">
        <xs:annotation>
          <xs:documentation>A list of customers</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="found" type="xs:integer">
            <xs:annotation>
              <xs:documentation>The total number of results matching search criteria</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="displaying" type="xs:integer">
            <xs:annotation>
              <xs:documentation>The number of results returned</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="moreAvailable" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>If the value of `moreAvailable` is "true", you can retrieve the next page of results by increasing the value of the start parameter in your next request:"...&amp;start=6&amp;limit=5"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="customers" type="schemas:Customer">
            <xs:annotation>
              <xs:documentation>A list of customer records</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="NewConsumer">
        <xs:annotation>
          <xs:documentation>A new consumer to be created</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="firstName" type="xs:string">
            <xs:annotation>
              <xs:documentation>First name(s) / given name(s)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="lastName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Last name(s) / surname(s)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="address" type="xs:string">
            <xs:annotation>
              <xs:documentation>A street address</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="city" type="xs:string">
            <xs:annotation>
              <xs:documentation>A city</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="state" type="xs:string">
            <xs:annotation>
              <xs:documentation>A state</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="zip" type="xs:string">
            <xs:annotation>
              <xs:documentation>A ZIP code</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="phone" type="xs:string">
            <xs:annotation>
              <xs:documentation>A phone number</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="ssn" type="xs:string">
            <xs:annotation>
              <xs:documentation>A full SSN with or without hyphens</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="birthday" type="schemas:Birthday">
            <xs:annotation>
              <xs:documentation>A birth date</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="email" type="xs:string">
            <xs:annotation>
              <xs:documentation>An email address</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="suffix" type="xs:string">
            <xs:annotation>
              <xs:documentation>A person suffix</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ConsumerUpdate">
        <xs:sequence>
          <xs:element minOccurs="0" name="firstName" type="xs:string">
            <xs:annotation>
              <xs:documentation>First name(s) / given name(s)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="lastName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Last name(s) / surname(s)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="address" type="xs:string">
            <xs:annotation>
              <xs:documentation>A street address</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="city" type="xs:string">
            <xs:annotation>
              <xs:documentation>A city</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="state" type="xs:string">
            <xs:annotation>
              <xs:documentation>A state</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="zip" type="xs:string">
            <xs:annotation>
              <xs:documentation>A ZIP code</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="phone" type="xs:string">
            <xs:annotation>
              <xs:documentation>A phone number</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ssn" type="xs:string">
            <xs:annotation>
              <xs:documentation>A full SSN with or without hyphens</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="birthday" type="schemas:Birthday">
            <xs:annotation>
              <xs:documentation>A birth date</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="email" type="xs:string">
            <xs:annotation>
              <xs:documentation>An email address</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="suffix" type="xs:string">
            <xs:annotation>
              <xs:documentation>A person suffix</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CreatedConsumer">
        <xs:annotation>
          <xs:documentation>A consumer that was just created</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>A consumer ID. See Create Consumer API for how to create a consumer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="createdDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="customerId" type="xs:long">
            <xs:annotation>
              <xs:documentation>A customer ID represented as a number. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Consumer">
        <xs:annotation>
          <xs:documentation>A finicity consumer record</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>A consumer ID. See Create Consumer API for how to create a consumer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="firstName" type="xs:string">
            <xs:annotation>
              <xs:documentation>First name(s) / given name(s)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="lastName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Last name(s) / surname(s)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="customerId" type="xs:long">
            <xs:annotation>
              <xs:documentation>A customer ID represented as a number. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="address" type="xs:string">
            <xs:annotation>
              <xs:documentation>A street address</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="city" type="xs:string">
            <xs:annotation>
              <xs:documentation>A city</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="state" type="xs:string">
            <xs:annotation>
              <xs:documentation>A state</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="zip" type="xs:string">
            <xs:annotation>
              <xs:documentation>A ZIP code</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="phone" type="xs:string">
            <xs:annotation>
              <xs:documentation>A phone number</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="ssn" type="xs:string">
            <xs:annotation>
              <xs:documentation>Last 4 digits of a SSN</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="birthday" type="schemas:Birthday">
            <xs:annotation>
              <xs:documentation>A birth date</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="email" type="xs:string">
            <xs:annotation>
              <xs:documentation>An email address</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="createdDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="suffix" type="xs:string">
            <xs:annotation>
              <xs:documentation>A person suffix</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AccountOwner">
        <xs:annotation>
          <xs:documentation>Owner of a customer account</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="ownerName" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the account owner. Can be multiple account owners in one string. This is how the source data is returned from the institution.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="ownerAddress" type="xs:string">
            <xs:annotation>
              <xs:documentation>A street address</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="asOfDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CustomerAccounts">
        <xs:annotation>
          <xs:documentation>A list of customer accounts</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="accounts" type="schemas:CustomerAccount">
            <xs:annotation>
              <xs:documentation>List of customer accounts</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CustomerAccount">
        <xs:annotation>
          <xs:documentation>An account represents a bank account such as a checking or savings that the customer has added via the Connect interface.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>An account ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="number" type="xs:string">
            <xs:annotation>
              <xs:documentation>Use the `accountNumberDisplay` field. Starting July 1, 2021 the `number` field will sunset with limited support until April 1, 2022, at which time it will be deprecated (no longer available).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="accountNumberDisplay" type="xs:string">
            <xs:annotation>
              <xs:documentation>The account number from a financial institution in truncated format:
* Last four digits: "1234"
* Last four digits with suffix: "1234-9"
* Full value for string accounts: "john@gmail.com"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="realAccountNumberLast4" type="xs:string">
            <xs:annotation>
              <xs:documentation>The last 4 digits of the ACH account number</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="name" type="xs:string">
            <xs:annotation>
              <xs:documentation>The account name from the institution</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="balance" type="xs:double">
            <xs:annotation>
              <xs:documentation>The cleared balance of the account as of `balanceDate`</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>The list of supported account types.
* "checking": Standard checking
* "savings": Standard savings
* "cd": Certificates of deposit
* "moneyMarket": Money Market
* "creditCard": Standard credit cards
* "lineOfCredit": Home equity, line of credit
* "investment": Generic investment (no details)
* "investmentTaxDeferred": Generic tax-advantaged investment (no details)
* "employeeStockPurchasePlan": ESPP, Employee Stock Ownership Plans (ESOP), Stock Purchase Plans
* "ira": Individual Retirement Account (not Rollover or Roth)
* "401k": 401K Plan
* "roth": Roth IRA, Roth 401K
* "403b": 403B Plan
* "529plan": 529 Plan (True value is 529)
* "rollover": Rollover IRA
* "ugma": Uniform Gifts to Minors Act
* "utma": Uniform Transfers to Minors Act
* "keogh": Keogh Plan
* "457plan": 457 Plan (True value is 457)
* "401a": 401A Plan
* "brokerageAccount": Brokerage Account
* "educationSavings": Education Savings Account that is not a 529
* "healthSavingsAccount": HSA (Health Savings Accounts)
* "pension": Pension
* "profitSharingPlan": Profit Sharing Plan
* "roth401k": Roth 401K
* "sepIRA": Simplified Employee Pension IRA
* "simpleIRA": Simple IRA
* "thriftSavingsPlan": Thrift Savings Plan
* "variableAnnuity": Variable Annuity
* "cryptocurrency": Cryptocurrency Wallet, Cryptocurrency Account
* "mortgage": Standard Mortgages
* "loan": Auto loans, equity loans, other loans
* "studentLoan": Student Loan
* "studentLoanGroup": Student Loan Group
* "studentLoanAccount": Student Loan Account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="aggregationStatusCode" type="xs:integer">
            <xs:annotation>
              <xs:documentation>The status of the most recent aggregation attempt (see [Aggregation Status Codes](https://docs.finicity.com/aggregation-status-codes/)). Won't be present until you have run your first aggregation for the account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>"pending" during account discovery, always "active" following successful account activation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="institutionId" type="xs:string">
            <xs:annotation>
              <xs:documentation>The ID of a financial institution</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="balanceDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A timestamp showing when the balance was captured. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="aggregationSuccessDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A timestamp showing the last successful aggregation of the account. This will not be present until you have run your first aggregation for the account. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="aggregationAttemptDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A timestamp showing the last aggregation attempt, whether successful or not. This will not be present until you have run your first aggregation for the account. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="createdDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A timestamp showing when the account was added to the system. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="currency" type="xs:string">
            <xs:annotation>
              <xs:documentation>A currency code</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="lastTransactionDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>The date of the latest transaction on the account. This will not be present until you have run your first aggregation for the account. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="oldestTransactionDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>The date of the oldest transaction in the transactions for the account. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="institutionLoginId" type="xs:long">
            <xs:annotation>
              <xs:documentation>An institution login ID (from the account record), represented as a number</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="detail" type="schemas:CustomerAccountDetail">
            <xs:annotation>
              <xs:documentation>Additional customer account details. Not all data points will return for each account type. You can see the account type that each data point will return for in descriptions. The data point are also subject to availability by the institution.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="position" type="schemas:CustomerAccountPosition">
            <xs:annotation>
              <xs:documentation>Investment holdings</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="displayPosition" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Display position of the account at the financial institution, "1" being the top listed account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="parentAccount" type="xs:string">
            <xs:annotation>
              <xs:documentation>The assigned account ID for the account one level higher in the student loan account hierarchy</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CustomerAccountPosition">
        <xs:annotation>
          <xs:documentation>Details for investment account holdings</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:long">
            <xs:annotation>
              <xs:documentation>The id of the investment position</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="description" type="xs:string">
            <xs:annotation>
              <xs:documentation>The description of the holding</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="symbol" type="xs:string">
            <xs:annotation>
              <xs:documentation>The investment position's market ticker symbol</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="units" type="xs:double">
            <xs:annotation>
              <xs:documentation>The number of units of the holding</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="currentPrice" type="xs:double">
            <xs:annotation>
              <xs:documentation>The current price of the investment holding</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="securityName" type="xs:string">
            <xs:annotation>
              <xs:documentation>The security name for the investment holding</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="transactionType" type="xs:string">
            <xs:annotation>
              <xs:documentation>The transaction type of the holding, such as cash, margin, and more</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="marketValue" type="xs:double">
            <xs:annotation>
              <xs:documentation>Market value of an investment position at the time of retrieval</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="costBasis" type="xs:double">
            <xs:annotation>
              <xs:documentation>The total cost of acquiring the security</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>The status of the holding</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="currentPriceDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="securityType" type="xs:string">
            <xs:annotation>
              <xs:documentation>Type of security for the investment position</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="mfType" type="xs:string">
            <xs:annotation>
              <xs:documentation>Type of mutual fund, such as open ended</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="posType" type="xs:string">
            <xs:annotation>
              <xs:documentation>Fund type assigned by the FI (long or short)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="totalGLDollar" type="xs:double">
            <xs:annotation>
              <xs:documentation>Total gain and loss of the position at the time of aggregation in dollars</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="totalGLPercent" type="xs:double">
            <xs:annotation>
              <xs:documentation>Total gain and loss of the position at the time of aggregation in percentage</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="optionStrikePrice" type="xs:double">
            <xs:annotation>
              <xs:documentation>The strike price of the option contract</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="optionType" type="xs:string">
            <xs:annotation>
              <xs:documentation>The type of option contract (PUT or CALL)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="optionSharesPerContract" type="xs:double">
            <xs:annotation>
              <xs:documentation>The number of shares per option contract</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="optionExpireDate" type="xs:date">
            <xs:annotation>
              <xs:documentation>Expiration date of option</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="fiAssetClass" type="xs:string">
            <xs:annotation>
              <xs:documentation>Financial Institution (FI) defined asset class (COMMON STOCK, COMNEQTY, EQUITY/STOCK, CMA-ISA, CONVERTIBLE PREFERREDS, CORPORATE BONDS, OTHER MONEY FUNDS, ALLOCATION FUNDS, CMA-TAXABLE, FOREIGNEQUITYADRS, COMMONSTOCK, PREFERRED STOCKS, STABLE VALUE, FOREIGN EQUITY ADRS)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="assetClass" type="xs:string">
            <xs:annotation>
              <xs:documentation>An asset class is a grouping of comparable financial securities. These include equities (stocks), fixed income (bonds), and cash equivalent or money market instruments. (DOMESTICBOND, LARGESTOCK, INTLSTOCK, MONEYMRKT, OTHER)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="currencyRate" type="xs:double">
            <xs:annotation>
              <xs:documentation>Currency rate, ratio of currency to original currency</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="securityId" type="xs:string">
            <xs:annotation>
              <xs:documentation>The security ID of the transaction</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="securityIdType" type="xs:string">
            <xs:annotation>
              <xs:documentation>The security type. This field is related to the `securityId` field. Possible values:
* "CUSIP"

* "ISIN"

* "SEDOL"

* "SICC"

* "VALOR"

* "WKN"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="costBasisPerShare" type="xs:double">
            <xs:annotation>
              <xs:documentation>The per share cost of acquiring the security</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="subAccountType" type="xs:string">
            <xs:annotation>
              <xs:documentation>The subaccount's type, such as cash</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="securityCurrency" type="xs:string">
            <xs:annotation>
              <xs:documentation>Symbol for the currency that the account is being converted into</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="todayGLDollar" type="xs:double">
            <xs:annotation>
              <xs:documentation>The current day's gain and loss of the position at the time of aggregation in dollars</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="todayGLPercent" type="xs:double">
            <xs:annotation>
              <xs:documentation>The current day's gain and loss of the position at the time of aggregation in percentage</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CustomerAccountDetail">
        <xs:annotation>
          <xs:documentation>Additional customer account details. Not all data points will return for each account type. You can see the account type that each data point will return for in descriptions. The data point are also subject to availability by the institution.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="dateAsOf" type="xs:long">
            <xs:annotation>
              <xs:documentation>(All Account Types) Most recent date of the following information. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="availableBalanceAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Checking/Savings/CD/MoneyMarket) and (Mortgage/Loan) The available balance (typically the current balance with adjustments for any pending transactions)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="openDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>(Checking/Savings/CD/MoneyMarket) Date when account was opened. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="periodStartDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>(Checking/Savings/CD/MoneyMarket) Start date of period. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="periodEndDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>End date of period. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="periodInterestRate" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Checking/Savings/CD/MoneyMarket) The APY for the current period interest rate</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="periodDepositAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Checking/Savings/CD/MoneyMarket) Amount deposited in period</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="periodInterestAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Checking/Savings/CD/MoneyMarket) Interest accrued during the current period</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="interestYtdAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Checking/Savings/CD/MoneyMarket) Interest accrued year-to-date</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="interestPriorYtdAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Checking/Savings/CD/MoneyMarket) Interest earned in prior year</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="maturityDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>(Checking/Savings/CD/MoneyMarket) Maturity date of account type. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="interestRate" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Credit Card/Line Of Credit) and (Mortgage/Loan) The account's current interest rate</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="creditAvailableAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Credit Card/Line Of Credit) The available credit (typically the credit limit minus the current balance)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="creditMaxAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Credit Card/Line Of Credit) The account's credit limit</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="cashAdvanceAvailableAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Credit Card/Line Of Credit) Currently available cash advance</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="cashAdvanceMaxAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Credit Card/Line Of Credit) Maximum cash advance amount</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="cashAdvanceBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Credit Card/Line Of Credit) Balance of current cash advance</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="cashAdvanceInterestRate" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Credit Card/Line Of Credit) Interest rate for cash advances</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="currentBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Credit Card/Line Of Credit) and (Investment) Current balance</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="paymentMinAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Credit Card/Line Of Credit) and (Mortgage/Loan) Minimum payment due</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="paymentDueDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>(Credit Card/Line Of Credit) Due date for the next payment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="previousBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Credit Card/Line Of Credit) Prior balance in last statement</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="statementStartDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>(Credit Card/Line Of Credit) Start date of statement period. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="statementEndDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>(Credit Card/Line Of Credit) End date of statement period. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="statementPurchaseAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Credit Card/Line Of Credit) Purchase amount of statement period</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="statementFinanceAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Credit Card/Line Of Credit) Finance amount of statement period</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="statementCreditAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Credit Card/Line Of Credit) Credit amount applied in statement period</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="rewardEarnedBalance" type="xs:integer">
            <xs:annotation>
              <xs:documentation>(Credit Card/Line Of Credit) Earned reward balance</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="pastDueAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Credit Card/Line Of Credit) Balance past due</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="lastPaymentAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Credit Card/Line Of Credit) and (Mortgage/Loan) The amount received in the last payment</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="lastPaymentDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>(Credit Card/Line Of Credit) The date of the last payment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="statementCloseBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Credit Card/Line Of Credit) Balance of statement at close</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="termOfMl" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) Length of loan in months</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="mlHolderName" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) Holder of the mortgage or loan</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="description" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) Description of loan</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="lateFeeAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) Late fee charged</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="payoffAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) The amount required to payoff the loan</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="payoffAmountDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) Date of final payment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="originalMaturityDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) Original date of loan maturity. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="principalBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) The principal balance</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="escrowBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) The escrow balance</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="interestPeriod" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) Period of interest</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="initialMlAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) Original loan amount</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="initialMlDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) Original date of loan. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="nextPaymentPrincipalAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) Amount towards principal in next payment</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="nextPaymentInterestAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) Amount of interest in next payment</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="nextPayment" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) Minimum payment due</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="nextPaymentDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) Due date for the next payment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="lastPaymentDueDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) Due date of last payment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="lastPaymentReceiveDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) The date of the last payment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="lastPaymentPrincipalAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) Amount towards principal in last payment</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="lastPaymentInterestAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) Amount of interest in last payment</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="lastPaymentEscrowAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) Amount towards escrow in last payment</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="lastPaymentLastFeeAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) Amount of last fee in last payment</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="lastPaymentLateCharge" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) Amount of late charge in last payment</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ytdPrincipalPaid" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) Principal paid year-to-date</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ytdInterestPaid" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) Interest paid year-to-date</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ytdInsurancePaid" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) Insurance paid year-to-date</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ytdTaxPaid" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) Tax paid year-to-date</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="autoPayEnrolled" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) Enrolled in autopay (F/Y)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="collateral" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) Collateral on loan</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="currentSchool" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) Current school</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="firstPaymentDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) First payment due date. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="firstMortgage" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) First mortgage (F/Y)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="loanPaymentFreq" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) Frequency of payments (monthly, etc.)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="originalSchool" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) Original school</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="recurringPaymentAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) Recurring payment amount</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="lender" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) Owner of loan</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="endingBalanceAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) Ending balance</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="loanTermType" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) Type of loan term</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="paymentsMade" type="xs:integer">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) Number of payments made</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="balloonAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) Balloon payment amount</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="projectedInterest" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) Projected interest on the loan</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="interestPaidLtd" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) Interest paid since inception of loan (life to date)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="interestRateType" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) Type of interest rate</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="loanPaymentType" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) Type of loan payment</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="repaymentPlan" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) Type of repayment plan for the student loan</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="paymentsRemaining" type="xs:integer">
            <xs:annotation>
              <xs:documentation>(Mortgage/Loan) Number of payments remaining before loan is paid off</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="marginBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Investment) Net interest earned after deducting interest paid out</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="shortBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Investment) Sum of short balance</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="availableCashBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Investment) Amount available for cash withdrawal</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="maturityValueAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Investment) amount payable to an investor at maturity</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="vestedBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Investment) Vested amount in account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="empMatchAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Investment) Employer matched contributions</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="empPretaxContribAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Investment) Employer pretax contribution amount</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="empPretaxContribAmountYtd" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Investment) Employer pretax contribution amount year to date</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="contribTotalYtd" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Investment) Total year to date contributions</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="cashBalanceAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Investment) Cash balance of account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="preTaxAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Investment) Pre tax amount of total balance</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="afterTaxAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Investment) Post tax amount of total balance</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="matchAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Investment) Amount matched</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="profitSharingAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Investment) Amount of balance for profit sharing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="rolloverAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Investment) Amount of balance rolled over from original account (401k, etc.)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="otherVestAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Investment) Other vested amount</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="otherNonvestAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Investment) Other nonvested amount</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="currentLoanBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Investment) Current loan balance</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="loanRate" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Investment) Interest rate of loan</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="buyPower" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Investment) Money available to buy securities</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="rolloverLtd" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Investment) Life to date of money rolled over</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="loanAwardId" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Student Loan) The federal unique loan identifying number</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="originalInterestRate" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Student Loan) The original interest rate to which the loan was disbursed, in APY</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="guarantor" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Student Loan) The financial institution guarantor of the loan (who will pay the loan amount to the owner if the borrower defaults)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="owner" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Student Loan) Owner of the loan</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="interestSubsidyType" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Student Loan) The indication of the presence of an interest subsidy (i.e. subsidized)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="interestBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Student Loan) The total outstanding interest balance</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="remainingTermOfMl" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Student Loan) The number of months still outstanding on a loan</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="initialInterestRate" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Student Loan) Initial interest rate of loan</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="feesBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Student Loan) The total outstanding fees balance</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="loanYtdInterestPaid" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Student Loan) Loan interest paid year-to-date</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="loanYtdFeesPaid" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Student Loan) Loan fees paid year-to-date</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="loanYtdPrincipalPaid" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Student Loan) Loan principal paid year-to-date</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="loanStatus" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Student Loan) The repayment status phase (i.e. In School, Grace, Repayment, Deferment, Forbearance)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="loanStatusStartDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>(Student Loan) The start date of the current status. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="loanStatusEndDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>(Student Loan) The end date of the current status. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="weightedInterestRate" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Student Loan) The interest rate of multiple interest rates and balances at the group level, in APY</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="repaymentPlanStartDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>(Student Loan) The start date of the current repayment plan. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="repaymentPlanEndDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>(Student Loan) The end date of the current repayment plan. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="expectedPayoffDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>(Student Loan) The expected date of the payoff date. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="outOfSchoolDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>(Student Loan) The date the borrower graduated or dropped below half-time enrollment in school. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="convertToRepayment" type="xs:long">
            <xs:annotation>
              <xs:documentation>(Student Loan) The date the loan enters into repayment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="daysDelinquent" type="xs:integer">
            <xs:annotation>
              <xs:documentation>(Student Loan) The number of days past a due date that a payment should have been made</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="totalPrincipalPaid" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Student Loan) The total amount paid towards the principal balance</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="totalInterestPaid" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Student Loan) The total amount paid towards interest</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="totalAmountPaid" type="xs:double">
            <xs:annotation>
              <xs:documentation>(Student Loan) The total amount paid</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Application">
        <xs:sequence>
          <xs:element minOccurs="1" name="appDescription" type="xs:string">
            <xs:annotation>
              <xs:documentation>A short description of the app. This will be visible to end users in the FI interface.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="appName" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the application assigned to the customer</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="appUrl" type="xs:string">
            <xs:annotation>
              <xs:documentation>An URL for the app. This will be visible to end users in the FI interface.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="ownerAddressLine1" type="xs:string">
            <xs:annotation>
              <xs:documentation>An address line 1</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="ownerAddressLine2" type="xs:string">
            <xs:annotation>
              <xs:documentation>An address line 2</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="ownerCity" type="xs:string">
            <xs:annotation>
              <xs:documentation>City for the business entity that owns the app. Information for registration purposes only and not given to the end user.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="ownerCountry" type="xs:string">
            <xs:annotation>
              <xs:documentation>Country for the  business entity that owns the app. Information for registration purposes only and not given to the end user.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="ownerName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Business name for the business entity that owns the app. Information for registration purposes only and not given to the end user.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="ownerPostalCode" type="xs:string">
            <xs:annotation>
              <xs:documentation>Zip code for the business entity that owns the app. Information for registration purposes only and not given to the end user.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="ownerState" type="xs:string">
            <xs:annotation>
              <xs:documentation>State for the business entity that owns the app. Information for registration purposes only and not given to the end user.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="image" type="xs:string">
            <xs:annotation>
              <xs:documentation>An app logo passed as a Base64 encoded image (1:1 SVG file, must be less than 50KB)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="RegisteredApplication">
        <xs:sequence>
          <xs:element minOccurs="1" name="preAppId" type="xs:long">
            <xs:annotation>
              <xs:documentation>Identifier to track the application registration from the App Registration and Get App Registration Status APIs, represented as a number</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>The status of an app registration request. "A" means approved. "P" means pending which is the status when initially submitted or when the app is modified and awaiting approval. "R" means rejected. If it is rejected there will be a note with the rejected reason.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AppStatuses">
        <xs:annotation>
          <xs:documentation>The response for the Get App Registration Status API which returns an array of status objects</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="totalRecords" type="xs:long">
            <xs:annotation>
              <xs:documentation>The total number of results</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="totalPages" type="xs:long">
            <xs:annotation>
              <xs:documentation>The total number of pages</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="pageNumber" type="xs:long">
            <xs:annotation>
              <xs:documentation>The current page number</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="numberOfRecordsPerPage" type="xs:long">
            <xs:annotation>
              <xs:documentation>The number of results per page</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="applications" type="schemas:AppStatus">
            <xs:annotation>
              <xs:documentation>A list of applications with their statuses</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AppStatus">
        <xs:annotation>
          <xs:documentation>Registration status details for the application</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="partnerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Your Partner ID displayed in the [Developer Dashboard](https://developer.finicity.com/admin)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="preAppId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Identifier to track the application registration from the App Registration and Get App Registration Status APIs</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="note" type="xs:string">
            <xs:annotation>
              <xs:documentation>A note on the registration. Typically used to indicate reasons for rejected apps.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="applicationId" type="xs:string">
            <xs:annotation>
              <xs:documentation>`applicationId` value returned from the Get App Registration Status API and the partner assign the customers to. This cannot be changed once set. Only applicable in cases of partners with multiple registered applications. If the partner only has one app, this can usually be omitted. This field is populated after the app is in a status approved.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="appName" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the application assigned to the customer</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="submittedDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="modifiedDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>The status of an app registration request. "A" means approved. "P" means pending which is the status when initially submitted or when the app is modified and awaiting approval. "R" means rejected. If it is rejected there will be a note with the rejected reason.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="scopes" type="xs:string">
            <xs:annotation>
              <xs:documentation>Indicates scopes of data accessible to the app</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="institutionDetails" type="schemas:AppFinancialInstitutionStatus">
            <xs:annotation>
              <xs:documentation>A list of the registration status for each FI for the application</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AppFinancialInstitutionStatus">
        <xs:annotation>
          <xs:documentation>The registration status fields for each specific OAuth financial institution</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="id" type="xs:long">
            <xs:annotation>
              <xs:documentation>The ID of a financial institution, represented as a number</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="abbrvName" type="xs:string">
            <xs:annotation>
              <xs:documentation>The application's abbreviated name</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="logoUrl" type="xs:string">
            <xs:annotation>
              <xs:documentation>An URL to a logo file</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="decryptionKeyActivated" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Status of decryption keys for financial institution app registration</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="createdDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="lastModifiedDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="status" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>"false" indicates registration is still pending</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Branding">
        <xs:annotation>
          <xs:documentation>All assets are SVGs so can be slightly resized without any issues.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="logo" type="xs:string">
            <xs:annotation>
              <xs:documentation>File path of the institution's logo. For white backgrounds designed at 375 x 72, has built in spacing around it to normalize brand sizing.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="alternateLogo" type="xs:string">
            <xs:annotation>
              <xs:documentation>File path of the institution's alternate logo. For colored backgrounds designed at 375 x 72 has built in spacing around it to normalize brand sizing.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="icon" type="xs:string">
            <xs:annotation>
              <xs:documentation>File path of the institution's icon. For search results designed at 40 x 40.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="primaryColor" type="xs:string">
            <xs:annotation>
              <xs:documentation>Hex code for the institution's primary color</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="tile" type="xs:string">
            <xs:annotation>
              <xs:documentation>File path of institution name logo. For popular banks designed at 160 x 72.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="BrandingWrapper">
        <xs:sequence>
          <xs:element minOccurs="1" name="branding" type="schemas:Branding">
            <xs:annotation>
              <xs:documentation>All assets are SVGs so can be slightly resized without any issues.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="InstitutionAddress">
        <xs:annotation>
          <xs:documentation>The address of a financial institution</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="city" type="xs:string">
            <xs:annotation>
              <xs:documentation>A city</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="state" type="xs:string">
            <xs:annotation>
              <xs:documentation>A state</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="country" type="xs:string">
            <xs:annotation>
              <xs:documentation>A country code</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="postalCode" type="xs:string">
            <xs:annotation>
              <xs:documentation>A ZIP code</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="addressLine1" type="xs:string">
            <xs:annotation>
              <xs:documentation>An address line 1</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="addressLine2" type="xs:string">
            <xs:annotation>
              <xs:documentation>An address line 2</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Institutions">
        <xs:annotation>
          <xs:documentation>A list of financial institutions from the Get Institutions API</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="found" type="xs:integer">
            <xs:annotation>
              <xs:documentation>The total number of results matching search criteria</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="displaying" type="xs:integer">
            <xs:annotation>
              <xs:documentation>The number of results returned</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="moreAvailable" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>If the value of `moreAvailable` is "true", you can retrieve the next page of results by increasing the value of the start parameter in your next request:"...&amp;start=6&amp;limit=5"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="createdDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="institutions" type="schemas:Institution">
            <xs:annotation>
              <xs:documentation>A list of institutions</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="InstitutionWrapper">
        <xs:sequence>
          <xs:element minOccurs="1" name="institution" type="schemas:Institution">
            <xs:annotation>
              <xs:documentation>A financial institution</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Institution">
        <xs:annotation>
          <xs:documentation>A financial institution</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="id" type="xs:long">
            <xs:annotation>
              <xs:documentation>The ID of a financial institution, represented as a number</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="name" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the institution</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="transAgg" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>"true": The institution is certified for the Transaction Aggregation product
"false": The institution is decertified for the Transaction Aggregation product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="ach" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>"true": The institution is certified for the ACH product
"false": The institution is decertified for the ACH product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="stateAgg" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>"true": The institution is certified for the Statement Aggregation product
"false": The institution is decertified for the Statement Aggregation product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="voi" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>"true": The institution is certified for the VOI product
"false": The institution is decertified for the VOI product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="voa" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>"true": The institution is certified for the VOA product
"false": The institution is decertified for the VOA product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="aha" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>"true": The institution is certified for the Account History Aggregation product
"false": The institution is decertified for the Account History Aggregation product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="availBalance" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>"true": The institution is certified for the Account Balance Check (ABC) product
"false": The institution is decertified for the Account Balance Check (ABC) product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="accountOwner" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>"true": The institution is certified for the Account Owner product
"false": The institution is decertified for the Account Owner product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="studentLoanData" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>"true": The institution is certified for the Student Loan Data product

"false": The institution is decertified for the Student Loan Data product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="loanPaymentDetails" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>"true": The institution is certified for the Loan Payment Detail product

"false": The institution is decertified for the Loan Payment Detail product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="accountTypeDescription" type="xs:string">
            <xs:annotation>
              <xs:documentation>Values: Banking, Investments, Credit Cards/Accounts, Workplace Retirement, Mortgages and Loans, Insurance</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="phone" type="xs:string">
            <xs:annotation>
              <xs:documentation>A phone number</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="urlHomeApp" type="xs:string">
            <xs:annotation>
              <xs:documentation>The URL of the institution's primary home page</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="urlLogonApp" type="xs:string">
            <xs:annotation>
              <xs:documentation>The URL of the institution's login page</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="oauthEnabled" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>"true": The institution is an OAuth connection

"false": The institution isn't an OAuth connection</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="urlForgotPassword" type="xs:string">
            <xs:annotation>
              <xs:documentation>Institution's forgot password page</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="urlOnlineRegistration" type="xs:string">
            <xs:annotation>
              <xs:documentation>Institution's signup page</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="class" type="xs:string">
            <xs:annotation>
              <xs:documentation>Institution's class</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="specialText" type="xs:string">
            <xs:annotation>
              <xs:documentation>Special instructions given to customers for login</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="timeZone" type="xs:string">
            <xs:annotation>
              <xs:documentation>The time zone of the institution.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="specialInstructions" type="xs:string">
            <xs:annotation>
              <xs:documentation>Instructions given to the customer before they are sent to the institution website to login for OAuth institutions.

Note: this helps the customer to provide the proper permission for data needed for the application.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="specialInstutionsTitle" type="xs:string">
            <xs:annotation>
              <xs:documentation>The title of the special instructions, if one exists or is required.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="address" type="schemas:InstitutionAddress">
            <xs:annotation>
              <xs:documentation>The address of a financial institution</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="currency" type="xs:string">
            <xs:annotation>
              <xs:documentation>A currency code</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="email" type="xs:string">
            <xs:annotation>
              <xs:documentation>An email address</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>Status for the institution: "online", "offline", "maintenance", "testing"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="newInstitutionId" type="xs:long">
            <xs:annotation>
              <xs:documentation>The ID of a financial institution, represented as a number</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="branding" type="schemas:Branding">
            <xs:annotation>
              <xs:documentation>All assets are SVGs so can be slightly resized without any issues.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="oauthInstitutionId" type="xs:long">
            <xs:annotation>
              <xs:documentation>The ID of a financial institution, represented as a number</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CertifiedInstitutions">
        <xs:annotation>
          <xs:documentation>A list of financial institutions from the Get Certified Institutions API</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="found" type="xs:integer">
            <xs:annotation>
              <xs:documentation>The total number of results matching search criteria</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="displaying" type="xs:integer">
            <xs:annotation>
              <xs:documentation>The number of results returned</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="moreAvailable" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>If the value of `moreAvailable` is "true", you can retrieve the next page of results by increasing the value of the start parameter in your next request:"...&amp;start=6&amp;limit=5"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="requestedDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="institutions" type="schemas:CertifiedInstitution">
            <xs:annotation>
              <xs:documentation>A list of institutions</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CertifiedInstitution">
        <xs:sequence>
          <xs:element minOccurs="1" name="id" type="xs:long">
            <xs:annotation>
              <xs:documentation>The ID of a financial institution, represented as a number</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="rssd" type="xs:long">
            <xs:annotation>
              <xs:documentation>The RSSD ID is a unique identifier assigned to financial institutions by the Federal Reserve. While the length of the RSSD ID varies by institution, it cannot exceed 10 numerical digits.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="name" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the institution</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="transAgg" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>"true": The institution is certified for the Transaction Aggregation product
"false": The institution is decertified for the Transaction Aggregation product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="ach" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>"true": The institution is certified for the ACH product
"false": The institution is decertified for the ACH product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="stateAgg" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>"true": The institution is certified for the Statement Aggregation product
"false": The institution is decertified for the Statement Aggregation product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="voi" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>"true": The institution is certified for the VOI product
"false": The institution is decertified for the VOI product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="voa" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>"true": The institution is certified for the VOA product
"false": The institution is decertified for the VOA product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="aha" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>"true": The institution is certified for the Account History Aggregation product
"false": The institution is decertified for the Account History Aggregation product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="availBalance" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>"true": The institution is certified for the Account Balance Check (ABC) product
"false": The institution is decertified for the Account Balance Check (ABC) product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="accountOwner" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>"true": The institution is certified for the Account Owner product
"false": The institution is decertified for the Account Owner product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="studentLoanData" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>"true": The institution is certified for the Student Loan Data product

"false": The institution is decertified for the Student Loan Data product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="loanPaymentDetails" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>"true": The institution is certified for the Loan Payment Detail product

"false": The institution is decertified for the Loan Payment Detail product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="childInstitutions" type="schemas:ChildInstitution">
            <xs:annotation>
              <xs:documentation>An array of child financial institutions</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ChildInstitution">
        <xs:sequence>
          <xs:element minOccurs="1" name="rssd" type="xs:long">
            <xs:annotation>
              <xs:documentation>The RSSD ID is a unique identifier assigned to financial institutions by the Federal Reserve. While the length of the RSSD ID varies by institution, it cannot exceed 10 numerical digits.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="parentRSSD" type="xs:long">
            <xs:annotation>
              <xs:documentation>The RSSD ID is a unique identifier assigned to financial institutions by the Federal Reserve. While the length of the RSSD ID varies by institution, it cannot exceed 10 numerical digits.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="name" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the institution</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="institutionId" type="xs:long">
            <xs:annotation>
              <xs:documentation>The ID of a financial institution, represented as a number</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="BaseReportAck">
        <xs:annotation>
          <xs:documentation>Properties shared by all generated reports</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="customerType" type="xs:string">
            <xs:annotation>
              <xs:documentation>The type of customer ("active" or "testing" or "" for all types)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="customerId" type="xs:long">
            <xs:annotation>
              <xs:documentation>A customer ID represented as a number. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="requestId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Finicity indicator to track all activity associated with this report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="requesterName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Name of a Finicity partner</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="createdDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Title of the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="consumerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A consumer ID. See Create Consumer API for how to create a consumer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="consumerSsn" type="xs:string">
            <xs:annotation>
              <xs:documentation>Last 4 digits of a SSN</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report type. Possible values:

  * "voi"


  * "voa"


  * "voaHistory"


  * "history"


  * "voieTxVerify"


  * "voieWithReport"


  * "voieWithInterview"


  * "paystatement"


  * "preQualVoa"


  * "assetSummary"


  * "voie"


  * "transactions"


  * "statement"


  * "voiePayroll"


  * "voeTransactions"


  * "voePayroll"


  * "cfrp"


  * "cfrb"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report generation status. Possible values: "inProgress", "success", "failure".</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="errors" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>In case errors occurred during the report generation</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="BaseReportAckWithPortfolioId">
        <xs:annotation>
          <xs:documentation>Properties shared by all generated reports having a portfolio ID</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="customerType" type="xs:string">
            <xs:annotation>
              <xs:documentation>The type of customer ("active" or "testing" or "" for all types)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="customerId" type="xs:long">
            <xs:annotation>
              <xs:documentation>A customer ID represented as a number. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="requestId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Finicity indicator to track all activity associated with this report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="requesterName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Name of a Finicity partner</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="createdDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Title of the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="consumerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A consumer ID. See Create Consumer API for how to create a consumer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="consumerSsn" type="xs:string">
            <xs:annotation>
              <xs:documentation>Last 4 digits of a SSN</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report type. Possible values:

  * "voi"


  * "voa"


  * "voaHistory"


  * "history"


  * "voieTxVerify"


  * "voieWithReport"


  * "voieWithInterview"


  * "paystatement"


  * "preQualVoa"


  * "assetSummary"


  * "voie"


  * "transactions"


  * "statement"


  * "voiePayroll"


  * "voeTransactions"


  * "voePayroll"


  * "cfrp"


  * "cfrb"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report generation status. Possible values: "inProgress", "success", "failure".</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="errors" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>In case errors occurred during the report generation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="portfolioId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A unique identifier that will be consistent across all reports created for the same customer</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VOAReportAck">
        <xs:sequence>
          <xs:element minOccurs="1" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="customerType" type="xs:string">
            <xs:annotation>
              <xs:documentation>The type of customer ("active" or "testing" or "" for all types)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="customerId" type="xs:long">
            <xs:annotation>
              <xs:documentation>A customer ID represented as a number. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="requestId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Finicity indicator to track all activity associated with this report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="requesterName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Name of a Finicity partner</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="createdDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Title of the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="consumerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A consumer ID. See Create Consumer API for how to create a consumer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="consumerSsn" type="xs:string">
            <xs:annotation>
              <xs:documentation>Last 4 digits of a SSN</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report type. Possible values:

  * "voi"


  * "voa"


  * "voaHistory"


  * "history"


  * "voieTxVerify"


  * "voieWithReport"


  * "voieWithInterview"


  * "paystatement"


  * "preQualVoa"


  * "assetSummary"


  * "voie"


  * "transactions"


  * "statement"


  * "voiePayroll"


  * "voeTransactions"


  * "voePayroll"


  * "cfrp"


  * "cfrb"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report generation status. Possible values: "inProgress", "success", "failure".</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="errors" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>In case errors occurred during the report generation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="portfolioId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A unique identifier that will be consistent across all reports created for the same customer</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="constraints" type="schemas:VOAReportConstraintsOut" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VOAWithIncomeReportAck">
        <xs:sequence>
          <xs:element minOccurs="1" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="customerType" type="xs:string">
            <xs:annotation>
              <xs:documentation>The type of customer ("active" or "testing" or "" for all types)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="customerId" type="xs:long">
            <xs:annotation>
              <xs:documentation>A customer ID represented as a number. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="requestId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Finicity indicator to track all activity associated with this report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="requesterName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Name of a Finicity partner</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="createdDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Title of the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="consumerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A consumer ID. See Create Consumer API for how to create a consumer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="consumerSsn" type="xs:string">
            <xs:annotation>
              <xs:documentation>Last 4 digits of a SSN</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report type. Possible values:

  * "voi"


  * "voa"


  * "voaHistory"


  * "history"


  * "voieTxVerify"


  * "voieWithReport"


  * "voieWithInterview"


  * "paystatement"


  * "preQualVoa"


  * "assetSummary"


  * "voie"


  * "transactions"


  * "statement"


  * "voiePayroll"


  * "voeTransactions"


  * "voePayroll"


  * "cfrp"


  * "cfrb"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report generation status. Possible values: "inProgress", "success", "failure".</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="errors" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>In case errors occurred during the report generation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="portfolioId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A unique identifier that will be consistent across all reports created for the same customer</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="constraints" type="schemas:VOAWithIncomeReportConstraintsOut" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PrequalificationReportAck">
        <xs:sequence>
          <xs:element minOccurs="1" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="customerType" type="xs:string">
            <xs:annotation>
              <xs:documentation>The type of customer ("active" or "testing" or "" for all types)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="customerId" type="xs:long">
            <xs:annotation>
              <xs:documentation>A customer ID represented as a number. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="requestId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Finicity indicator to track all activity associated with this report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="requesterName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Name of a Finicity partner</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="createdDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Title of the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="consumerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A consumer ID. See Create Consumer API for how to create a consumer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="consumerSsn" type="xs:string">
            <xs:annotation>
              <xs:documentation>Last 4 digits of a SSN</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report type. Possible values:

  * "voi"


  * "voa"


  * "voaHistory"


  * "history"


  * "voieTxVerify"


  * "voieWithReport"


  * "voieWithInterview"


  * "paystatement"


  * "preQualVoa"


  * "assetSummary"


  * "voie"


  * "transactions"


  * "statement"


  * "voiePayroll"


  * "voeTransactions"


  * "voePayroll"


  * "cfrp"


  * "cfrb"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report generation status. Possible values: "inProgress", "success", "failure".</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="errors" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>In case errors occurred during the report generation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="portfolioId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A unique identifier that will be consistent across all reports created for the same customer</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="constraints" type="schemas:PrequalificationReportConstraintsOut" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VOIReportAck">
        <xs:sequence>
          <xs:element minOccurs="1" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="customerType" type="xs:string">
            <xs:annotation>
              <xs:documentation>The type of customer ("active" or "testing" or "" for all types)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="customerId" type="xs:long">
            <xs:annotation>
              <xs:documentation>A customer ID represented as a number. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="requestId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Finicity indicator to track all activity associated with this report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="requesterName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Name of a Finicity partner</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="createdDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Title of the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="consumerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A consumer ID. See Create Consumer API for how to create a consumer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="consumerSsn" type="xs:string">
            <xs:annotation>
              <xs:documentation>Last 4 digits of a SSN</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report type. Possible values:

  * "voi"


  * "voa"


  * "voaHistory"


  * "history"


  * "voieTxVerify"


  * "voieWithReport"


  * "voieWithInterview"


  * "paystatement"


  * "preQualVoa"


  * "assetSummary"


  * "voie"


  * "transactions"


  * "statement"


  * "voiePayroll"


  * "voeTransactions"


  * "voePayroll"


  * "cfrp"


  * "cfrb"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report generation status. Possible values: "inProgress", "success", "failure".</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="errors" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>In case errors occurred during the report generation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="portfolioId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A unique identifier that will be consistent across all reports created for the same customer</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="constraints" type="schemas:VOIReportConstraintsOut" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PortfolioReport">
        <xs:sequence>
          <xs:element minOccurs="1" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="portfolioId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A unique identifier that will be consistent across all reports created for the same customer</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report type. Possible values:

  * "voi"


  * "voa"


  * "voaHistory"


  * "history"


  * "voieTxVerify"


  * "voieWithReport"


  * "voieWithInterview"


  * "paystatement"


  * "preQualVoa"


  * "assetSummary"


  * "voie"


  * "transactions"


  * "statement"


  * "voiePayroll"


  * "voeTransactions"


  * "voePayroll"


  * "cfrp"


  * "cfrb"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report generation status. Possible values: "inProgress", "success", "failure".</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="createdDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Transaction">
        <xs:sequence>
          <xs:element minOccurs="1" name="id" type="xs:long">
            <xs:annotation>
              <xs:documentation>A transaction ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="amount" type="xs:double">
            <xs:annotation>
              <xs:documentation>The total amount of the transaction. Transactions for deposits are positive values, withdrawals and debits are negative values.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="accountId" type="xs:long">
            <xs:annotation>
              <xs:documentation>An account ID represented as a number</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="customerId" type="xs:long">
            <xs:annotation>
              <xs:documentation>A customer ID represented as a number. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>One of "active", "pending", or "shadow" (see [Pending and Shadow Transactions](https://docs.finicity.com/pending-and-shadow-transactions/))</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="description" type="xs:string">
            <xs:annotation>
              <xs:documentation>The description value is from the financial institution (FI), often known as the payee. The value "No description provided by institution" is returned when the FI doesn't provide one</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="memo" type="xs:string">
            <xs:annotation>
              <xs:documentation>The institution must provide either a description, a memo, or both. We recommended concatenating the two fields into a single value.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>If provided by the institution, the following values may be returned in the field of a record:
* "atm"

* "cash"

* "check"

* "credit"

* "debit"

* "deposit"

* "directDebit"

* "directDeposit"

* "dividend"

* "fee"

* "interest"

* "other"

* "payment"

* "pointOfSale"

* "repeatPayment"

* "serviceCharge"

* "transfer"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="transactionDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). Represents the timestamp of the transaction when it occurred. See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="postedDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). Represents the timestamp of the transaction when it was posted or cleared by the institution. This value isn't required for student loan transaction data. See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="createdDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). Represents the timestamp of the transaction when it was added to our platform. See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="firstEffectiveDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). Represents the first timestamp of the transaction recorded in the `effectiveDate` field. See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="effectiveDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). Represents the timestamp of the transaction when it became effective on an account by an institution. See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="optionExpireDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). Represents the timestamp of the transaction expiration date when it became expires on an account by an institution. See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="checkNum" type="xs:integer">
            <xs:annotation>
              <xs:documentation>The check number of the transaction</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="escrowAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>The portion of the transaction allocated to escrow</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="feeAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>The portion of the overall transaction amount applied to fees</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="suspenseAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>Temporarily hold funds if you overpay or underpay your monthly payment</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="interestAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>The portion of the transaction allocated to interest</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="principalAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>The portion of the transaction allocated to principal</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="optionStrikePrice" type="xs:double">
            <xs:annotation>
              <xs:documentation>The strike price of the option contract</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="unitQuantity" type="xs:integer">
            <xs:annotation>
              <xs:documentation>The number of units (individual shares) in the transaction</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="unitPrice" type="xs:double">
            <xs:annotation>
              <xs:documentation>Share price for the investment unit: stocks, mutual funds, ETFs</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="categorization" type="schemas:Categorization">
            <xs:annotation>
              <xs:documentation>Categorization Record</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="runningBalanceAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>The ending balance after the transaction was posted</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="subaccountSecurityType" type="xs:string">
            <xs:annotation>
              <xs:documentation>The type of sub account the funds came from</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="commissionAmount" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Transaction commission</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ticker" type="xs:string">
            <xs:annotation>
              <xs:documentation>Ticker symbol for the investment related to the transaction</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="investmentTransactionType" type="xs:string">
            <xs:annotation>
              <xs:documentation>Keywords in the `description` and `memo` fields were used to translate investment transactions into these types.

Possible values: 
* "cancel"

* "purchaseToClose"

* "purchaseToCover"

* "contribution"

* "optionExercise"

* "optionExpiration"

* "fee"

* "soldToClose"

* "soldToOpen"

* "split"

* "transfer"

* "returnOfCapital"

* "income"

* "purchased"

* "sold"

* "dividendreInvest"

* "tax"

* "dividend"

* "reinvestOfIncome"

* "interest"

* "deposit"

* "otherInfo"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="taxesAmount" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Taxes applicable to the investment trade</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="currencySymbol" type="xs:string">
            <xs:annotation>
              <xs:documentation>If the foreign amount value is present then this is the currency code of that foreign amount</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="incomeType" type="xs:string">
            <xs:annotation>
              <xs:documentation>Capital gains applied in short, long, or miscellaneous terms for tax purposes</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="splitDenominator" type="xs:double">
            <xs:annotation>
              <xs:documentation>Denominator of the stock split for the transaction</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="splitNumerator" type="xs:double">
            <xs:annotation>
              <xs:documentation>Numerator of the stock split for the transaction</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="sharesPerContract" type="xs:double">
            <xs:annotation>
              <xs:documentation>Shares per contract of the underlying stock option</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="subAccountFund" type="xs:string">
            <xs:annotation>
              <xs:documentation>The sub account where the funds came from</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="securityId" type="xs:string">
            <xs:annotation>
              <xs:documentation>The security ID of the transaction</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="securityIdType" type="xs:string">
            <xs:annotation>
              <xs:documentation>The security type. This field is related to the `securityId` field. Possible values:
* "CUSIP"

* "ISIN"

* "SEDOL"

* "SICC"

* "VALOR"

* "WKN"</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PortfolioSummary">
        <xs:sequence>
          <xs:element minOccurs="1" name="portfolioId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A unique identifier that will be consistent across all reports created for the same customer</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="reports" type="schemas:PortfolioReport">
            <xs:annotation>
              <xs:documentation>A list of reports in the portfolio</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PortfolioWithConsumerSummary">
        <xs:sequence>
          <xs:element minOccurs="1" name="portfolioId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A unique identifier that will be consistent across all reports created for the same customer</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="reports" type="schemas:PortfolioReport">
            <xs:annotation>
              <xs:documentation>A list of reports in the portfolio</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="consumer" type="schemas:PortfolioConsumer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ReportSummaries">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="reports" type="schemas:ReportSummary">
            <xs:annotation>
              <xs:documentation>Data pertaining to each report</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TxVerifyInterview">
        <xs:sequence>
          <xs:element minOccurs="1" name="assetId" type="xs:string">
            <xs:annotation>
              <xs:documentation>An asset ID. Generated by Connect or by using the Store Customer Pay Statement API.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="accounts" type="xs:string">
            <xs:annotation>
              <xs:documentation>An array of account IDs to be included in the report (all accounts will be included if not set)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Categorization">
        <xs:annotation>
          <xs:documentation>Categorization Record</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="normalizedPayeeName" type="xs:string">
            <xs:annotation>
              <xs:documentation>A normalized payee, derived from the transaction's description and memo fields</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="category" type="xs:string">
            <xs:annotation>
              <xs:documentation>The different categories for transactions.
* "ATM Fee"

* "Advertising"

* "Air Travel"

* "Alcohol &amp; Bars"

* "Allowance"

* "Amusement"

* "Arts"

* "Auto &amp; Transport"

* "Auto Insurance"

* "Auto Payment"

* "Baby Supplies"

* "Babysitter &amp; Daycare"

* "Bank Fee"

* "Bills &amp; Utilities"

* "Bonus"

* "Books"

* "Books &amp; Supplies"

* "Business Services"

* "Buy"

* "Cash &amp; ATM"

* "Charity"

* "Check"

* "Child Support"

* "Clothing"

* "Coffee Shops"

* "Credit Card Payment"

* "Dentist"

* "Deposit"

* "Dividend &amp; Cap Gains"

* "Doctor"

* "Education"

* "Electronics &amp; Software"

* "Entertainment"

* "Eyecare"

* "Fast Food"

* "Federal Tax"

* "Fees &amp; Charges"

* "Finance Charge"

* "Financial"

* "Financial Advisor"

* "Food &amp; Dining"

* "Furnishings"

* "Gas &amp; Fuel"

* "Gift"

* "Gifts &amp; Donations"

* "Groceries"

* "Gym"

* "Hair"

* "Health &amp; Fitness"

* "Health Insurance"

* "Hobbies"

* "Home"

* "Home Improvement"

* "Home Insurance"

* "Home Phone"

* "Home Services"

* "Home Supplies"

* "Hotel"

* "Income"

* "Interest Income"

* "Internet"

* "Investments"

* "Kids"

* "Kids Activities"

* "Late Fee"

* "Laundry"

* "Lawn &amp; Garden"

* "Legal"

* "Life Insurance"

* "Loan Fees and Charges"

* "Loan Insurance"

* "Loan Interest"

* "Loan Payment"

* "Loan Principal"

* "Loans"

* "Local Tax"

* "Low Balance"

* "Mobile Phone"

* "Mortgage &amp; Rent"

* "Movies &amp; DVDs"

* "Music"

* "Newspapers &amp; Magazines"

* "Office Supplies"

* "Parking"

* "Paycheck"

* "Personal Care"

* "Pet Food &amp; Supplies"

* "Pet Grooming"

* "Pets"

* "Pharmacy"

* "Printing"

* "Property Tax"

* "Public Transportation"

* "Reimbursement"

* "Rental Car &amp; Taxi"

* "Restaurants"

* "Sales Tax"

* "Sell"

* "Services &amp; Parts"

* "Service Fee"

* "Shipping"

* "Shopping"

* "Spa &amp; Massage"

* "Sporting Goods"

* "Sports"

* "State Tax"

* "Streaming Services"

* "Student Loan"

* "Taxes"

* "Television"

* "Toys"

* "Trade Commissions"

* "Transfer"

* "Transfer for Cash Spending"

* "Travel"

* "Tuition"

* "Uncategorized"

* "Utilities"

* "Vacation"

* "Veterinary"

* "Internet / Broadband Charges"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="city" type="xs:string">
            <xs:annotation>
              <xs:documentation>A city</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="state" type="xs:string">
            <xs:annotation>
              <xs:documentation>A state</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="postalCode" type="xs:string">
            <xs:annotation>
              <xs:documentation>A ZIP code</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="country" type="xs:string">
            <xs:annotation>
              <xs:documentation>A country code</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="bestRepresentation" type="xs:string">
            <xs:annotation>
              <xs:documentation>Combines the `description` and `memo` data together, removing duplicated information and numbers and special characters</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Birthday">
        <xs:annotation>
          <xs:documentation>A birth date</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="year" type="xs:integer">
            <xs:annotation>
              <xs:documentation>The birthday 4-digit year</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="month" type="xs:integer">
            <xs:annotation>
              <xs:documentation>The birthday 2-digit month (1 is January)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="dayOfMonth" type="xs:integer">
            <xs:annotation>
              <xs:documentation>The birthday 2-digit day-of-month</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PayStatementData">
        <xs:annotation>
          <xs:documentation>Data to be included within the pay statement report</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="assetIds" type="xs:string">
            <xs:annotation>
              <xs:documentation>A list of pay statement asset IDs</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="true" name="extractEarnings" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Field to indicate whether to extract the earnings on all pay statements</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="false" name="extractDeductions" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Field to indicate whether to extract the deductions on all pay statements</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="true" name="extractDirectDeposit" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Field to indicate whether to extract the direct deposits on all pay statements</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Report">
        <xs:annotation>
          <xs:documentation>A report</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="customerType" type="xs:string">
            <xs:annotation>
              <xs:documentation>The type of customer ("active" or "testing" or "" for all types)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="customerId" type="xs:long">
            <xs:annotation>
              <xs:documentation>A customer ID represented as a number. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="requestId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Finicity indicator to track all activity associated with this report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="requesterName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Name of a Finicity partner</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="createdDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Title of the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="consumerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A consumer ID. See Create Consumer API for how to create a consumer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="consumerSsn" type="xs:string">
            <xs:annotation>
              <xs:documentation>Last 4 digits of a SSN</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report type. Possible values:

  * "voi"


  * "voa"


  * "voaHistory"


  * "history"


  * "voieTxVerify"


  * "voieWithReport"


  * "voieWithInterview"


  * "paystatement"


  * "preQualVoa"


  * "assetSummary"


  * "voie"


  * "transactions"


  * "statement"


  * "voiePayroll"


  * "voeTransactions"


  * "voePayroll"


  * "cfrp"


  * "cfrb"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report generation status. Possible values: "inProgress", "success", "failure".</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="errors" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>In case errors occurred during the report generation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="portfolioId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A unique identifier that will be consistent across all reports created for the same customer</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="startDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>The `postedDate` of the earliest transaction analyzed for the report. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="endDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>The `postedDate` of the latest transaction analyzed for the report. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="days" type="xs:long">
            <xs:annotation>
              <xs:documentation>Number of days covered by the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="seasoned" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>"true" if the report covers more than 365 days</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="institutions" type="schemas:ReportInstitution2">
            <xs:annotation>
              <xs:documentation>A list of institution records, including information about the individual accounts used in this report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="cashFlowBalanceSummary" type="schemas:CashFlowCashFlowBalanceSummary" />
          <xs:element minOccurs="0" name="cashFlowCreditSummary" type="schemas:CashFlowCashFlowCreditSummary" />
          <xs:element minOccurs="0" name="cashFlowDebitSummary" type="schemas:CashFlowCashFlowDebitSummary" />
          <xs:element minOccurs="0" name="cashFlowCharacteristicsSummary" type="schemas:CashFlowCashFlowCharacteristicsSummary" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="possibleLoanDeposits" type="schemas:CashFlowPossibleLoanDeposits">
            <xs:annotation>
              <xs:documentation>A possible loan deposits record</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="consolidatedAvailableBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>The sum of available balance for all of the accounts included in the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="assets" type="schemas:PrequalificationReportAssetSummary" />
          <xs:element minOccurs="0" name="reportStyle" type="xs:string" />
          <xs:element minOccurs="0" name="numberOfBillableAssets" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Total number of billable pay statements included in the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="assetIds" type="xs:string">
            <xs:annotation>
              <xs:documentation>The pay statements included in the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="payStatements" type="schemas:VOIEPayStatement2">
            <xs:annotation>
              <xs:documentation>Extracted pay statement details</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="assetId" type="xs:string">
            <xs:annotation>
              <xs:documentation>An asset ID. Generated by Connect or by using the Store Customer Pay Statement API.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="employmentHistory" type="schemas:PayrollEmploymentHistory">
            <xs:annotation>
              <xs:documentation>An array of employment histories, one for each of the consumer's verified employers</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="income" type="schemas:ReportIncomeStreamSummary" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CashFlowMonthlyCashFlowCredits">
        <xs:sequence>
          <xs:element minOccurs="1" name="month" type="xs:long">
            <xs:annotation>
              <xs:documentation>One instance for each complete calendar month in the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="numberOfCredits" type="xs:string">
            <xs:annotation>
              <xs:documentation>Number of credits by month</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="totalCreditsAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>Total amount of credits by month</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="largestCredit" type="xs:double">
            <xs:annotation>
              <xs:documentation>Largest credit by month</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="numberOfCreditsLessTransfers" type="xs:string">
            <xs:annotation>
              <xs:documentation>Number of credits by month (less transfers)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="totalCreditsAmountLessTransfers" type="xs:double">
            <xs:annotation>
              <xs:documentation>Total amount of credits by month (less transfers)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="averageCreditAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>The average credit amount</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="estimatedNumberOfLoanDeposits" type="xs:string">
            <xs:annotation>
              <xs:documentation>The estimated number of loan deposits</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="estimatedLoanDepositAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>The estimated loan deposit amount</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CashFlowCashFlowCredit">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="monthlyCashFlowCredits" type="schemas:CashFlowMonthlyCashFlowCredits">
            <xs:annotation>
              <xs:documentation>List of attributes for each month</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="twelveMonthCreditTotal" type="xs:double">
            <xs:annotation>
              <xs:documentation>Sum of all credit transactions for each month by account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="twelveMonthCreditTotalLessTransfers" type="xs:double">
            <xs:annotation>
              <xs:documentation>Sum of all monthly credit transactions without transfers for the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="sixMonthCreditTotal" type="xs:double">
            <xs:annotation>
              <xs:documentation>Sum of six month credit transactions</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="sixMonthCreditTotalLessTransfers" type="xs:double">
            <xs:annotation>
              <xs:documentation>Sum of six month credit transactions without transfers</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="twoMonthCreditTotal" type="xs:double">
            <xs:annotation>
              <xs:documentation>Sum of two month credit transactions</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="twoMonthCreditTotalLessTransfers" type="xs:double">
            <xs:annotation>
              <xs:documentation>Sum of two month credit transactions without transfers</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TransactionsReportAccount">
        <xs:annotation>
          <xs:documentation>Fields used for the Transaction History Report (CRA products)</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:long">
            <xs:annotation>
              <xs:documentation>The Finicity account ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="name" type="xs:string">
            <xs:annotation>
              <xs:documentation>The account name from the financial institution.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="number" type="xs:string">
            <xs:annotation>
              <xs:documentation>The account number from the financial institution (obfuscated)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>The list of supported account types.
* "checking": Standard checking
* "savings": Standard savings
* "cd": Certificates of deposit
* "moneyMarket": Money Market
* "creditCard": Standard credit cards
* "lineOfCredit": Home equity, line of credit
* "investment": Generic investment (no details)
* "investmentTaxDeferred": Generic tax-advantaged investment (no details)
* "employeeStockPurchasePlan": ESPP, Employee Stock Ownership Plans (ESOP), Stock Purchase Plans
* "ira": Individual Retirement Account (not Rollover or Roth)
* "401k": 401K Plan
* "roth": Roth IRA, Roth 401K
* "403b": 403B Plan
* "529plan": 529 Plan (True value is 529)
* "rollover": Rollover IRA
* "ugma": Uniform Gifts to Minors Act
* "utma": Uniform Transfers to Minors Act
* "keogh": Keogh Plan
* "457plan": 457 Plan (True value is 457)
* "401a": 401A Plan
* "brokerageAccount": Brokerage Account
* "educationSavings": Education Savings Account that is not a 529
* "healthSavingsAccount": HSA (Health Savings Accounts)
* "pension": Pension
* "profitSharingPlan": Profit Sharing Plan
* "roth401k": Roth 401K
* "sepIRA": Simplified Employee Pension IRA
* "simpleIRA": Simple IRA
* "thriftSavingsPlan": Thrift Savings Plan
* "variableAnnuity": Variable Annuity
* "cryptocurrency": Cryptocurrency Wallet, Cryptocurrency Account
* "mortgage": Standard Mortgages
* "loan": Auto loans, equity loans, other loans
* "studentLoan": Student Loan
* "studentLoanGroup": Student Loan Group
* "studentLoanAccount": Student Loan Account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="aggregationStatusCode" type="xs:integer">
            <xs:annotation>
              <xs:documentation>The status of the most recent aggregation attempt for this account. Note: non-zero means the account was not accessed successfully for this report, and additional fields for this account may not be reliable.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="balance" type="xs:double">
            <xs:annotation>
              <xs:documentation>The cleared balance of the account as-of `balanceDate`</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="balanceDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A timestamp showing when the balance was captured</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="transactions" type="schemas:ReportTransaction">
            <xs:annotation>
              <xs:documentation>a list of transaction records</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VOAReportAccount">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:long">
            <xs:annotation>
              <xs:documentation>The ID of the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="number" type="xs:string">
            <xs:annotation>
              <xs:documentation>The account number from the institution (all digits except the last four are obfuscated)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ownerName" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name(s) of the account owner(s). This field is optional. If no owner information is available, this field will not appear in the report.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ownerAddress" type="xs:string">
            <xs:annotation>
              <xs:documentation>The mailing address of the account owner(s). This field is optional. If no owner information is available, this field will not appear in the report.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="name" type="xs:string">
            <xs:annotation>
              <xs:documentation>The account name from the institution</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>One of the values from account types</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="availableBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>The available balance for the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="aggregationStatusCode" type="xs:integer">
            <xs:annotation>
              <xs:documentation>The status of the most recent aggregation attempt</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="balance" type="xs:double">
            <xs:annotation>
              <xs:documentation>The cleared balance of the account as-of balanceDate</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="balanceDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A timestamp showing when the balance was captured</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="averageMonthlyBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>The average monthly balance of this account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="totNumberInsufficientFundsFeeDebitTxAccount" type="xs:long">
            <xs:annotation>
              <xs:documentation>The count for the total number of insufficient funds transactions, based on the `fromDate` of the report.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="totNumberInsufficientFundsFeeDebitTxOver2MonthsAccount" type="xs:long">
            <xs:annotation>
              <xs:documentation>The count for the total number of insufficient funds transactions for the last two months, based on the `fromDate` of the report.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount" type="xs:long">
            <xs:annotation>
              <xs:documentation>The number of days since the most recent insufficient funds transaction, based on the `fromDate` of the report.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="transactions" type="schemas:ReportTransaction">
            <xs:annotation>
              <xs:documentation>a list of transaction records</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="details" type="schemas:AccountDetails" />
          <xs:element minOccurs="0" name="asset" type="schemas:PrequalificationReportAssetSummary" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VOAWithIncomeReportAccount">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:long">
            <xs:annotation>
              <xs:documentation>The ID of the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="number" type="xs:string">
            <xs:annotation>
              <xs:documentation>The account number from the institution (all digits except the last four are obfuscated)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ownerName" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name(s) of the account owner(s). This field is optional. If no owner information is available, this field will not appear in the report.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ownerAddress" type="xs:string">
            <xs:annotation>
              <xs:documentation>The mailing address of the account owner(s). This field is optional. If no owner information is available, this field will not appear in the report.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="name" type="xs:string">
            <xs:annotation>
              <xs:documentation>The account name from the institution</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>One of the values from account types</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="availableBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>The available balance for the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="aggregationStatusCode" type="xs:integer">
            <xs:annotation>
              <xs:documentation>The status of the most recent aggregation attempt</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="balance" type="xs:double">
            <xs:annotation>
              <xs:documentation>The cleared balance of the account as-of balanceDate</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="balanceDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A timestamp showing when the balance was captured</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="averageMonthlyBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>The average monthly balance of this account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="totNumberInsufficientFundsFeeDebitTxAccount" type="xs:long">
            <xs:annotation>
              <xs:documentation>The count for the total number of insufficient funds transactions, based on the `fromDate` of the report.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="totNumberInsufficientFundsFeeDebitTxOver2MonthsAccount" type="xs:long">
            <xs:annotation>
              <xs:documentation>The count for the total number of insufficient funds transactions for the last two months, based on the `fromDate` of the report.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount" type="xs:long">
            <xs:annotation>
              <xs:documentation>The number of days since the most recent insufficient funds transaction, based on the `fromDate` of the report.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="transactions" type="schemas:ReportTransaction">
            <xs:annotation>
              <xs:documentation>a list of transaction records</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="details" type="schemas:AccountDetails" />
          <xs:element minOccurs="0" name="asset" type="schemas:PrequalificationReportAssetSummary" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="incomeStreams" type="schemas:VOAIReportIncomeStream">
            <xs:annotation>
              <xs:documentation>A list of income stream records</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VOETransactionsReportAccount">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:long">
            <xs:annotation>
              <xs:documentation>The ID of the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="number" type="xs:string">
            <xs:annotation>
              <xs:documentation>The account number from the institution (all digits except the last four are obfuscated)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ownerName" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name(s) of the account owner(s). This field is optional. If no owner information is available, this field will not appear in the report.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ownerAddress" type="xs:string">
            <xs:annotation>
              <xs:documentation>The mailing address of the account owner(s). This field is optional. If no owner information is available, this field will not appear in the report.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="name" type="xs:string">
            <xs:annotation>
              <xs:documentation>The account name from the institution</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>One of the values from account types</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="aggregationStatusCode" type="xs:integer">
            <xs:annotation>
              <xs:documentation>The status of the most recent aggregation attempt</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="incomeStreams" type="schemas:VOETransactionsReportIncomeStream">
            <xs:annotation>
              <xs:documentation>A list of income stream records</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VOIETXVerifyReportAccount">
        <xs:sequence>
          <xs:element minOccurs="1" name="id" type="xs:long">
            <xs:annotation>
              <xs:documentation>The ID of the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="number" type="xs:string">
            <xs:annotation>
              <xs:documentation>The account number from the institution (all digits except the last four are obfuscated)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="ownerName" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name(s) of the account owner(s). This field is optional. If no owner information is available, this field will not appear in the report.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="ownerAddress" type="xs:string">
            <xs:annotation>
              <xs:documentation>The mailing address of the account owner(s). This field is optional. If no owner information is available, this field will not appear in the report.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="name" type="xs:string">
            <xs:annotation>
              <xs:documentation>The account name from the institution</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>One of the values from account types</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="aggregationStatusCode" type="xs:integer">
            <xs:annotation>
              <xs:documentation>The status of the most recent aggregation attempt</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="incomeStreams" type="schemas:VOIETXVerifyReportIncomeStream">
            <xs:annotation>
              <xs:documentation>A list of income stream records</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="balance" type="xs:double">
            <xs:annotation>
              <xs:documentation>The cleared balance of the account as-of `balanceDate`</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="averageMonthlyBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>The average monthly balance of this account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="transactions" type="schemas:ReportTransaction">
            <xs:annotation>
              <xs:documentation>a list of transaction records</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="availableBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>The available balance for the account</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VOIReportAccount">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:long">
            <xs:annotation>
              <xs:documentation>The ID of the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="number" type="xs:string">
            <xs:annotation>
              <xs:documentation>The account number from the institution (all digits except the last four are obfuscated)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ownerName" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name(s) of the account owner(s). This field is optional. If no owner information is available, this field will not appear in the report.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ownerAddress" type="xs:string">
            <xs:annotation>
              <xs:documentation>The mailing address of the account owner(s). This field is optional. If no owner information is available, this field will not appear in the report.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="name" type="xs:string">
            <xs:annotation>
              <xs:documentation>The account name from the institution</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>One of the values from account types</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="aggregationStatusCode" type="xs:integer">
            <xs:annotation>
              <xs:documentation>The status of the most recent aggregation attempt</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="incomeStreams" type="schemas:VOIReportIncomeStream">
            <xs:annotation>
              <xs:documentation>A list of income stream records</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="balance" type="xs:double">
            <xs:annotation>
              <xs:documentation>The cleared balance of the account as-of `balanceDate`</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="averageMonthlyBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>The average monthly balance of this account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="transactions" type="schemas:ReportTransaction">
            <xs:annotation>
              <xs:documentation>a list of transaction records</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="availableBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>The available balance for the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="currentBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>Current balance of the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="beginningBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>Beginning balance of account per the time period in the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="miscDeposits" type="schemas:ReportTransaction">
            <xs:annotation>
              <xs:documentation>A list of miscellaneous deposits</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VOIReportIncomeStream">
        <xs:sequence>
          <xs:element minOccurs="1" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>Income stream ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="name" type="xs:string">
            <xs:annotation>
              <xs:documentation>A human-readable name based on the `normalizedPayee` name of the transactions for this income stream</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>Possible values: "ACTIVE", "INACTIVE"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="estimateInclusion" type="xs:string">
            <xs:annotation>
              <xs:documentation>Possible values: "HIGH", "MODERATE", "LOW", "NO"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="confidence" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Level of confidence that the deposit stream represents income (example: 85%)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="cadence" type="schemas:CadenceDetails" />
          <xs:element minOccurs="1" maxOccurs="unbounded" name="netMonthly" type="schemas:NetMonthly">
            <xs:annotation>
              <xs:documentation>A list of net monthly records. One instance for each complete calendar month in the report.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="netAnnual" type="xs:double">
            <xs:annotation>
              <xs:documentation>Sum of all values in `netMonthlyIncome` over the previous 12 months</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="projectedNetAnnual" type="xs:double">
            <xs:annotation>
              <xs:documentation>Projected net income over the next 12 months, across all income streams, based on `netAnnualIncome`</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="estimatedGrossAnnual" type="xs:double">
            <xs:annotation>
              <xs:documentation>Before-tax gross annual income (estimated from `netAnnual`) across all income stream in the past 12 months</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="projectedGrossAnnual" type="xs:double">
            <xs:annotation>
              <xs:documentation>Projected gross income over the next 12 months, across all active income streams, based on `projectedNetAnnual`</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="averageMonthlyIncomeNet" type="xs:double">
            <xs:annotation>
              <xs:documentation>Monthly average amount over the previous 24 months</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="incomeStreamMonths" type="xs:integer">
            <xs:annotation>
              <xs:documentation>The number of months the income transactions are observed</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="transactions" type="schemas:ReportTransaction">
            <xs:annotation>
              <xs:documentation>A list of transaction records</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VOETransactionsReportIncomeStream">
        <xs:sequence>
          <xs:element minOccurs="1" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>Income stream ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="name" type="xs:string">
            <xs:annotation>
              <xs:documentation>A human-readable name based on the `normalizedPayee` name of the transactions for this income stream</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>Possible values: "ACTIVE", "INACTIVE"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="estimateInclusion" type="xs:string">
            <xs:annotation>
              <xs:documentation>Possible values: "HIGH", "MODERATE", "LOW", "NO"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="confidence" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Level of confidence that the deposit stream represents income (example: 85%)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="cadence" type="schemas:CadenceDetails" />
          <xs:element minOccurs="1" name="daysSinceLastTransaction" type="xs:integer">
            <xs:annotation>
              <xs:documentation>The number of days since the last credit transaction for the particular income stream</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="nextExpectedTransactionDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>The next expected credit transaction date for the particular income stream, based on the cadence</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="incomeStreamMonths" type="xs:integer">
            <xs:annotation>
              <xs:documentation>The number of months the income transactions are observed</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="transactions" type="schemas:ReportTransaction">
            <xs:annotation>
              <xs:documentation>A list of transaction records</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VOIETXVerifyReportIncomeStream">
        <xs:sequence>
          <xs:element minOccurs="1" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>Finicity’s income stream ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="name" type="xs:string">
            <xs:annotation>
              <xs:documentation>A human-readable name based on the `normalizedPayee` name of the transactions for this income stream</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>Possible values: "ACTIVE", "INACTIVE"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="confidence" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Level of confidence that the deposit stream represents income (example: 85%)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="cadence" type="schemas:CadenceDetails" />
          <xs:element minOccurs="1" maxOccurs="unbounded" name="netMonthly" type="schemas:NetMonthly">
            <xs:annotation>
              <xs:documentation>A list of net monthly records. One instance for each complete calendar month in the report.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="netAnnual" type="xs:double">
            <xs:annotation>
              <xs:documentation>Sum of all values in `netMonthlyIncome` over the previous 12 months</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="projectedNetAnnual" type="xs:double">
            <xs:annotation>
              <xs:documentation>Projected net income over the next 12 months, across all income streams, based on `netAnnualIncome`</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="estimatedGrossAnnual" type="xs:double">
            <xs:annotation>
              <xs:documentation>Before-tax gross annual income (estimated from `netAnnual`) across all income stream in the past 12 months</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="projectedGrossAnnual" type="xs:double">
            <xs:annotation>
              <xs:documentation>Projected gross income over the next 12 months, across all active income streams, based on `projectedNetAnnual`</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="averageMonthlyIncomeNet" type="xs:double">
            <xs:annotation>
              <xs:documentation>Monthly average amount over the previous 24 months</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="incomeStreamMonths" type="xs:integer">
            <xs:annotation>
              <xs:documentation>The number of months the income transactions are observed</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="transactions" type="schemas:ReportTransaction">
            <xs:annotation>
              <xs:documentation>A list of transaction records</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VOAIReportIncomeStream">
        <xs:annotation>
          <xs:documentation>A report income stream record</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>Income stream ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="name" type="xs:string">
            <xs:annotation>
              <xs:documentation>A human-readable name based on the `normalizedPayee` name of the transactions for this income stream</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>Possible values: "ACTIVE", "INACTIVE"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="estimateInclusion" type="xs:string">
            <xs:annotation>
              <xs:documentation>Possible values: "HIGH", "MODERATE", "LOW", "NO"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="confidence" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Level of confidence that the deposit stream represents income (example: 85%)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="cadence" type="schemas:CadenceDetails" />
          <xs:element minOccurs="1" maxOccurs="unbounded" name="netMonthly" type="schemas:NetMonthly">
            <xs:annotation>
              <xs:documentation>A list of net monthly records. One instance for each complete calendar month in the report.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="netAnnual" type="xs:double">
            <xs:annotation>
              <xs:documentation>Sum of all values in `netMonthlyIncome` over the previous 12 months</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="projectedNetAnnual" type="xs:double">
            <xs:annotation>
              <xs:documentation>Projected net income over the next 12 months, across all income streams, based on `netAnnualIncome`</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="estimatedGrossAnnual" type="xs:double">
            <xs:annotation>
              <xs:documentation>Before-tax gross annual income (estimated from `netAnnual`) across all income stream in the past 12 months</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="projectedGrossAnnual" type="xs:double">
            <xs:annotation>
              <xs:documentation>Projected gross income over the next 12 months, across all active income streams, based on `projectedNetAnnual`</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="averageMonthlyIncomeNet" type="xs:double">
            <xs:annotation>
              <xs:documentation>Monthly average amount over the previous 24 months</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="incomeStreamMonths" type="xs:integer">
            <xs:annotation>
              <xs:documentation>The number of months the income transactions are observed</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="transactions" type="schemas:ReportTransaction">
            <xs:annotation>
              <xs:documentation>A list of transaction records</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CadenceDetails">
        <xs:sequence>
          <xs:element minOccurs="0" name="startDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>`postedDate` of the first deposit transaction</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="stopDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>`postedDate` of the final deposit transaction (omitted if status is active)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="days" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Number of days between the recurring deposits</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="NetMonthly">
        <xs:sequence>
          <xs:element minOccurs="1" name="month" type="xs:long">
            <xs:annotation>
              <xs:documentation>Timestamp for the first day of this month</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="net" type="xs:double">
            <xs:annotation>
              <xs:documentation>Total income during the given month, across all income streams</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CashFlowReportAccount">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>Finicity account ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ownerName" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name(s) of the account owner(s), retrieved from the institution.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ownerAddress" type="xs:string">
            <xs:annotation>
              <xs:documentation>The mailing address of the account owner, retrieved from the institution.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="name" type="xs:string">
            <xs:annotation>
              <xs:documentation>The account name from the institution</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="number" type="xs:string">
            <xs:annotation>
              <xs:documentation>The account number from the institution (obfuscated)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>CFR: `ALL` (`checking` / `savings` / `loan` / `mortgage` / `credit card` / `CD` / `MM` / `investment`...)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="aggregationStatusCode" type="xs:string">
            <xs:annotation>
              <xs:documentation>The status of the most recent aggregation attempt for this account (non-zero means the account was not accessed successfully for this report, and additional fields for this account may not be reliable)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="currentBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>The cleared balance of the account as-of `balanceDate`</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="availableBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>Available balance</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="balanceDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A timestamp showing when the `balance` was captured</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="transactions" type="schemas:ReportTransaction">
            <xs:annotation>
              <xs:documentation>a list of transaction records</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="cashFlowBalance" type="schemas:CashFlowCashFlowBalance" />
          <xs:element minOccurs="0" name="cashFlowCredit" type="schemas:CashFlowCashFlowCredit" />
          <xs:element minOccurs="0" name="cashFlowDebit" type="schemas:CashFlowCashFlowDebit" />
          <xs:element minOccurs="0" name="cashFlowCharacteristic" type="schemas:CashFlowCashFlowCharacteristic" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CashFlowMonthlyCashFlowCharacteristics">
        <xs:sequence>
          <xs:element minOccurs="1" name="month" type="xs:long">
            <xs:annotation>
              <xs:documentation>One instance for each complete calendar month in the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="totalCreditsLessTotalDebits" type="xs:double">
            <xs:annotation>
              <xs:documentation>Total Credits - Total Debits by month</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="totalCreditsLessTotalDebitsLessTransfers" type="xs:double">
            <xs:annotation>
              <xs:documentation>Total Credits - Total Debits by month (Without Transfers)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="averageTransactionAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>Average transaction amount by month</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CashFlowCashFlowCharacteristic">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="monthlyCashFlowCharacteristics" type="schemas:CashFlowMonthlyCashFlowCharacteristics">
            <xs:annotation>
              <xs:documentation>List of attributes for each month</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="averageMonthlyNet" type="xs:double">
            <xs:annotation>
              <xs:documentation>Average (Total Credits - Total Debits) for the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="averageMonthlyNetLessTransfers" type="xs:double">
            <xs:annotation>
              <xs:documentation>Average (Total Credits - Total Debits) without transfers for the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="twelveMonthTotalNet" type="xs:double">
            <xs:annotation>
              <xs:documentation>Sum of all monthly (Total Credits - Total Debits) each month for the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="twelveMonthTotalNetLessTransfers" type="xs:double">
            <xs:annotation>
              <xs:documentation>Sum of all monthly (Total Credits - Total Debits) without transfers for the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="sixMonthAverageTotalCreditsLessTotalDebits" type="xs:double">
            <xs:annotation>
              <xs:documentation>6 Month Average (Total Credits - Total Debits)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="sixMonthAverageTotalCreditsLessTotalDebitsLessTransfers" type="xs:double">
            <xs:annotation>
              <xs:documentation>6 Month Average (Total Credits - Total Debits) - (Without Transfers)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="twoMonthAverageTotalCreditsLessTotalDebits" type="xs:double">
            <xs:annotation>
              <xs:documentation>2 Month Average (Total Credits - Total Debits)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="twoMonthAverageTotalCreditsLessTotalDebitsLessTransfers" type="xs:double">
            <xs:annotation>
              <xs:documentation>2 Month Average (Total Credits - Total Debits) - (Without Transfers)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CashFlowMonthlyCashFlowBalances">
        <xs:sequence>
          <xs:element minOccurs="1" name="month" type="xs:long">
            <xs:annotation>
              <xs:documentation>One instance for each complete calendar month in the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="minDailyBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>Min Daily Balance for each month</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="maxDailyBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>Max Daily Balance for each month</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="averageDailyBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>Average Daily Balance for each month</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="standardDeviationOfDailyBalance" type="xs:string">
            <xs:annotation>
              <xs:documentation>Standard Deviation of Daily Balance for each month</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="numberOfDaysNegativeBalance" type="xs:string">
            <xs:annotation>
              <xs:documentation>Number of Days Negative Balance for each month</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="numberOfDaysPositiveBalance" type="xs:string">
            <xs:annotation>
              <xs:documentation>Number of Days positive balance for each month</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CashFlowCashFlowBalance">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="monthlyCashFlowBalances" type="schemas:CashFlowMonthlyCashFlowBalances">
            <xs:annotation>
              <xs:documentation>List of attributes for each month</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="minDailyBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>Min daily balance across entire transaction history</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="maxDailyBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>Max Daily Balance across entire transaction history</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="twelveMonthAverageDailyBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>Average Daily Balance across twelve months for the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="sixMonthAverageDailyBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>Average Daily Balance across six months for the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="twoMonthAverageDailyBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>Average Daily Balance across two months for the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="twelveMonthStandardDeviationOfDailyBalance" type="xs:string">
            <xs:annotation>
              <xs:documentation>Standard Deviation of Daily Balance across twelve months for the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="sixMonthStandardDeviationOfDailyBalance" type="xs:string">
            <xs:annotation>
              <xs:documentation>Standard Deviation of Daily Balance across six months for the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="twoMonthStandardDeviationOfDailyBalance" type="xs:string">
            <xs:annotation>
              <xs:documentation>Standard Deviation of Daily Balance across two months for the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="numberDaysNegativeBalance" type="xs:string">
            <xs:annotation>
              <xs:documentation>Number of Days Negative Balance over entire transaction history</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="numberOfDaysPositiveBalance" type="xs:string">
            <xs:annotation>
              <xs:documentation>Number of Days positive balance over entire transaction history</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ReportInstitution">
        <xs:sequence>
          <xs:element minOccurs="1" name="id" type="xs:long">
            <xs:annotation>
              <xs:documentation>The ID of a financial institution, represented as a number</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="name" type="xs:string">
            <xs:annotation>
              <xs:documentation>Finicity institution name</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="urlHomeApp" type="xs:string">
            <xs:annotation>
              <xs:documentation>The URL of the Financial Institution</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="accounts" type="schemas:ReportInstitutionAccount">
            <xs:annotation>
              <xs:documentation>A list of account records</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ReportInstitutionAccount">
        <xs:annotation>
          <xs:documentation>An account record</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>Finicity account ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="ownerName" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name(s) of the account owner(s), retrieved from the institution.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="ownerAddress" type="xs:string">
            <xs:annotation>
              <xs:documentation>The mailing address of the account owner, retrieved from the institution.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="name" type="xs:string">
            <xs:annotation>
              <xs:documentation>The account name from the institution</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="number" type="xs:string">
            <xs:annotation>
              <xs:documentation>The account number from the institution (obfuscated)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>CFR: `ALL` (`checking` / `savings` / `loan` / `mortgage` / `credit card` / `CD` / `MM` / `investment`...)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="aggregationStatusCode" type="xs:string">
            <xs:annotation>
              <xs:documentation>The status of the most recent aggregation attempt for this account (non-zero means the account was not accessed successfully for this report, and additional fields for this account may not be reliable)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="currentBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>The cleared balance of the account as-of `balanceDate`</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="availableBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>Available balance</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="balanceDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A timestamp showing when the `balance` was captured</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="transactions" type="schemas:ReportTransaction">
            <xs:annotation>
              <xs:documentation>a list of transaction records</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="cashFlowBalance" type="schemas:CashFlowCashFlowBalance" />
          <xs:element minOccurs="0" name="cashFlowCredit" type="schemas:CashFlowCashFlowCredit" />
          <xs:element minOccurs="0" name="cashFlowDebit" type="schemas:CashFlowCashFlowDebit" />
          <xs:element minOccurs="0" name="cashFlowCharacteristic" type="schemas:CashFlowCashFlowCharacteristic" />
          <xs:element minOccurs="1" name="balance" type="xs:double">
            <xs:annotation>
              <xs:documentation>The cleared balance of the account as-of `balanceDate`</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="averageMonthlyBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>The average monthly balance of the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="totNumberInsufficientFundsFeeDebitTxAccount" type="xs:integer">
            <xs:annotation>
              <xs:documentation>The count for the total number of insufficient funds transactions, based on the `fromDate` of the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount" type="xs:integer">
            <xs:annotation>
              <xs:documentation>The total number of  insufficient funds fees for the account over six months</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount" type="xs:long">
            <xs:annotation>
              <xs:documentation>The total number of days since the most recent insufficient funds fee for the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="asset" type="schemas:PrequalificationReportAssetSummary" />
          <xs:element minOccurs="0" name="details" type="schemas:AccountDetails" />
          <xs:element minOccurs="0" name="totNumberInsufficientFundsFeeDebitTxOver2MonthsAccount" type="xs:long">
            <xs:annotation>
              <xs:documentation>The count for the total number of insufficient funds transactions for the last two months, based on the `fromDate` of the report.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="incomeStreams" type="schemas:VOAIReportIncomeStream2">
            <xs:annotation>
              <xs:documentation>A list of income stream records</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="beginningBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>Beginning balance of account per the time period in the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="miscDeposits" type="schemas:ReportTransaction">
            <xs:annotation>
              <xs:documentation>A list of miscellaneous deposits</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CashFlowReport">
        <xs:annotation>
          <xs:documentation>A Cash Flow report</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="customerType" type="xs:string">
            <xs:annotation>
              <xs:documentation>The type of customer ("active" or "testing" or "" for all types)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="customerId" type="xs:long">
            <xs:annotation>
              <xs:documentation>A customer ID represented as a number. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="requestId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Finicity indicator to track all activity associated with this report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="requesterName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Name of a Finicity partner</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="createdDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Title of the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="consumerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A consumer ID. See Create Consumer API for how to create a consumer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="consumerSsn" type="xs:string">
            <xs:annotation>
              <xs:documentation>Last 4 digits of a SSN</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report type. Possible values:

  * "voi"


  * "voa"


  * "voaHistory"


  * "history"


  * "voieTxVerify"


  * "voieWithReport"


  * "voieWithInterview"


  * "paystatement"


  * "preQualVoa"


  * "assetSummary"


  * "voie"


  * "transactions"


  * "statement"


  * "voiePayroll"


  * "voeTransactions"


  * "voePayroll"


  * "cfrp"


  * "cfrb"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report generation status. Possible values: "inProgress", "success", "failure".</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="errors" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>In case errors occurred during the report generation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="portfolioId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A unique identifier that will be consistent across all reports created for the same customer</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="startDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>The `postedDate` of the earliest transaction analyzed for the report. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="endDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>The `postedDate` of the latest transaction analyzed for the report. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="days" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Number of days covered by the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="seasoned" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>"true" if the report covers more than 365 days</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="institutions" type="schemas:ReportInstitution">
            <xs:annotation>
              <xs:documentation>A list of institution records, including information about the individual accounts used in this report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="cashFlowBalanceSummary" type="schemas:CashFlowCashFlowBalanceSummary" />
          <xs:element minOccurs="0" name="cashFlowCreditSummary" type="schemas:CashFlowCashFlowCreditSummary" />
          <xs:element minOccurs="0" name="cashFlowDebitSummary" type="schemas:CashFlowCashFlowDebitSummary" />
          <xs:element minOccurs="0" name="cashFlowCharacteristicsSummary" type="schemas:CashFlowCashFlowCharacteristicsSummary" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="possibleLoanDeposits" type="schemas:CashFlowPossibleLoanDeposits">
            <xs:annotation>
              <xs:documentation>A possible loan deposits record</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CashFlowPossibleLoanDeposits">
        <xs:sequence>
          <xs:element minOccurs="1" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>Finicity institution ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="name" type="xs:string">
            <xs:annotation>
              <xs:documentation>Finicity institution name</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="urlHomeApp" type="xs:string">
            <xs:annotation>
              <xs:documentation>The URL of the Financial Institution</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="accounts" type="schemas:CashFlowPossibleLoanDepositsAccount">
            <xs:annotation>
              <xs:documentation>A list of account records</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CashFlowPossibleLoanDepositsAccount">
        <xs:sequence>
          <xs:element minOccurs="1" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>Finicity account ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="ownerName" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name(s) of the account owner(s), retrieved from the institution.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="ownerAddress" type="xs:string">
            <xs:annotation>
              <xs:documentation>The mailing address of the account owner, retrieved from the institution.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="name" type="xs:string">
            <xs:annotation>
              <xs:documentation>The account name from the institution</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="number" type="xs:string">
            <xs:annotation>
              <xs:documentation>The account number from the institution (obfuscated)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>CFR: `ALL` (`checking` / `savings` / `loan` / `mortgage` / `credit card` / `CD` / `MM` / `investment`...)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="aggregationStatusCode" type="xs:string">
            <xs:annotation>
              <xs:documentation>The status of the most recent aggregation attempt for this account (non-zero means the account was not accessed successfully for this report, and additional fields for this account may not be reliable)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="currentBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>The cleared balance of the account as-of `balanceDate`</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="availableBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>Available balance</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="balanceDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A timestamp showing when the `balance` was captured</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="transactions" type="schemas:ReportTransaction">
            <xs:annotation>
              <xs:documentation>a list of transaction records</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ReportTransaction">
        <xs:sequence>
          <xs:element minOccurs="1" name="id" type="xs:long">
            <xs:annotation>
              <xs:documentation>A transaction ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="amount" type="xs:double">
            <xs:annotation>
              <xs:documentation>The total amount of the transaction. Transactions for deposits are positive values, withdrawals and debits are negative values.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="postedDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A timestamp showing when the transaction was posted or cleared by the institution</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="description" type="xs:string">
            <xs:annotation>
              <xs:documentation>The description of the transaction, as provided by the institution (often known as `payee`). In the event that this field is left blank by the institution, Finicity will pass a value of "No description provided by institution". All other values are provided by the institution.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="memo" type="xs:string">
            <xs:annotation>
              <xs:documentation>The memo field of the transaction, as provided by the institution. The institution must provide either a description, a memo, or both. It is recommended to concatenate the two fields into a single value.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="normalizedPayee" type="xs:string">
            <xs:annotation>
              <xs:documentation>A normalized payee, derived from the transaction's `description` and `memo` fields</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="institutionTransactionId" type="xs:string">
            <xs:annotation>
              <xs:documentation>The unique identifier given by the FI for each transaction</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="category" type="xs:string">
            <xs:annotation>
              <xs:documentation>One of the values from Categories (assigned based on the payee name)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>One of the values from transaction types</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="securityType" type="xs:string">
            <xs:annotation>
              <xs:documentation>The type of investment security (VOA only)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="symbol" type="xs:string">
            <xs:annotation>
              <xs:documentation>Investment symbol (VOA only)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="commission" type="xs:double" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CashFlowMonthlyCashFlowDebitSummaries">
        <xs:sequence>
          <xs:element minOccurs="1" name="month" type="xs:long">
            <xs:annotation>
              <xs:documentation>One instance for each complete calendar month in the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="numberOfDebits" type="xs:string">
            <xs:annotation>
              <xs:documentation>Number of Debits by month across all accounts</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="totalDebitsAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>Total Amount of Debits by month across all accounts</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="largestDebit" type="xs:double">
            <xs:annotation>
              <xs:documentation>Largest Debit by month</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="numberOfDebitsLessTransfers" type="xs:string">
            <xs:annotation>
              <xs:documentation>Number of Debits by month (less transfers)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="totalDebitsAmountLessTransfers" type="xs:double">
            <xs:annotation>
              <xs:documentation>Total amount of debits by month (less transfers)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="averageDebitAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>The average debit amount</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CashFlowCashFlowDebitSummary">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="monthlyCashFlowDebitSummaries" type="schemas:CashFlowMonthlyCashFlowDebitSummaries">
            <xs:annotation>
              <xs:documentation>List of attributes for each month</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="twelveMonthDebitTotal" type="xs:double">
            <xs:annotation>
              <xs:documentation>Sum of all monthly debit transactions for each month by account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="twelveMonthDebitTotalLessTransfers" type="xs:double">
            <xs:annotation>
              <xs:documentation>Sum of all monthly debit transactions without transfers for the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="sixMonthDebitTotal" type="xs:double">
            <xs:annotation>
              <xs:documentation>Six month sum of all debit transactions by account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="sixMonthDebitTotalLessTransfers" type="xs:double">
            <xs:annotation>
              <xs:documentation>Six month sum of all debit transactions without transfers for the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="twoMonthDebitTotal" type="xs:double">
            <xs:annotation>
              <xs:documentation>Two month sum of all debit transactions by account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="twoMonthDebitTotalLessTransfers" type="xs:double">
            <xs:annotation>
              <xs:documentation>Two month sum of all debit transactions without transfers for the account</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CashFlowMonthlyCashFlowCharacteristicSummaries">
        <xs:sequence>
          <xs:element minOccurs="1" name="month" type="xs:long">
            <xs:annotation>
              <xs:documentation>One instance for each complete calendar month in the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="totalCreditsLessTotalDebits" type="xs:double">
            <xs:annotation>
              <xs:documentation>Total Credits - Total Debits by month across all accounts</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="totalCreditsLessTotalDebitsLessTransfers" type="xs:double">
            <xs:annotation>
              <xs:documentation>Total Credits - Total Debits by month (Without Transfers) across all accounts</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="averageTransactionAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>Average transaction amount across all accounts</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CashFlowCashFlowCharacteristicsSummary">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="monthlyCashFlowCharacteristicSummaries" type="schemas:CashFlowMonthlyCashFlowCharacteristicSummaries">
            <xs:annotation>
              <xs:documentation>List of attributes for each month</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="averageMonthlyNet" type="xs:double">
            <xs:annotation>
              <xs:documentation>Average monthly net amount</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="averageMonthlyNetLessTransfers" type="xs:double">
            <xs:annotation>
              <xs:documentation>Average monthly net less transfers</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="twelveMonthTotalNet" type="xs:double">
            <xs:annotation>
              <xs:documentation>Sum of all monthly (Total Credits - Total Debits) each month by the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="twelveMonthTotalNetLessTransfers" type="xs:double">
            <xs:annotation>
              <xs:documentation>Sum of all monthly (Total Credits - Total Debits) without transfers by the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="sixMonthAverageTotalCreditsLessTotalDebits" type="xs:double">
            <xs:annotation>
              <xs:documentation>6 Month Average (Total Credits - Total Debits) across all accounts</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="sixMonthAverageTotalCreditsLessTotalDebitsLessTransfers" type="xs:double">
            <xs:annotation>
              <xs:documentation>6 Month Average (Total Credits - Total Debits) - (Without Transfers) across all accounts</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="twoMonthAverageTotalCreditsLessTotalDebits" type="xs:double">
            <xs:annotation>
              <xs:documentation>2 Month Average (Total Credits - Total Debits) across all accounts</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="twoMonthAverageTotalCreditsLessTotalDebitsLessTransfers" type="xs:double">
            <xs:annotation>
              <xs:documentation>2 Month Average (Total Credits - Total Debits) - (Without Transfers) across all accounts</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CashFlowCashFlowCreditSummary">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="monthlyCashFlowCreditSummaries" type="schemas:CashFlowMonthlyCashFlowCreditSummaries">
            <xs:annotation>
              <xs:documentation>List of attributes for each month</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="twelveMonthCreditTotal" type="xs:double">
            <xs:annotation>
              <xs:documentation>Sum of all credit transactions for each month for all accounts</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="twelveMonthCreditTotalLessTransfers" type="xs:double">
            <xs:annotation>
              <xs:documentation>Sum of all monthly credit transactions without transfers for all accounts</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="sixMonthCreditTotal" type="xs:double">
            <xs:annotation>
              <xs:documentation>Six month sum of all credit transactions</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="sixMonthCreditTotalLessTransfers" type="xs:double">
            <xs:annotation>
              <xs:documentation>Six month sum of all monthly credit transactions without transfers for all accounts</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="twoMonthCreditTotal" type="xs:double">
            <xs:annotation>
              <xs:documentation>Two month sum of all credit transactions</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="twoMonthCreditTotalLessTransfers" type="xs:double">
            <xs:annotation>
              <xs:documentation>Two month sum of all monthly credit transactions without transfers for all accounts</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CashFlowMonthlycashflowDebits">
        <xs:sequence>
          <xs:element minOccurs="1" name="month" type="xs:long">
            <xs:annotation>
              <xs:documentation>One instance for each complete calendar month in the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="numberOfDebits" type="xs:string">
            <xs:annotation>
              <xs:documentation>Number of Debits by month</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="totalDebitsAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>Total Amount of Debits by month</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="largestDebit" type="xs:double">
            <xs:annotation>
              <xs:documentation>Largest Debit by month</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="numberOfDebitsLessTransfers" type="xs:string">
            <xs:annotation>
              <xs:documentation>Number of Debits by month (less transfers)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="totalDebitsAmountLessTransfers" type="xs:double">
            <xs:annotation>
              <xs:documentation>Total amount of debits by month (less transfers)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="averageDebitAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>The average debit amount</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CashFlowCashFlowDebit">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="monthlyCashFlowDebits" type="schemas:CashFlowMonthlycashflowDebits">
            <xs:annotation>
              <xs:documentation>List of attributes for each month</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="twelveMonthDebitTotal" type="xs:double">
            <xs:annotation>
              <xs:documentation>Sum of all monthly debit transactions for each month by account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="twelveMonthDebitTotalLessTransfers" type="xs:double">
            <xs:annotation>
              <xs:documentation>Sum of all monthly debit transactions without transfers for the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="sixMonthDebitTotal" type="xs:double">
            <xs:annotation>
              <xs:documentation>Six month sum of all debit transactions</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="sixMonthDebitTotalLessTransfers" type="xs:double">
            <xs:annotation>
              <xs:documentation>Six month sum of all debit transactions without transfers for the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="twoMonthDebitTotal" type="xs:double">
            <xs:annotation>
              <xs:documentation>Two month sum of all debit transactions</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="twoMonthDebitTotalLessTransfers" type="xs:double">
            <xs:annotation>
              <xs:documentation>Two month sum of all debit transactions without transfers for the account</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CashFlowCashFlowBalanceSummary">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="monthlyCashFlowBalanceSummaries" type="schemas:CashFlowMonthlyCashFlowBalanceSummaries">
            <xs:annotation>
              <xs:documentation>List of attributes for each month</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="minDailyBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>Min Daily Balance across entire transaction history  for all accounts</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="maxDailyBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>Max Daily Balance across entire transaction history for all accounts</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="twelveMonthAverageDailyBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>Average Daily Balance across twelve months for all accounts</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="sixMonthAverageDailyBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>Average Daily Balance across six months for all accounts</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="twoMonthAverageDailyBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>Average Daily Balance across two months for all accounts</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="twelveMonthStandardDeviationOfDailyBalance" type="xs:string">
            <xs:annotation>
              <xs:documentation>Standard Deviation of Daily Balance across twelve months for all accounts</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="sixMonthStandardDeviationOfDailyBalance" type="xs:string">
            <xs:annotation>
              <xs:documentation>Standard Deviation of Daily Balance across six months for all accounts</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="twoMonthStandardDeviationOfDailyBalance" type="xs:string">
            <xs:annotation>
              <xs:documentation>Standard Deviation of Daily Balance across two months for all accounts</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="numberOfDaysNegativeBalance" type="xs:string">
            <xs:annotation>
              <xs:documentation>Number of Days Negative Balance over entire transaction history for all accounts</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="numberOfDaysPositiveBalance" type="xs:string">
            <xs:annotation>
              <xs:documentation>Number of Days Positive Balance over entire transaction history for all accounts</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CashFlowMonthlyCashFlowBalanceSummaries">
        <xs:sequence>
          <xs:element minOccurs="1" name="month" type="xs:long">
            <xs:annotation>
              <xs:documentation>One instance for each complete calendar month in the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="minDailyBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>Min Daily Balance for each month for all accounts</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="maxDailyBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>Max Daily Balance for each month for all accounts</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="averageDailyBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>Average Daily Balance for each month for all accounts</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="standardDeviationOfDailyBalance" type="xs:string">
            <xs:annotation>
              <xs:documentation>Standard Deviation of Daily Balance for each month for all accounts</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="numberOfDaysNegativeBalance" type="xs:string">
            <xs:annotation>
              <xs:documentation>Number of Days Negative Balance for each month for all accounts</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="numberOfDaysPositiveBalance" type="xs:string">
            <xs:annotation>
              <xs:documentation>Number of Days Positive Balance for each month for all accounts</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CashFlowMonthlyCashFlowCreditSummaries">
        <xs:sequence>
          <xs:element minOccurs="1" name="month" type="xs:long">
            <xs:annotation>
              <xs:documentation>One instance for each complete calendar month in the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="numberOfCredits" type="xs:string">
            <xs:annotation>
              <xs:documentation>Number of credits by month across all accounts</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="totalCreditsAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>Total amount of credits by month across all accounts</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="largestCredit" type="xs:double">
            <xs:annotation>
              <xs:documentation>Largest credit by month across all accounts</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="numberOfCreditsLessTransfers" type="xs:string">
            <xs:annotation>
              <xs:documentation>Number of credits by month (less transfers) across all accounts</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="totalCreditsAmountLessTransfers" type="xs:double">
            <xs:annotation>
              <xs:documentation>Total amount of credits by month (less transfers) across all accounts</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="averageCreditAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>The average credit amount</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="estimatedNumberOfLoanDeposits" type="xs:string">
            <xs:annotation>
              <xs:documentation>The estimated number of loan deposits by month</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="estimatedLoanDepositAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>The estimated loan deposit amount by month</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PrequalificationReport">
        <xs:annotation>
          <xs:documentation>A Prequalification report</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="customerType" type="xs:string">
            <xs:annotation>
              <xs:documentation>The type of customer ("active" or "testing" or "" for all types)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="customerId" type="xs:long">
            <xs:annotation>
              <xs:documentation>A customer ID represented as a number. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="requestId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Finicity indicator to track all activity associated with this report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="requesterName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Name of a Finicity partner</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="createdDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Title of the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="consumerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A consumer ID. See Create Consumer API for how to create a consumer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="consumerSsn" type="xs:string">
            <xs:annotation>
              <xs:documentation>Last 4 digits of a SSN</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report type. Possible values:

  * "voi"


  * "voa"


  * "voaHistory"


  * "history"


  * "voieTxVerify"


  * "voieWithReport"


  * "voieWithInterview"


  * "paystatement"


  * "preQualVoa"


  * "assetSummary"


  * "voie"


  * "transactions"


  * "statement"


  * "voiePayroll"


  * "voeTransactions"


  * "voePayroll"


  * "cfrp"


  * "cfrb"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report generation status. Possible values: "inProgress", "success", "failure".</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="errors" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>In case errors occurred during the report generation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="portfolioId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A unique identifier that will be consistent across all reports created for the same customer</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="startDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>The `postedDate` of the earliest transaction analyzed for the report. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="endDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>The `postedDate` of the latest transaction analyzed for the report. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="days" type="xs:integer">
            <xs:annotation>
              <xs:documentation>The number of days covered by the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="seasoned" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>"true" if the report covers more than 180 days</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="consolidatedAvailableBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>The sum of available balance for all of the accounts included in the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="institutions" type="schemas:ReportInstitution">
            <xs:annotation>
              <xs:documentation>A list of institution records, including information about the individual accounts in this report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="assets" type="schemas:PrequalificationReportAssetSummary" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PrequalificationReportAccount">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:long">
            <xs:annotation>
              <xs:documentation>The ID of the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="number" type="xs:string">
            <xs:annotation>
              <xs:documentation>The account number from the institution (all digits except the last four are obfuscated)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ownerName" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the account owner. If no owner information is available, this field won't appear in the report.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ownerAddress" type="xs:string">
            <xs:annotation>
              <xs:documentation>The mailing address of the account owner. If no owner information is available, this field won't appear in the report.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="name" type="xs:string">
            <xs:annotation>
              <xs:documentation>The account name from the institution</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>One of the values from account types</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="aggregationStatusCode" type="xs:integer">
            <xs:annotation>
              <xs:documentation>The status of the most recent aggregation attempt</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="balance" type="xs:double">
            <xs:annotation>
              <xs:documentation>The cleared balance of the account as-of `balanceDate`</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="balanceDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A timestamp of the balance</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="availableBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>Available balance</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="averageMonthlyBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>The average monthly balance of the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="totNumberInsufficientFundsFeeDebitTxAccount" type="xs:integer">
            <xs:annotation>
              <xs:documentation>The count for the total number of insufficient funds transactions, based on the `fromDate` of the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount" type="xs:integer">
            <xs:annotation>
              <xs:documentation>The total number of  insufficient funds fees for the account over six months</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount" type="xs:long">
            <xs:annotation>
              <xs:documentation>The total number of days since the most recent insufficient funds fee for the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="transactions" type="schemas:ReportTransaction">
            <xs:annotation>
              <xs:documentation>a list of transaction records</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="asset" type="schemas:PrequalificationReportAssetSummary" />
          <xs:element minOccurs="0" name="details" type="schemas:AccountDetails" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PrequalificationReportAssetSummary">
        <xs:sequence>
          <xs:element minOccurs="0" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>The asset type: "checking", "savings", "moneyMarket", "cd", "investment"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="availableBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>The available balance for the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="currentBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>The current balance of the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="twoMonthAverage" type="xs:double">
            <xs:annotation>
              <xs:documentation>The two month average daily balance of the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="sixMonthAverage" type="xs:double">
            <xs:annotation>
              <xs:documentation>The six month average daily balance of the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="beginningBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>The beginning balance of the account per the time period of the report</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AccountDetails">
        <xs:sequence>
          <xs:element minOccurs="0" name="interestMarginBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>Only available for investment accounts. Net interest earned after deducting interest paid out.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="availableCashBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>Only available for investment accounts. Amount available for cash withdrawal.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="vestedBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>Only available for investment accounts. Vested amount in account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="currentLoanBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>Only available for investment accounts. Current loan balance.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="availableBalanceAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>The available balance for the account</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PayStatementReport">
        <xs:annotation>
          <xs:documentation>A Pay Statement report</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="customerType" type="xs:string">
            <xs:annotation>
              <xs:documentation>The type of customer ("active" or "testing" or "" for all types)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="customerId" type="xs:long">
            <xs:annotation>
              <xs:documentation>A customer ID represented as a number. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="requestId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Finicity indicator to track all activity associated with this report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="requesterName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Name of a Finicity partner</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="createdDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Title of the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="consumerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A consumer ID. See Create Consumer API for how to create a consumer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="consumerSsn" type="xs:string">
            <xs:annotation>
              <xs:documentation>Last 4 digits of a SSN</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report type. Possible values:

  * "voi"


  * "voa"


  * "voaHistory"


  * "history"


  * "voieTxVerify"


  * "voieWithReport"


  * "voieWithInterview"


  * "paystatement"


  * "preQualVoa"


  * "assetSummary"


  * "voie"


  * "transactions"


  * "statement"


  * "voiePayroll"


  * "voeTransactions"


  * "voePayroll"


  * "cfrp"


  * "cfrb"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report generation status. Possible values: "inProgress", "success", "failure".</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="errors" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>In case errors occurred during the report generation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="portfolioId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A unique identifier that will be consistent across all reports created for the same customer</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="startDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>The `postedDate` of the earliest transaction analyzed for the report. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="endDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>The `postedDate` of the latest transaction analyzed for the report. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="reportStyle" type="xs:string" />
          <xs:element minOccurs="0" name="numberOfBillableAssets" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Total number of billable pay statements included in the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="assetIds" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="payStatements" type="schemas:VOIEPayStatement">
            <xs:annotation>
              <xs:documentation>Extracted pay statement details</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VOIEPayStatement">
        <xs:sequence>
          <xs:element minOccurs="0" name="payPeriod" type="xs:string">
            <xs:annotation>
              <xs:documentation>The pay period of the pay statement</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="billable" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Designates whether the pay statement is billable</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="assetId" type="xs:string">
            <xs:annotation>
              <xs:documentation>The asset ID of the stored pay statement</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="payDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>The listed pay date for the pay statement</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="startDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>The beginning of the pay period</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="endDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>The end of the pay period</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="netPayCurrent" type="xs:double">
            <xs:annotation>
              <xs:documentation>The total pay after deductions for the employee for the current pay period</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="netPayYTD" type="xs:double">
            <xs:annotation>
              <xs:documentation>The total accumulation of pay after deductions for the employee for the current pay year</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="grossPayCurrent" type="xs:double">
            <xs:annotation>
              <xs:documentation>The total pay before deductions for the employee for the current pay period</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="grossPayYTD" type="xs:double">
            <xs:annotation>
              <xs:documentation>The total accumulation of pay before deductions for the employee for the current pay year</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="payrollProvider" type="xs:string">
            <xs:annotation>
              <xs:documentation>The company that provides the pay stub.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="employer" type="schemas:Employer" />
          <xs:element minOccurs="0" name="employee" type="schemas:Employee" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="payStat" type="schemas:PayStat">
            <xs:annotation>
              <xs:documentation>Information pertaining to the earnings on the pay statement</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="deductions" type="schemas:Deduction">
            <xs:annotation>
              <xs:documentation>Information pertaining to deductions on the pay statement</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="directDeposits" type="schemas:DirectDeposit">
            <xs:annotation>
              <xs:documentation>Information pertaining to direct deposits on the pay statement</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Employer">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the employer</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Employee">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the employee</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DirectDeposit">
        <xs:sequence>
          <xs:element minOccurs="0" name="amountCurrent" type="xs:double">
            <xs:annotation>
              <xs:documentation>The amount of the deposit</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="accountLastFour" type="xs:string">
            <xs:annotation>
              <xs:documentation>The last four numbers of the account the deposit went into</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Deduction">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string">
            <xs:annotation>
              <xs:documentation>The normalized category of the deductions in the format [type][number]. The number is the will be the iterating number of the type's occurrence starting at one.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="description" type="xs:string">
            <xs:annotation>
              <xs:documentation>The deduction line's deduction type description</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="amountCurrent" type="xs:double">
            <xs:annotation>
              <xs:documentation>The amount for the deduction line deducted from employee's pay for the specified pay period</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="amountYTD" type="xs:double">
            <xs:annotation>
              <xs:documentation>The amount for the deduction line being deducted from the employee's pay for the current pay year</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>Categorization based on the deduction line's description</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PayStat">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string">
            <xs:annotation>
              <xs:documentation>The normalized category of the earnings with a number appended. The number is the will be the iterating number of the type's occurrence starting at one.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>The categorization based on the earning line's description. Possible values:
* "bereavement"

* "bonus"

* "commission"

* "holiday"

* "jury duty"

* "overtime"

* "pension"

* "pto"

* "regular"

* "sick"

* "tips"

* "unknown"

* "vacation"

* "reimbursement"

* "stock"

* "benefit"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="description" type="xs:string">
            <xs:annotation>
              <xs:documentation>The earnings line's pay type description</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="amountCurrent" type="xs:double">
            <xs:annotation>
              <xs:documentation>The amount for the earning line paid out to the employee for the specified pay period.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="amountYTD" type="xs:double">
            <xs:annotation>
              <xs:documentation>The amount for the earning line being paid out to the employee for the current pay year.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="StatementReport">
        <xs:annotation>
          <xs:documentation>A Statement report</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="customerType" type="xs:string">
            <xs:annotation>
              <xs:documentation>The type of customer ("active" or "testing" or "" for all types)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="customerId" type="xs:long">
            <xs:annotation>
              <xs:documentation>A customer ID represented as a number. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="requestId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Finicity indicator to track all activity associated with this report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="requesterName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Name of a Finicity partner</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="createdDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Title of the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="consumerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A consumer ID. See Create Consumer API for how to create a consumer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="consumerSsn" type="xs:string">
            <xs:annotation>
              <xs:documentation>Last 4 digits of a SSN</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report type. Possible values:

  * "voi"


  * "voa"


  * "voaHistory"


  * "history"


  * "voieTxVerify"


  * "voieWithReport"


  * "voieWithInterview"


  * "paystatement"


  * "preQualVoa"


  * "assetSummary"


  * "voie"


  * "transactions"


  * "statement"


  * "voiePayroll"


  * "voeTransactions"


  * "voePayroll"


  * "cfrp"


  * "cfrb"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report generation status. Possible values: "inProgress", "success", "failure".</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="errors" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>In case errors occurred during the report generation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="assetId" type="xs:string">
            <xs:annotation>
              <xs:documentation>An asset ID. Generated by Connect or by using the Store Customer Pay Statement API.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TransactionsReport">
        <xs:annotation>
          <xs:documentation>A Transactions report</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="customerType" type="xs:string">
            <xs:annotation>
              <xs:documentation>The type of customer ("active" or "testing" or "" for all types)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="customerId" type="xs:long">
            <xs:annotation>
              <xs:documentation>A customer ID represented as a number. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="requestId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Finicity indicator to track all activity associated with this report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="requesterName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Name of a Finicity partner</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="createdDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Title of the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="consumerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A consumer ID. See Create Consumer API for how to create a consumer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="consumerSsn" type="xs:string">
            <xs:annotation>
              <xs:documentation>Last 4 digits of a SSN</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report type. Possible values:

  * "voi"


  * "voa"


  * "voaHistory"


  * "history"


  * "voieTxVerify"


  * "voieWithReport"


  * "voieWithInterview"


  * "paystatement"


  * "preQualVoa"


  * "assetSummary"


  * "voie"


  * "transactions"


  * "statement"


  * "voiePayroll"


  * "voeTransactions"


  * "voePayroll"


  * "cfrp"


  * "cfrb"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report generation status. Possible values: "inProgress", "success", "failure".</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="errors" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>In case errors occurred during the report generation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="portfolioId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A unique identifier that will be consistent across all reports created for the same customer</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="startDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>The `postedDate` of the earliest transaction analyzed for the report. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="endDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>The `postedDate` of the latest transaction analyzed for the report. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="days" type="xs:long">
            <xs:annotation>
              <xs:documentation>Number of days covered by the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="seasoned" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>"true" if the report covers more than 365 days</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="institutions" type="schemas:ReportInstitution">
            <xs:annotation>
              <xs:documentation>A list of institution records</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VOAReport">
        <xs:annotation>
          <xs:documentation>A VOA report</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="customerType" type="xs:string">
            <xs:annotation>
              <xs:documentation>The type of customer ("active" or "testing" or "" for all types)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="customerId" type="xs:long">
            <xs:annotation>
              <xs:documentation>A customer ID represented as a number. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="requestId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Finicity indicator to track all activity associated with this report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="requesterName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Name of a Finicity partner</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="createdDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Title of the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="consumerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A consumer ID. See Create Consumer API for how to create a consumer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="consumerSsn" type="xs:string">
            <xs:annotation>
              <xs:documentation>Last 4 digits of a SSN</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report type. Possible values:

  * "voi"


  * "voa"


  * "voaHistory"


  * "history"


  * "voieTxVerify"


  * "voieWithReport"


  * "voieWithInterview"


  * "paystatement"


  * "preQualVoa"


  * "assetSummary"


  * "voie"


  * "transactions"


  * "statement"


  * "voiePayroll"


  * "voeTransactions"


  * "voePayroll"


  * "cfrp"


  * "cfrb"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report generation status. Possible values: "inProgress", "success", "failure".</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="errors" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>In case errors occurred during the report generation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="portfolioId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A unique identifier that will be consistent across all reports created for the same customer</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="startDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>The `postedDate` of the earliest transaction analyzed for the report. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="endDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>The `postedDate` of the latest transaction analyzed for the report. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="days" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Number of days covered by the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="seasoned" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>"true" if the report covers more than 180 days</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="consolidatedAvailableBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>The sum of available balance for all of the accounts included in the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="institutions" type="schemas:ReportInstitution">
            <xs:annotation>
              <xs:documentation>A list of institution records</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="assets" type="schemas:PrequalificationReportAssetSummary" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VOEPayrollReport">
        <xs:annotation>
          <xs:documentation>A VOE Payroll report</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="customerType" type="xs:string">
            <xs:annotation>
              <xs:documentation>The type of customer ("active" or "testing" or "" for all types)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="customerId" type="xs:long">
            <xs:annotation>
              <xs:documentation>A customer ID represented as a number. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="requestId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Finicity indicator to track all activity associated with this report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="requesterName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Name of a Finicity partner</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="createdDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Title of the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="consumerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A consumer ID. See Create Consumer API for how to create a consumer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="consumerSsn" type="xs:string">
            <xs:annotation>
              <xs:documentation>Last 4 digits of a SSN</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report type. Possible values:

  * "voi"


  * "voa"


  * "voaHistory"


  * "history"


  * "voieTxVerify"


  * "voieWithReport"


  * "voieWithInterview"


  * "paystatement"


  * "preQualVoa"


  * "assetSummary"


  * "voie"


  * "transactions"


  * "statement"


  * "voiePayroll"


  * "voeTransactions"


  * "voePayroll"


  * "cfrp"


  * "cfrb"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report generation status. Possible values: "inProgress", "success", "failure".</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="errors" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>In case errors occurred during the report generation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="portfolioId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A unique identifier that will be consistent across all reports created for the same customer</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="employmentHistory" type="schemas:PayrollEmploymentHistory">
            <xs:annotation>
              <xs:documentation>An array of employment histories, one for each of the consumer's verified employers</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PayrollEmploymentHistory">
        <xs:sequence>
          <xs:element minOccurs="1" name="asOfDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>The last time the payroll data was updated in the payroll provider's system</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="employerName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Name of the employer as stated by the employer in the payroll system</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="payrollSource" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the payroll source where the data was retrieved</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="employee" type="schemas:PayrollEmployeeRecord" />
          <xs:element minOccurs="1" name="employment" type="schemas:PayrollEmploymentRecord" />
          <xs:element minOccurs="1" name="income" type="schemas:PayrollVOEIncomeRecord" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PayrollVOEIncomeRecord">
        <xs:sequence>
          <xs:element minOccurs="1" name="payFrequency" type="xs:string">
            <xs:annotation>
              <xs:documentation>The current pay frequency: &lt;br&gt; * `Daily` &lt;br&gt; * `Weekly` &lt;br&gt; * `Bi-Weekly` &lt;br&gt; * `Bi-Weekly Odd` (Bi-Weekly pay on odd weeks) &lt;br&gt; * `Bi-Weekly Even` (Bi-Weekly pay on even weeks) &lt;br&gt; * `Semi-Monthly` &lt;br&gt; * `Monthly` &lt;br&gt; * `Quarterly` &lt;br&gt;* `Semi-Annual` &lt;br&gt; * `Annual` &lt;br&gt;  * `Every 2.6 wks` &lt;br&gt; * `Every 4 wks` &lt;br&gt; * `Every 5.2 wks`</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PayrollEmployeeRecord">
        <xs:sequence>
          <xs:element minOccurs="1" name="name" type="xs:string">
            <xs:annotation>
              <xs:documentation>Full name of the employee: first, middle (if stated), and last name</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="givenName" type="xs:string">
            <xs:annotation>
              <xs:documentation>First name of employee</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="middleName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Middle name of employee, if stated</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="familyName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Last name of employee</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="address" type="schemas:PayrollEmployeeAddress">
            <xs:annotation>
              <xs:documentation>Array of addresses</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PayrollEmployerAddress">
        <xs:sequence>
          <xs:element minOccurs="0" name="address1" type="xs:string">
            <xs:annotation>
              <xs:documentation>Employer address as stated by the employer in the payroll system</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="city" type="xs:string">
            <xs:annotation>
              <xs:documentation>Employer city as stated by the employer in the payroll system</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="state" type="xs:string">
            <xs:annotation>
              <xs:documentation>Employer state as stated by the employer in the payroll system</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="zip" type="xs:string">
            <xs:annotation>
              <xs:documentation>Employer zip code as stated by the employer in the payroll system</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PayrollEmploymentRecord">
        <xs:sequence>
          <xs:element minOccurs="1" name="employerName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Name of the employer as stated by the employer in the payroll system</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="legalEntityId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Employer identification number (EIN)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="originalHireDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>The original hired date of an employee at the company</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="latestHireDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>If an employee leaves the company and returns later, then the employer states the latest hire date at the company</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="latestPayDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>The most recent pay date from an employer</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="daysSinceLastPay" type="xs:integer">
            <xs:annotation>
              <xs:documentation>The number of days since an employee was last paid</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="numberPayCadenceWithoutPay" type="xs:integer">
            <xs:annotation>
              <xs:documentation>The number of pay cadences an employee has not been paid; determined by the pay frequency</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="employmentEndDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>The date an employee ended their employment at the company</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="employmentDuration" type="xs:string">
            <xs:annotation>
              <xs:documentation>The length of time an employee has been employed with that employer in ISO 8601 format (eg P1Y6M0D)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="employerAddress" type="schemas:PayrollEmployerAddress">
            <xs:annotation>
              <xs:documentation>Array of addresses</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="employmentStatusCode" type="xs:string">
            <xs:annotation>
              <xs:documentation>Status codes: `A` - Active, `NLE` - No Longer Employed, `L` - Leave</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="employmentStatusName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Status name: `Active`, `No Longer Employed`, or `Leave`</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="workLevelCode" type="xs:string">
            <xs:annotation>
              <xs:documentation>The abbreviate code for the employment level names (workLevelName) that we receive from the employer</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="workLevelName" type="xs:string">
            <xs:annotation>
              <xs:documentation>The employment level name is whatever we receive from the employer, such as full time, part time, temp, contractor, and more</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="workLevelStatus" type="xs:string">
            <xs:annotation>
              <xs:documentation>The categorized work level status. Enumerations are: &lt;br&gt; * `Temporary` &lt;br&gt; * `Seasonal` &lt;br&gt; * `Retired` &lt;br&gt; * `Student` &lt;br&gt; * `Full Time` &lt;br&gt; * `Part Time` &lt;br&gt; * `Unspecified` &lt;br&gt; This is a new field, currently enabled only for testing reports. It will be added for all reports in August 2021.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="positionTitle" type="xs:string">
            <xs:annotation>
              <xs:documentation>Employee job title</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="positionDuration" type="xs:string">
            <xs:annotation>
              <xs:documentation>The length of time an employee has been employed at their current or latest position for this employment in ISO 8601 format (eg P1Y6M0D)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PayrollEmployeeAddress">
        <xs:sequence>
          <xs:element minOccurs="0" name="address1" type="xs:string">
            <xs:annotation>
              <xs:documentation>Employee address as stated by the employer in the payroll system</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="city" type="xs:string">
            <xs:annotation>
              <xs:documentation>Employee city as stated by the employer in the payroll system</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="state" type="xs:string">
            <xs:annotation>
              <xs:documentation>Employee state as stated by the employer in the payroll system</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="zip" type="xs:string">
            <xs:annotation>
              <xs:documentation>Employee zip code as stated by the employer in the payroll system</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VOETransactionsReport">
        <xs:annotation>
          <xs:documentation>A VOE Transactions report</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="customerType" type="xs:string">
            <xs:annotation>
              <xs:documentation>The type of customer ("active" or "testing" or "" for all types)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="customerId" type="xs:long">
            <xs:annotation>
              <xs:documentation>A customer ID represented as a number. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="requestId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Finicity indicator to track all activity associated with this report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="requesterName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Name of a Finicity partner</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="createdDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Title of the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="consumerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A consumer ID. See Create Consumer API for how to create a consumer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="consumerSsn" type="xs:string">
            <xs:annotation>
              <xs:documentation>Last 4 digits of a SSN</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report type. Possible values:

  * "voi"


  * "voa"


  * "voaHistory"


  * "history"


  * "voieTxVerify"


  * "voieWithReport"


  * "voieWithInterview"


  * "paystatement"


  * "preQualVoa"


  * "assetSummary"


  * "voie"


  * "transactions"


  * "statement"


  * "voiePayroll"


  * "voeTransactions"


  * "voePayroll"


  * "cfrp"


  * "cfrb"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report generation status. Possible values: "inProgress", "success", "failure".</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="errors" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>In case errors occurred during the report generation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="portfolioId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A unique identifier that will be consistent across all reports created for the same customer</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="startDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>The `postedDate` of the earliest transaction analyzed for the report. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="endDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>The `postedDate` of the latest transaction analyzed for the report. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="days" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Number of days covered by the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="seasoned" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>"true" if the report covers more than 180 days</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="institutions" type="schemas:ReportInstitution">
            <xs:annotation>
              <xs:documentation>A list of institution records, including information about the individual accounts used in this report</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VOIReport">
        <xs:annotation>
          <xs:documentation>A VOI report</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="customerType" type="xs:string">
            <xs:annotation>
              <xs:documentation>The type of customer ("active" or "testing" or "" for all types)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="customerId" type="xs:long">
            <xs:annotation>
              <xs:documentation>A customer ID represented as a number. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="requestId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Finicity indicator to track all activity associated with this report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="requesterName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Name of a Finicity partner</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="createdDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Title of the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="consumerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A consumer ID. See Create Consumer API for how to create a consumer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="consumerSsn" type="xs:string">
            <xs:annotation>
              <xs:documentation>Last 4 digits of a SSN</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report type. Possible values:

  * "voi"


  * "voa"


  * "voaHistory"


  * "history"


  * "voieTxVerify"


  * "voieWithReport"


  * "voieWithInterview"


  * "paystatement"


  * "preQualVoa"


  * "assetSummary"


  * "voie"


  * "transactions"


  * "statement"


  * "voiePayroll"


  * "voeTransactions"


  * "voePayroll"


  * "cfrp"


  * "cfrb"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report generation status. Possible values: "inProgress", "success", "failure".</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="errors" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>In case errors occurred during the report generation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="portfolioId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A unique identifier that will be consistent across all reports created for the same customer</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="startDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>The `postedDate` of the earliest transaction analyzed for the report. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="endDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>The `postedDate` of the latest transaction analyzed for the report. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="days" type="xs:long">
            <xs:annotation>
              <xs:documentation>Number of days covered by the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="seasoned" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>"true" if the report covers more than 180 days</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="institutions" type="schemas:ReportInstitution">
            <xs:annotation>
              <xs:documentation>A list of institution records</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="income" type="schemas:ReportIncomeStreamSummary" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ReportIncomeStreamSummary">
        <xs:sequence>
          <xs:element minOccurs="1" name="confidenceType" type="xs:string">
            <xs:annotation>
              <xs:documentation>Possible values: "HIGH", "MODERATE", "LOW", "NO"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="netMonthly" type="schemas:NetMonthly" />
          <xs:element minOccurs="1" name="incomeEstimate" type="schemas:ReportIncomeEstimate" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ReportIncomeEstimate">
        <xs:sequence>
          <xs:element minOccurs="1" name="netAnnual" type="xs:double" />
          <xs:element minOccurs="1" name="projectedNetAnnual" type="xs:double" />
          <xs:element minOccurs="1" name="estimatedGrossAnnual" type="xs:double" />
          <xs:element minOccurs="1" name="projectedGrossAnnual" type="xs:double" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VOIEPayrollReport">
        <xs:annotation>
          <xs:documentation>A VOIE Payroll report</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="customerType" type="xs:string">
            <xs:annotation>
              <xs:documentation>The type of customer ("active" or "testing" or "" for all types)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="customerId" type="xs:long">
            <xs:annotation>
              <xs:documentation>A customer ID represented as a number. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="requestId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Finicity indicator to track all activity associated with this report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="requesterName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Name of a Finicity partner</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="createdDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Title of the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="consumerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A consumer ID. See Create Consumer API for how to create a consumer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="consumerSsn" type="xs:string">
            <xs:annotation>
              <xs:documentation>Last 4 digits of a SSN</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report type. Possible values:

  * "voi"


  * "voa"


  * "voaHistory"


  * "history"


  * "voieTxVerify"


  * "voieWithReport"


  * "voieWithInterview"


  * "paystatement"


  * "preQualVoa"


  * "assetSummary"


  * "voie"


  * "transactions"


  * "statement"


  * "voiePayroll"


  * "voeTransactions"


  * "voePayroll"


  * "cfrp"


  * "cfrb"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report generation status. Possible values: "inProgress", "success", "failure".</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="errors" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>In case errors occurred during the report generation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="portfolioId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A unique identifier that will be consistent across all reports created for the same customer</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="employmentHistory" type="schemas:PayrollEmploymentHistory">
            <xs:annotation>
              <xs:documentation>An array of employment histories, one for each of the consumer's verified employers</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VOIEPaystubReport">
        <xs:annotation>
          <xs:documentation>A VOIE Paystub report</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="customerType" type="xs:string">
            <xs:annotation>
              <xs:documentation>The type of customer ("active" or "testing" or "" for all types)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="customerId" type="xs:long">
            <xs:annotation>
              <xs:documentation>A customer ID represented as a number. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="requestId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Finicity indicator to track all activity associated with this report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="requesterName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Name of a Finicity partner</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="createdDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Title of the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="consumerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A consumer ID. See Create Consumer API for how to create a consumer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="consumerSsn" type="xs:string">
            <xs:annotation>
              <xs:documentation>Last 4 digits of a SSN</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report type. Possible values:

  * "voi"


  * "voa"


  * "voaHistory"


  * "history"


  * "voieTxVerify"


  * "voieWithReport"


  * "voieWithInterview"


  * "paystatement"


  * "preQualVoa"


  * "assetSummary"


  * "voie"


  * "transactions"


  * "statement"


  * "voiePayroll"


  * "voeTransactions"


  * "voePayroll"


  * "cfrp"


  * "cfrb"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report generation status. Possible values: "inProgress", "success", "failure".</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="errors" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>In case errors occurred during the report generation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="portfolioId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A unique identifier that will be consistent across all reports created for the same customer</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="assetIds" type="xs:string">
            <xs:annotation>
              <xs:documentation>The pay statements included in the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="numberOfBillableAssets" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Total number of billable pay statements included in the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="payStatements" type="schemas:VOIEPaystubWithStatementPayStatement">
            <xs:annotation>
              <xs:documentation>Extracted pay statement details, and the transaction matching summary</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VOIEPaystubWithStatementPayStatement">
        <xs:sequence>
          <xs:element minOccurs="1" name="payPeriod" type="xs:string">
            <xs:annotation>
              <xs:documentation>The pay period of the pay statement</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="billable" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>This will display true if the pay statement is billable. If a pay statement has been digitized previously, this will display as false as it will not be billable.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="assetId" type="xs:string">
            <xs:annotation>
              <xs:documentation>The asset ID of the stored pay statement</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="payDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>The listed pay date for the pay statement</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="startDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>The beginning of the pay period</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="endDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>The end of the pay period</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="netPayCurrent" type="xs:double">
            <xs:annotation>
              <xs:documentation>The total pay after deductions for the employee for the current pay period</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="netPayYTD" type="xs:double">
            <xs:annotation>
              <xs:documentation>The total accumulation of pay after deductions for the employee for the current pay year</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="grossPayCurrent" type="xs:double">
            <xs:annotation>
              <xs:documentation>The total pay before deductions for the employee for the current pay period</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="grossPayYTD" type="xs:double">
            <xs:annotation>
              <xs:documentation>The total accumulation of pay before deductions for the employee for the current pay year</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="payrollProvider" type="xs:string">
            <xs:annotation>
              <xs:documentation>The payroll provider extracted from the pay statement</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="employer" type="schemas:Employer" />
          <xs:element minOccurs="1" name="employee" type="schemas:Employee" />
          <xs:element minOccurs="1" maxOccurs="unbounded" name="payStat" type="schemas:PayStat">
            <xs:annotation>
              <xs:documentation>Information pertaining to the earnings on the pay statement</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="directDeposits" type="schemas:DirectDeposit">
            <xs:annotation>
              <xs:documentation>Information pertaining to the direct deposits on the pay statement</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="monthlyIncome" type="schemas:PaystubMonthlyIncomeRecord" />
          <xs:element minOccurs="1" maxOccurs="unbounded" name="institutions" type="xs:string">
            <xs:annotation>
              <xs:documentation>Not populated for the voieWithStatement style of paystub report. For the VOIE - Paystub (with TXVerify) reports this would include details of the financial institution accounts and income streams with matching transactions to the pay statement.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="errorCode" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Error code for the asset</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="errorMessage" type="xs:string">
            <xs:annotation>
              <xs:documentation>Error message for the asset</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PaystubMonthlyIncomeRecord">
        <xs:sequence>
          <xs:element minOccurs="0" name="estimatedMonthlyBasePay" type="xs:double">
            <xs:annotation>
              <xs:documentation>The estimated monthly base pay amount for the employment from the paystub, calculated by Finicity</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="estimatedMonthlyOvertimePay" type="xs:double">
            <xs:annotation>
              <xs:documentation>The estimated monthly overtime pay amount for the employment from the paystub, calculated by Finicity</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="estimatedMonthlyBonusPay" type="xs:double">
            <xs:annotation>
              <xs:documentation>The estimated monthly bonus pay amount for the employment from the paystub, calculated by Finicity</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="estimatedMonthlyCommissionPay" type="xs:double">
            <xs:annotation>
              <xs:documentation>The estimated commission bonus pay amount for the employment from the paystub, calculated by Finicity</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VOIEPaystubWithTXVerifyReport">
        <xs:annotation>
          <xs:documentation>A VOIE Paystub With TXVerify report</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="customerType" type="xs:string">
            <xs:annotation>
              <xs:documentation>The type of customer ("active" or "testing" or "" for all types)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="customerId" type="xs:long">
            <xs:annotation>
              <xs:documentation>A customer ID represented as a number. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="requestId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Finicity indicator to track all activity associated with this report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="requesterName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Name of a Finicity partner</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="createdDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Title of the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="consumerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A consumer ID. See Create Consumer API for how to create a consumer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="consumerSsn" type="xs:string">
            <xs:annotation>
              <xs:documentation>Last 4 digits of a SSN</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report type. Possible values:

  * "voi"


  * "voa"


  * "voaHistory"


  * "history"


  * "voieTxVerify"


  * "voieWithReport"


  * "voieWithInterview"


  * "paystatement"


  * "preQualVoa"


  * "assetSummary"


  * "voie"


  * "transactions"


  * "statement"


  * "voiePayroll"


  * "voeTransactions"


  * "voePayroll"


  * "cfrp"


  * "cfrb"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report generation status. Possible values: "inProgress", "success", "failure".</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="errors" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>In case errors occurred during the report generation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="portfolioId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A unique identifier that will be consistent across all reports created for the same customer</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="assetIds" type="xs:string">
            <xs:annotation>
              <xs:documentation>The pay statements included in the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="numberOfBillableAssets" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Total number of billable pay statements included in the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="payStatements" type="schemas:VOIEPaystubWithStatementPayStatement">
            <xs:annotation>
              <xs:documentation>Extracted pay statement details, and the transaction matching summary</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="institutions" type="schemas:ReportInstitution">
            <xs:annotation>
              <xs:documentation>The details of the financial institution accounts included in the report.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ReportSummary">
        <xs:sequence>
          <xs:element minOccurs="1" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="requestId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Finicity indicator to track all activity associated with this report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="requesterName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Name of a Finicity partner</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="createdDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="consumerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A consumer ID. See Create Consumer API for how to create a consumer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="consumerSsn" type="xs:string">
            <xs:annotation>
              <xs:documentation>Last 4 digits of a SSN</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report type. Possible values:

  * "voi"


  * "voa"


  * "voaHistory"


  * "history"


  * "voieTxVerify"


  * "voieWithReport"


  * "voieWithInterview"


  * "paystatement"


  * "preQualVoa"


  * "assetSummary"


  * "voie"


  * "transactions"


  * "statement"


  * "voiePayroll"


  * "voeTransactions"


  * "voePayroll"


  * "cfrp"


  * "cfrb"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report generation status. Possible values: "inProgress", "success", "failure".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VOIEWithInterviewData">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="txVerifyInterview" type="schemas:TxVerifyInterview">
            <xs:annotation>
              <xs:documentation>An array of `TxVerifyInterview` objects</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="true" name="extractEarnings" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Field to indicate whether to extract the earnings on all pay statements</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="false" name="extractDeductions" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Field to indicate whether to extract the deductions on all pay statements</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="true" name="extractDirectDeposit" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Field to indicate whether to extract the direct deposits on all pay statements</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TxPushSubscriptionParameters">
        <xs:sequence>
          <xs:element minOccurs="1" name="callbackUrl" type="xs:string">
            <xs:annotation>
              <xs:documentation>A callback URL where to receive TxPush notifications</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PayStatement">
        <xs:annotation>
          <xs:documentation>A pay statement document and pay statement label</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="label" type="xs:string">
            <xs:annotation>
              <xs:documentation>The label to be associated with the pay statement. This label will allow the paystub to go through data extraction.
* `lastPayPeriod`: default label that should be used for the VOIE - Paystub products
* `lastPayPeriodMinusOne`: the second most recent pay statement
* `lastPayPeriodMinusTwo`: the third most recent pay statement
* `previousYearLastPayPeriod` Last pay statement of the previous calendar year
* `previousYear2LastPayPeriod`: last pay statement of the calendar year 2 years prior
* `earliestPayPeriod`: the earliest pay statement</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="statement" type="xs:string">
            <xs:annotation>
              <xs:documentation>A Base64 encoded pay statement file. Finicity supports PDF, JPG, or PNG files.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LoanPaymentDetails">
        <xs:annotation>
          <xs:documentation>Loan payment details for a customer account</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="loanNumber" type="xs:string">
            <xs:annotation>
              <xs:documentation>The number of the specific loan under the account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="loanPaymentNumber" type="xs:string">
            <xs:annotation>
              <xs:documentation>The payment number given by the institution. This number is typically for manual payments. This is not an ACH payment number.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="loanPaymentAddress" type="xs:string">
            <xs:annotation>
              <xs:documentation>The payment address to send manual payments to</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="accountDetail" type="schemas:LoanPaymentDetailsAccount" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Asset">
        <xs:annotation>
          <xs:documentation>An asset</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="assetId" type="xs:string">
            <xs:annotation>
              <xs:documentation>An asset ID. Generated by Connect or by using the Store Customer Pay Statement API.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TxPushSubscriptions">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="subscriptions" type="schemas:SubscriptionRecord" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SubscriptionRecord">
        <xs:annotation>
          <xs:documentation>TxPush subscription details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="id" type="xs:long">
            <xs:annotation>
              <xs:documentation>ID of a TxPush subscription</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="accountId" type="xs:long">
            <xs:annotation>
              <xs:documentation>An account ID represented as a number</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>A TxPush subscription type ("account" or "transaction")</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="callbackUrl" type="xs:string">
            <xs:annotation>
              <xs:documentation>A callback URL where to receive TxPush notifications</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="signingKey" type="xs:string">
            <xs:annotation>
              <xs:documentation>Signing key for events</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CreatedTestTxPushTransaction">
        <xs:annotation>
          <xs:documentation>Response for TxPush test transaction</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="id" type="xs:long">
            <xs:annotation>
              <xs:documentation>A transaction ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="createdDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ACHDetails">
        <xs:annotation>
          <xs:documentation>The routing and account number information to initiate ACH transfers</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="routingNumber" type="xs:string">
            <xs:annotation>
              <xs:documentation>The routing number of the financial institution for this specific customers account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="realAccountNumber" type="xs:string">
            <xs:annotation>
              <xs:documentation>The account number for initiating ACH transfers for this account</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PayStatementReportConstraints">
        <xs:sequence>
          <xs:element minOccurs="1" name="paystatementReport" type="schemas:PayStatementData">
            <xs:annotation>
              <xs:documentation>Data to be included within the pay statement report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="reportCustomFields" type="schemas:ReportCustomField">
            <xs:annotation>
              <xs:documentation>The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.

Designate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is "true" or "false".
* "true": (default) display the custom field in the PDF report
* "false": don't display the custom field in the PDF report

For an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.

All custom fields display in the Reseller Billing API.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CashFlowReportConstraints">
        <xs:sequence>
          <xs:element minOccurs="0" name="accountIds" type="xs:string">
            <xs:annotation>
              <xs:documentation>A whitespace-separated list of account IDs to be included in the report (all accounts will be included if not set)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="reportCustomFields" type="schemas:ReportCustomField">
            <xs:annotation>
              <xs:documentation>The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.

Designate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is "true" or "false".
* "true": (default) display the custom field in the PDF report
* "false": don't display the custom field in the PDF report

For an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.

All custom fields display in the Reseller Billing API.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="showNsf" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Include the non-sufficient funds (NSF) summary JSON and the NSF summary PDF section in the report. Data included:
* Account

* Total number of NSF funds

* Days since the most recent NFS funds fee</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="fromDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="incomeStreamConfidenceMinimum" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Include income streams in the report, based on the income stream's confidence score. For example, Use the value 50 to include only income streams with a confidence score of 50 or higher.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CashFlowReportConstraintsOut">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="accountIds" type="xs:string">
            <xs:annotation>
              <xs:documentation>An array of account IDs to be included in the report (all accounts will be included if not set)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="reportCustomFields" type="schemas:ReportCustomField">
            <xs:annotation>
              <xs:documentation>The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.

Designate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is "true" or "false".
* "true": (default) display the custom field in the PDF report
* "false": don't display the custom field in the PDF report

For an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.

All custom fields display in the Reseller Billing API.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="showNsf" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Include the non-sufficient funds (NSF) summary JSON and the NSF summary PDF section in the report. Data included:
* Account

* Total number of NSF funds

* Days since the most recent NFS funds fee</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="fromDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="incomeStreamConfidenceMinimum" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Include income streams in the report, based on the income stream's confidence score. For example, Use the value 50 to include only income streams with a confidence score of 50 or higher.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PayStatementReportAck">
        <xs:sequence>
          <xs:element minOccurs="1" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="customerType" type="xs:string">
            <xs:annotation>
              <xs:documentation>The type of customer ("active" or "testing" or "" for all types)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="customerId" type="xs:long">
            <xs:annotation>
              <xs:documentation>A customer ID represented as a number. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="requestId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Finicity indicator to track all activity associated with this report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="requesterName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Name of a Finicity partner</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="createdDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Title of the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="consumerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A consumer ID. See Create Consumer API for how to create a consumer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="consumerSsn" type="xs:string">
            <xs:annotation>
              <xs:documentation>Last 4 digits of a SSN</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report type. Possible values:

  * "voi"


  * "voa"


  * "voaHistory"


  * "history"


  * "voieTxVerify"


  * "voieWithReport"


  * "voieWithInterview"


  * "paystatement"


  * "preQualVoa"


  * "assetSummary"


  * "voie"


  * "transactions"


  * "statement"


  * "voiePayroll"


  * "voeTransactions"


  * "voePayroll"


  * "cfrp"


  * "cfrb"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report generation status. Possible values: "inProgress", "success", "failure".</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="errors" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>In case errors occurred during the report generation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="portfolioId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A unique identifier that will be consistent across all reports created for the same customer</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="constraints" type="schemas:PayStatementReportConstraints" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CashFlowReportAck">
        <xs:sequence>
          <xs:element minOccurs="1" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="customerType" type="xs:string">
            <xs:annotation>
              <xs:documentation>The type of customer ("active" or "testing" or "" for all types)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="customerId" type="xs:long">
            <xs:annotation>
              <xs:documentation>A customer ID represented as a number. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="requestId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Finicity indicator to track all activity associated with this report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="requesterName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Name of a Finicity partner</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="createdDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Title of the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="consumerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A consumer ID. See Create Consumer API for how to create a consumer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="consumerSsn" type="xs:string">
            <xs:annotation>
              <xs:documentation>Last 4 digits of a SSN</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report type. Possible values:

  * "voi"


  * "voa"


  * "voaHistory"


  * "history"


  * "voieTxVerify"


  * "voieWithReport"


  * "voieWithInterview"


  * "paystatement"


  * "preQualVoa"


  * "assetSummary"


  * "voie"


  * "transactions"


  * "statement"


  * "voiePayroll"


  * "voeTransactions"


  * "voePayroll"


  * "cfrp"


  * "cfrb"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report generation status. Possible values: "inProgress", "success", "failure".</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="errors" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>In case errors occurred during the report generation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="constraints" type="schemas:CashFlowReportConstraintsOut" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VOIEWithTXVerifyReportConstraints">
        <xs:sequence>
          <xs:element minOccurs="0" name="accountIds" type="xs:string">
            <xs:annotation>
              <xs:documentation>A whitespace-separated list of account IDs to be included in the report (all accounts will be included if not set)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="voieWithInterviewData" type="schemas:VOIEWithInterviewData" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="reportCustomFields" type="schemas:ReportCustomField">
            <xs:annotation>
              <xs:documentation>The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.

Designate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is "true" or "false".
* "true": (default) display the custom field in the PDF report
* "false": don't display the custom field in the PDF report

For an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.

All custom fields display in the Reseller Billing API.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="fromDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="incomeStreamConfidenceMinimum" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Include income streams in the report, based on the income stream's confidence score. For example, Use the value 50 to include only income streams with a confidence score of 50 or higher.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VOIEWithTXVerifyReportConstraintsOut">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="accountIds" type="xs:string">
            <xs:annotation>
              <xs:documentation>An array of account IDs to be included in the report (all accounts will be included if not set)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="voieWithInterviewData" type="schemas:VOIEWithInterviewData" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="reportCustomFields" type="schemas:ReportCustomField">
            <xs:annotation>
              <xs:documentation>The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.

Designate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is "true" or "false".
* "true": (default) display the custom field in the PDF report
* "false": don't display the custom field in the PDF report

For an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.

All custom fields display in the Reseller Billing API.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="fromDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="incomeStreamConfidenceMinimum" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Include income streams in the report, based on the income stream's confidence score. For example, Use the value 50 to include only income streams with a confidence score of 50 or higher.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VOIEPaystubWithTXVerifyReportAck">
        <xs:sequence>
          <xs:element minOccurs="1" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="customerType" type="xs:string">
            <xs:annotation>
              <xs:documentation>The type of customer ("active" or "testing" or "" for all types)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="customerId" type="xs:long">
            <xs:annotation>
              <xs:documentation>A customer ID represented as a number. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="requestId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Finicity indicator to track all activity associated with this report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="requesterName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Name of a Finicity partner</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="createdDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Title of the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="consumerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A consumer ID. See Create Consumer API for how to create a consumer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="consumerSsn" type="xs:string">
            <xs:annotation>
              <xs:documentation>Last 4 digits of a SSN</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report type. Possible values:

  * "voi"


  * "voa"


  * "voaHistory"


  * "history"


  * "voieTxVerify"


  * "voieWithReport"


  * "voieWithInterview"


  * "paystatement"


  * "preQualVoa"


  * "assetSummary"


  * "voie"


  * "transactions"


  * "statement"


  * "voiePayroll"


  * "voeTransactions"


  * "voePayroll"


  * "cfrp"


  * "cfrb"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report generation status. Possible values: "inProgress", "success", "failure".</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="errors" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>In case errors occurred during the report generation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="portfolioId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A unique identifier that will be consistent across all reports created for the same customer</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="constraints" type="schemas:VOIEWithTXVerifyReportConstraintsOut" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Transactions">
        <xs:annotation>
          <xs:documentation>A list of transactions</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="found" type="xs:integer">
            <xs:annotation>
              <xs:documentation>The total number of results matching search criteria</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="displaying" type="xs:integer">
            <xs:annotation>
              <xs:documentation>The number of results returned</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="moreAvailable" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>If the value of `moreAvailable` is "true", you can retrieve the next page of results by increasing the value of the start parameter in your next request:"...&amp;start=6&amp;limit=5"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="fromDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>Value of the `fromDate` request parameter that generated this response</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="toDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>Value of the `toDate` request parameter that generated this response</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="sort" type="xs:string">
            <xs:annotation>
              <xs:documentation>Value of the sort request parameter that generated this response</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="transactions" type="schemas:Transaction">
            <xs:annotation>
              <xs:documentation>The array of transactions</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TestTxPushTransaction">
        <xs:annotation>
          <xs:documentation>A fake transaction for TxPush testing</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="amount" type="xs:double">
            <xs:annotation>
              <xs:documentation>The amount of the transaction</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="description" type="xs:string">
            <xs:annotation>
              <xs:documentation>The description of the transaction</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="active" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>"active" or "pending" (optional)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="postedDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="transactionDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TransactionsReportAck">
        <xs:sequence>
          <xs:element minOccurs="1" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="customerType" type="xs:string">
            <xs:annotation>
              <xs:documentation>The type of customer ("active" or "testing" or "" for all types)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="customerId" type="xs:long">
            <xs:annotation>
              <xs:documentation>A customer ID represented as a number. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="requestId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Finicity indicator to track all activity associated with this report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="requesterName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Name of a Finicity partner</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="createdDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Title of the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="consumerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A consumer ID. See Create Consumer API for how to create a consumer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="consumerSsn" type="xs:string">
            <xs:annotation>
              <xs:documentation>Last 4 digits of a SSN</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report type. Possible values:

  * "voi"


  * "voa"


  * "voaHistory"


  * "history"


  * "voieTxVerify"


  * "voieWithReport"


  * "voieWithInterview"


  * "paystatement"


  * "preQualVoa"


  * "assetSummary"


  * "voie"


  * "transactions"


  * "statement"


  * "voiePayroll"


  * "voeTransactions"


  * "voePayroll"


  * "cfrp"


  * "cfrb"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report generation status. Possible values: "inProgress", "success", "failure".</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="errors" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>In case errors occurred during the report generation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="portfolioId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A unique identifier that will be consistent across all reports created for the same customer</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="constraints" type="schemas:TransactionsReportConstraintsOut" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TransactionsReportConstraints">
        <xs:sequence>
          <xs:element minOccurs="0" name="accountIds" type="xs:string">
            <xs:annotation>
              <xs:documentation>A whitespace-separated list of account IDs to be included in the report (all accounts will be included if not set)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="fromDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="reportCustomFields" type="schemas:ReportCustomField">
            <xs:annotation>
              <xs:documentation>The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.

Designate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is "true" or "false".
* "true": (default) display the custom field in the PDF report
* "false": don't display the custom field in the PDF report

For an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.

All custom fields display in the Reseller Billing API.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TransactionsReportConstraintsOut">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="accountIds" type="xs:string">
            <xs:annotation>
              <xs:documentation>An array of account IDs to be included in the report (all accounts will be included if not set)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="fromDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="toDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="false" name="includePending" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>If pending transactions must be included</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="reportCustomFields" type="schemas:ReportCustomField">
            <xs:annotation>
              <xs:documentation>The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.

Designate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is "true" or "false".
* "true": (default) display the custom field in the PDF report
* "false": don't display the custom field in the PDF report

For an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.

All custom fields display in the Reseller Billing API.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PortfolioConsumer">
        <xs:sequence>
          <xs:element minOccurs="1" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>A consumer ID. See Create Consumer API for how to create a consumer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="firstName" type="xs:string">
            <xs:annotation>
              <xs:documentation>First name(s) / given name(s)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="lastName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Last name(s) / surname(s)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="customerId" type="xs:long">
            <xs:annotation>
              <xs:documentation>A customer ID represented as a number. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="ssn" type="xs:string">
            <xs:annotation>
              <xs:documentation>A full SSN with or without hyphens</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="birthday" type="schemas:Birthday">
            <xs:annotation>
              <xs:documentation>A birth date</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="suffix" type="xs:string">
            <xs:annotation>
              <xs:documentation>A person suffix</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="StatementReportConstraints">
        <xs:sequence>
          <xs:element minOccurs="1" name="statementReportData" type="schemas:StatementData" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="reportCustomFields" type="schemas:ReportCustomField">
            <xs:annotation>
              <xs:documentation>The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.

Designate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is "true" or "false".
* "true": (default) display the custom field in the PDF report
* "false": don't display the custom field in the PDF report

For an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.

All custom fields display in the Reseller Billing API.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="StatementData">
        <xs:sequence>
          <xs:element minOccurs="1" name="accountId" type="xs:long">
            <xs:annotation>
              <xs:documentation>An account ID represented as a number</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="1" name="index">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Index of the statement to retrieve</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer">
                <xs:maxInclusive value="6" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="StatementReportAck">
        <xs:sequence>
          <xs:element minOccurs="1" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="customerType" type="xs:string">
            <xs:annotation>
              <xs:documentation>The type of customer ("active" or "testing" or "" for all types)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="customerId" type="xs:long">
            <xs:annotation>
              <xs:documentation>A customer ID represented as a number. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="requestId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Finicity indicator to track all activity associated with this report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="requesterName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Name of a Finicity partner</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="createdDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Title of the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="consumerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A consumer ID. See Create Consumer API for how to create a consumer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="consumerSsn" type="xs:string">
            <xs:annotation>
              <xs:documentation>Last 4 digits of a SSN</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report type. Possible values:

  * "voi"


  * "voa"


  * "voaHistory"


  * "history"


  * "voieTxVerify"


  * "voieWithReport"


  * "voieWithInterview"


  * "paystatement"


  * "preQualVoa"


  * "assetSummary"


  * "voie"


  * "transactions"


  * "statement"


  * "voiePayroll"


  * "voeTransactions"


  * "voePayroll"


  * "cfrp"


  * "cfrb"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report generation status. Possible values: "inProgress", "success", "failure".</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="errors" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>In case errors occurred during the report generation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="portfolioId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A unique identifier that will be consistent across all reports created for the same customer</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="constraints" type="schemas:StatementReportConstraints" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PayrollData">
        <xs:sequence>
          <xs:element minOccurs="1" name="ssn" type="xs:string">
            <xs:annotation>
              <xs:documentation>A full SSN without hyphens</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="dob" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="reportId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report ID</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PayrollReportAck">
        <xs:sequence>
          <xs:element minOccurs="1" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="customerType" type="xs:string">
            <xs:annotation>
              <xs:documentation>The type of customer ("active" or "testing" or "" for all types)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="customerId" type="xs:long">
            <xs:annotation>
              <xs:documentation>A customer ID represented as a number. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="requestId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Finicity indicator to track all activity associated with this report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="requesterName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Name of a Finicity partner</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="createdDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Title of the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="consumerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A consumer ID. See Create Consumer API for how to create a consumer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="consumerSsn" type="xs:string">
            <xs:annotation>
              <xs:documentation>Last 4 digits of a SSN</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report type. Possible values:

  * "voi"


  * "voa"


  * "voaHistory"


  * "history"


  * "voieTxVerify"


  * "voieWithReport"


  * "voieWithInterview"


  * "paystatement"


  * "preQualVoa"


  * "assetSummary"


  * "voie"


  * "transactions"


  * "statement"


  * "voiePayroll"


  * "voeTransactions"


  * "voePayroll"


  * "cfrp"


  * "cfrb"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report generation status. Possible values: "inProgress", "success", "failure".</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="errors" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>In case errors occurred during the report generation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="portfolioId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A unique identifier that will be consistent across all reports created for the same customer</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="constraints" type="schemas:PayrollReportConstraintsOut" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PayrollReportConstraintsOut">
        <xs:sequence>
          <xs:element minOccurs="1" name="payrollData" type="schemas:PayrollDataOut" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="reportCustomFields" type="schemas:ReportCustomField">
            <xs:annotation>
              <xs:documentation>The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.

Designate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is "true" or "false".
* "true": (default) display the custom field in the PDF report
* "false": don't display the custom field in the PDF report

For an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.

All custom fields display in the Reseller Billing API.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="payStatementsFromDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PayrollDataOut">
        <xs:sequence>
          <xs:element minOccurs="1" name="payrollDataRetrievalId" type="xs:string">
            <xs:annotation>
              <xs:documentation>An id to identify the data retrieved from the payroll providers for the report.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="employerNames" type="xs:string">
            <xs:annotation>
              <xs:documentation>An array of employer names that the consumer submitted after completing the Connect application.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="reportId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report ID</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PayrollReportConstraints">
        <xs:sequence>
          <xs:element minOccurs="1" name="payrollData" type="schemas:PayrollData" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="reportCustomFields" type="schemas:ReportCustomField">
            <xs:annotation>
              <xs:documentation>The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.

Designate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is "true" or "false".
* "true": (default) display the custom field in the PDF report
* "false": don't display the custom field in the PDF report

For an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.

All custom fields display in the Reseller Billing API.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="payStatementsFromDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="marketSegment" type="xs:string">
            <xs:annotation>
              <xs:documentation>Filter consumer’s data based on the market segment. Currently supported values are; "Mortgage", "KYC", and "Identity".</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="excludeEmpInfo" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>If true is passed, Employment information data will not be searched or returned.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="purpose" type="xs:string">
            <xs:annotation>
              <xs:documentation>2-digit code from [Permissible Purpose Codes] (https://docs.finicity.com/permissible-purpose-codes/), specifying the reason for retrieving this report.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AvailableBalance">
        <xs:sequence>
          <xs:element minOccurs="1" name="id" type="xs:long">
            <xs:annotation>
              <xs:documentation>A customer ID represented as a number. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="realAccountNumberLast4" type="xs:string">
            <xs:annotation>
              <xs:documentation>The last 4 digits of the ACH account number</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="availableBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>The available balance of the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="availableBalanceDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="clearedBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>The cleared balance of the account. Also referred as posted balance, current balance, ledger balance</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="clearedBalanceDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="aggregationStatusCode" type="xs:integer">
            <xs:annotation>
              <xs:documentation>The status of the most recent aggregation attempt (see [Aggregation Status Codes](https://docs.finicity.com/aggregation-status-codes/)). Won't be present until you have run your first aggregation for the account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="currency" type="xs:string">
            <xs:annotation>
              <xs:documentation>A currency code</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VOIEWithStatementData">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="assetIds" type="xs:string">
            <xs:annotation>
              <xs:documentation>A list of pay statement asset IDs</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="true" name="extractEarnings" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Field to indicate whether to extract the earnings on all pay statements</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="false" name="extractDeductions" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Field to indicate whether to extract the deductions on all pay statements</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="true" name="extractDirectDeposit" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Field to indicate whether to extract the direct deposits on all pay statements</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VOIEReportConstraints">
        <xs:annotation>
          <xs:documentation>The request details from the report generation that were used to generate the report</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="voieWithStatementData" type="schemas:VOIEWithStatementData" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="reportCustomFields" type="schemas:ReportCustomField">
            <xs:annotation>
              <xs:documentation>The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.

Designate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is "true" or "false".
* "true": (default) display the custom field in the PDF report
* "false": don't display the custom field in the PDF report

For an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.

All custom fields display in the Reseller Billing API.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VOIEPaystubReportAck">
        <xs:sequence>
          <xs:element minOccurs="1" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="customerType" type="xs:string">
            <xs:annotation>
              <xs:documentation>The type of customer ("active" or "testing" or "" for all types)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="customerId" type="xs:long">
            <xs:annotation>
              <xs:documentation>A customer ID represented as a number. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="requestId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Finicity indicator to track all activity associated with this report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="requesterName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Name of a Finicity partner</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="createdDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Title of the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="consumerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A consumer ID. See Create Consumer API for how to create a consumer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="consumerSsn" type="xs:string">
            <xs:annotation>
              <xs:documentation>Last 4 digits of a SSN</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report type. Possible values:

  * "voi"


  * "voa"


  * "voaHistory"


  * "history"


  * "voieTxVerify"


  * "voieWithReport"


  * "voieWithInterview"


  * "paystatement"


  * "preQualVoa"


  * "assetSummary"


  * "voie"


  * "transactions"


  * "statement"


  * "voiePayroll"


  * "voeTransactions"


  * "voePayroll"


  * "cfrp"


  * "cfrb"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report generation status. Possible values: "inProgress", "success", "failure".</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="errors" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>In case errors occurred during the report generation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="portfolioId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A unique identifier that will be consistent across all reports created for the same customer</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="constraints" type="schemas:VOIEReportConstraints">
            <xs:annotation>
              <xs:documentation>The request details from the report generation that were used to generate the report</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VOETransactionsReportConstraints">
        <xs:sequence>
          <xs:element minOccurs="0" name="reportId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="accountIds" type="xs:string">
            <xs:annotation>
              <xs:documentation>A whitespace-separated list of account IDs to be included in the report (all accounts will be included if not set)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="reportCustomFields" type="schemas:ReportCustomField">
            <xs:annotation>
              <xs:documentation>The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.

Designate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is "true" or "false".
* "true": (default) display the custom field in the PDF report
* "false": don't display the custom field in the PDF report

For an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.

All custom fields display in the Reseller Billing API.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="fromDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="incomeStreamConfidenceMinimum" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Include income streams in the report, based on the income stream's confidence score. For example, Use the value 50 to include only income streams with a confidence score of 50 or higher.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VOETransactionsReportConstraintsOut">
        <xs:sequence>
          <xs:element minOccurs="0" name="reportId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="accountIds" type="xs:string">
            <xs:annotation>
              <xs:documentation>An array of account IDs to be included in the report (all accounts will be included if not set)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="reportCustomFields" type="schemas:ReportCustomField">
            <xs:annotation>
              <xs:documentation>The `reportCustomFields` parameter is used when experiences are associated with a credit decisioning report.

Designate up to 5 custom fields that you'd like associated with the report when it's generated. Every custom field consists of three variables: `label`, `value`, and `shown`. The `shown` variable is "true" or "false".
* "true": (default) display the custom field in the PDF report
* "false": don't display the custom field in the PDF report

For an experience that generates multiple reports, the `reportCustomFields` parameter gets passed to all reports.

All custom fields display in the Reseller Billing API.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="fromDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="incomeStreamConfidenceMinimum" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Include income streams in the report, based on the income stream's confidence score. For example, Use the value 50 to include only income streams with a confidence score of 50 or higher.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VOETransactionsReportAck">
        <xs:sequence>
          <xs:element minOccurs="1" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="customerType" type="xs:string">
            <xs:annotation>
              <xs:documentation>The type of customer ("active" or "testing" or "" for all types)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="customerId" type="xs:long">
            <xs:annotation>
              <xs:documentation>A customer ID represented as a number. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="requestId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Finicity indicator to track all activity associated with this report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="requesterName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Name of a Finicity partner</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="createdDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Title of the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="consumerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A consumer ID. See Create Consumer API for how to create a consumer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="consumerSsn" type="xs:string">
            <xs:annotation>
              <xs:documentation>Last 4 digits of a SSN</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report type. Possible values:

  * "voi"


  * "voa"


  * "voaHistory"


  * "history"


  * "voieTxVerify"


  * "voieWithReport"


  * "voieWithInterview"


  * "paystatement"


  * "preQualVoa"


  * "assetSummary"


  * "voie"


  * "transactions"


  * "statement"


  * "voiePayroll"


  * "voeTransactions"


  * "voePayroll"


  * "cfrp"


  * "cfrb"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report generation status. Possible values: "inProgress", "success", "failure".</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="errors" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>In case errors occurred during the report generation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="portfolioId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A unique identifier that will be consistent across all reports created for the same customer</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="constraints" type="schemas:VOETransactionsReportConstraintsOut" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LoanPaymentDetailsAccount">
        <xs:sequence>
          <xs:element minOccurs="1" name="accountId" type="xs:string">
            <xs:annotation>
              <xs:documentation>An account ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="accountNumber" type="xs:string">
            <xs:annotation>
              <xs:documentation>Institution's ID of the Student Loan Account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="accountPaymentNumber" type="xs:string">
            <xs:annotation>
              <xs:documentation>The payment number given by the institution. This number is typically for manual payments. This is not an ACH payment number.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="accountPaymentAddress" type="xs:string">
            <xs:annotation>
              <xs:documentation>The payment address to which send manual payments should be sent</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="accountFuturePayoffAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>The payoff amount for the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="accountFuturePayoffDate" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>The date to which the "Future Payoff Amount" applies</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="groupDetail" type="schemas:LoanPaymentDetailsGroup">
            <xs:annotation>
              <xs:documentation>Group details</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="loanDetail" type="schemas:LoanPaymentDetailsLoan">
            <xs:annotation>
              <xs:documentation>Loan details</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LoanPaymentDetailsGroup">
        <xs:annotation>
          <xs:documentation>Group details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="accountId" type="xs:string">
            <xs:annotation>
              <xs:documentation>An account ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="groupNumber" type="xs:string">
            <xs:annotation>
              <xs:documentation>Institution's ID of the Student Loan Group</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="groupPaymentNumber" type="xs:string">
            <xs:annotation>
              <xs:documentation>The payment number given by the institution. This number is typically for manual payments. This is not an ACH payment number.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="groupPaymentAddress" type="xs:string">
            <xs:annotation>
              <xs:documentation>The payment address to which send manual payments should be sent</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="groupFuturePayoffAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>The payoff amount for the group</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="groupFuturePayoffDate" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>The date to which the "Future Payoff Amount" applies</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="groupLoanDetail" type="schemas:LoanPaymentDetailsLoan" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LoanPaymentDetailsLoan">
        <xs:annotation>
          <xs:documentation>Loan details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="accountId" type="xs:string">
            <xs:annotation>
              <xs:documentation>An account ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="loanNumber" type="xs:string">
            <xs:annotation>
              <xs:documentation>Institution's ID of the Student Loan</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="loanPaymentNumber" type="xs:string">
            <xs:annotation>
              <xs:documentation>The payment number given by the institution. This number is typically for manual payments. This is not an ACH payment number.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="loanPaymentAddress" type="xs:string">
            <xs:annotation>
              <xs:documentation>The payment address to which send manual payments should be sent</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="loanFuturePayoffAmount" type="xs:double">
            <xs:annotation>
              <xs:documentation>The payoff amount for the loan</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="loanFuturePayoffDate" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>The date to which the "Future Payoff Amount" applies</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ConsumerAttributesAnalyticId">
        <xs:annotation>
          <xs:documentation>An analytic ID and a date</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="analytic_id" type="xs:string">
            <xs:annotation>
              <xs:documentation>An ID for a Consumer Attributes report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="created_date" type="xs:string">
            <xs:annotation>
              <xs:documentation>A date-time without time zone</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ConsumerAttributeList">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="analytic_ids" type="schemas:ConsumerAttributesAnalyticId">
            <xs:annotation>
              <xs:documentation>A list of analytic IDs</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ConsumerAttributesDataDateRange">
        <xs:sequence>
          <xs:element minOccurs="1" name="From" type="xs:date">
            <xs:annotation>
              <xs:documentation>A 'YYYY-MM-DD' date notation as defined by [RFC 3339, section 5.6](https://www.rfc-editor.org/rfc/rfc3339#section-5.6)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="To" type="xs:date">
            <xs:annotation>
              <xs:documentation>A 'YYYY-MM-DD' date notation as defined by [RFC 3339, section 5.6](https://www.rfc-editor.org/rfc/rfc3339#section-5.6)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ConsumerAttributesData">
        <xs:sequence>
          <xs:element minOccurs="0" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="accountIds" type="xs:long" />
          <xs:element minOccurs="1" name="dateRange" type="schemas:ConsumerAttributesDataDateRange" />
          <xs:element minOccurs="1" name="income" type="schemas:ConsumerAttributesDataIncome" />
          <xs:element minOccurs="1" name="expenses" type="schemas:ConsumerAttributesDataExpenses" />
          <xs:element minOccurs="1" name="netAmount" type="schemas:ConsumerAttributesDataNetAmount" />
          <xs:element minOccurs="1" name="nsf" type="schemas:ConsumerAttributesDataNSF" />
          <xs:element minOccurs="1" name="assets" type="schemas:ConsumerAttributesDataAssets" />
          <xs:element minOccurs="1" name="liabilities" type="schemas:ConsumerAttributesDataLiabilities" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ConsumerAttributesDataIncome">
        <xs:sequence>
          <xs:element minOccurs="1" name="netAnnualIncome" type="xs:double">
            <xs:annotation>
              <xs:documentation>Net annual of all income by customer for the last 12 months</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="netAnnualIncomeByAccount">
            <xs:annotation>
              <xs:documentation>Net annual of income by account for the last 12 months</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="1" name="monthlyNetIncome">
            <xs:annotation>
              <xs:documentation>Net monthly income by customer for the last 12 months</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="1" name="monthlyNetIncomeByAccount">
            <xs:annotation>
              <xs:documentation>Net monthly income by account for the last 12 months</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ConsumerAttributesDataExpenses">
        <xs:sequence>
          <xs:element minOccurs="1" name="dwellingExpenseTotal" type="xs:double">
            <xs:annotation>
              <xs:documentation>Total dwelling expenses for the last 12 months: rent, mortgage, utilities, and insurance</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="dwellingExpensesByAccount">
            <xs:annotation>
              <xs:documentation>Total dwelling expenses by account for the last 12 months: rent, mortgage, utilities, and insurance</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="1" name="monthlyDwellingExpenseByCustomer">
            <xs:annotation>
              <xs:documentation>Monthly dwelling expenses by customer</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="1" name="monthlyDwellingExpenseByAccount">
            <xs:annotation>
              <xs:documentation>Monthly dwelling expenses by account</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="1" name="monthlyDebitAmountByCustomer">
            <xs:annotation>
              <xs:documentation>Total monthly debit amounts by customer</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="1" name="monthlyExpenseAmountByCustomer">
            <xs:annotation>
              <xs:documentation>Total monthly debit amounts, excluding transfers and credit card payments</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ConsumerAttributesDataNSF">
        <xs:sequence>
          <xs:element minOccurs="1" name="monthlyNSFOccurrences">
            <xs:annotation>
              <xs:documentation>The number of non-sufficient funds occurrences per calendar month</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="1" name="monthlyLateFeeOccurrences">
            <xs:annotation>
              <xs:documentation>The number of late fee occurrences</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ConsumerAttributesDataLiabilities">
        <xs:sequence>
          <xs:element minOccurs="1" name="monthlyLoanDeposits">
            <xs:annotation>
              <xs:documentation>Monthly loan deposits amount by account</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="1" name="monthlyLoanWitdrawls">
            <xs:annotation>
              <xs:documentation>Monthly loan withdrawal amount by account</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="1" name="monthlyNumberOfLoanDeposits">
            <xs:annotation>
              <xs:documentation>Monthly count of the number of loan deposits by account</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="1" name="monthlyNumberOfLoanWithdrawls">
            <xs:annotation>
              <xs:documentation>Monthly amount of the number of loan deposits by account</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ConsumerAttributesAssetsCustomer">
        <xs:sequence>
          <xs:element minOccurs="1" name="monthlyMinimumBalance">
            <xs:annotation>
              <xs:documentation>The minimum balance for the month across all customer accounts</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="1" name="monthlyMaximumBalance">
            <xs:annotation>
              <xs:documentation>The maximum balance for the month across all customer accounts</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="1" name="monthlyAverageBalance">
            <xs:annotation>
              <xs:documentation>The average balance for the month across all customer accounts</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="1" name="monthlyStandardDeviationOfBalance">
            <xs:annotation>
              <xs:documentation>The standard deviation for the month across all customer account balances</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="1" name="monthlyDaysWithPositiveBalance">
            <xs:annotation>
              <xs:documentation>The number of days in a month with a positive account balance across all customer account balances</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="1" name="monthlyDaysWithNegativeBalance">
            <xs:annotation>
              <xs:documentation>The number of days in a month with a negative account balance across all customer account balances</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="1" name="monthlyTwoMonthAverageBalance">
            <xs:annotation>
              <xs:documentation>Customer average balance for two months</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="1" name="monthlySixMonthAverageBalance">
            <xs:annotation>
              <xs:documentation>Customer average balance for six months</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="1" name="twelveMonthAverageBalance">
            <xs:annotation>
              <xs:documentation>Customer average balance for twelve months</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="1" name="twoMonthStandardDeviationOfBalance">
            <xs:annotation>
              <xs:documentation>Two month standard deviation of customer balance</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="1" name="sixMonthStandardDeviationOfBalance">
            <xs:annotation>
              <xs:documentation>Six month standard deviation of customer balance</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="1" name="twelveMonthStandardDeviationOfBalance">
            <xs:annotation>
              <xs:documentation>Twelve month standard deviation of customer balance</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ConsumerAttributesAssetsAccount">
        <xs:sequence>
          <xs:element minOccurs="1" name="monthlyClosingBalance">
            <xs:annotation>
              <xs:documentation>Account closing balance by month</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="1" name="monthlyMinimumBalance">
            <xs:annotation>
              <xs:documentation>Account minimum balance by month</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="1" name="monthlyMaximumBalance">
            <xs:annotation>
              <xs:documentation>Account maximum balance by month</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="1" name="monthlyAverageBalance">
            <xs:annotation>
              <xs:documentation>Account average balance by month</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="1" name="monthlyStandardDeviationOfBalance">
            <xs:annotation>
              <xs:documentation>Standard deviation of balance by account</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="1" name="monthlyDaysWithPositiveBalance">
            <xs:annotation>
              <xs:documentation>Number of days in a month with a positive account balance</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="1" name="monthlyDaysWithNegativeBalance">
            <xs:annotation>
              <xs:documentation>Number of days in a month with a negative account balance</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="1" name="monthlyTwoMonthAverageBalance">
            <xs:annotation>
              <xs:documentation>Two month average balance by account</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="1" name="monthlySixMonthAverageBalance">
            <xs:annotation>
              <xs:documentation>Six month average balance by account</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="1" name="twelveMonthAverageBalance">
            <xs:annotation>
              <xs:documentation>Twelve month average balance by account</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="1" name="twoMonthStandardDeviationOfBalance">
            <xs:annotation>
              <xs:documentation>Standard deviation of account balance across two months</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="1" name="sixMonthStandardDeviationOfBalance">
            <xs:annotation>
              <xs:documentation>Standard deviation of account balance across six months</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="1" name="twelveMonthStandardDeviationOfBalance">
            <xs:annotation>
              <xs:documentation>Standard deviation of account balance across twelve months</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ConsumerAttributesDataAssets">
        <xs:sequence>
          <xs:element minOccurs="1" name="customer" type="schemas:ConsumerAttributesAssetsCustomer" />
          <xs:element minOccurs="1" name="account" type="schemas:ConsumerAttributesAssetsAccount" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ConsumerAttributes">
        <xs:sequence>
          <xs:element minOccurs="1" name="analytics_id" type="xs:string">
            <xs:annotation>
              <xs:documentation>An ID for a Consumer Attributes report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="ca360_data" type="schemas:ConsumerAttributesData" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ConsumerAttributesDataNetAmount">
        <xs:sequence>
          <xs:element minOccurs="1" name="monthlyNetAmount" type="schemas:MonthlyNetAmount">
            <xs:annotation>
              <xs:documentation>Monthly net amount</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="MonthlyNetAmount">
        <xs:annotation>
          <xs:documentation>Monthly net amount</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="NetAmount">
            <xs:annotation>
              <xs:documentation>Net amount per month</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:any />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ConsumerAttributeAccountIDs">
        <xs:annotation>
          <xs:documentation>A list of account IDs</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="accountIds" type="xs:string">
            <xs:annotation>
              <xs:documentation>The list of account IDs</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="BalanceAndCashFlowAnalyticsReportConstraints">
        <xs:annotation>
          <xs:documentation>Request parameters from the partner to control the customer accounts included in the report, and the length of time to report on.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="accountIds" type="xs:long">
            <xs:annotation>
              <xs:documentation>The list of account IDs to include in the report. If omitted, all accounts on record for the customer will be used.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="lengthOfReport" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Number of days to search for transactions. Must be one of 30, 90, 180, 270, 365, or 730. If omitted, defaults to 2 years from current time at which the request was received (730 days).</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="BalanceAnalyticsAccountResult">
        <xs:sequence>
          <xs:element minOccurs="1" name="accountDetails" type="schemas:ObbAccountDetails">
            <xs:annotation>
              <xs:documentation>Details of the account and financial institution</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="accountId" type="xs:long">
            <xs:annotation>
              <xs:documentation>An account ID represented as a number</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="balanceAnalyticsMetrics" type="schemas:BalanceAnalyticsMetrics">
            <xs:annotation>
              <xs:documentation>Balance analytics metrics and calculations</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="currentReportRequest" type="schemas:ObbCurrentReportRequestDetails">
            <xs:annotation>
              <xs:documentation>Describes the requested attributes of the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="historicDataAvailability" type="schemas:ObbDataAvailability">
            <xs:annotation>
              <xs:documentation>Describes the availability of historical data for the account</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ObbAccountDetails">
        <xs:sequence>
          <xs:element minOccurs="0" name="accountNumberDisplay">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The account number from a financial institution in truncated format</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="50" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="accountOwner" type="schemas:ObbAccountOwner">
            <xs:annotation>
              <xs:documentation>Details about who is on record as the owner of the account. May be the business name, the business owner name, or otherwise</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="aggregationAttemptDate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A timestamp showing the last aggregation attempt. This will not be present until you have run your first aggregation for the account.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="25" />
                <xs:minLength value="25" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="aggregationStatusCode" type="xs:integer">
            <xs:annotation>
              <xs:documentation>The status of the most recent aggregation attempt. This will not be present until you have run your first aggregation for the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="aggregationSuccessDate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A timestamp showing the last successful aggregation of the account. This will not be present until you have run your first aggregation for the account.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="25" />
                <xs:minLength value="25" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="currency">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The currency of the account</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="5" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="currentBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>Current reported balance of the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="id" type="xs:long">
            <xs:annotation>
              <xs:documentation>An account ID represented as a number</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="institution" type="schemas:ObbInstitution">
            <xs:annotation>
              <xs:documentation>Details of the financial institution this account is home to</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="institutionLoginId" type="xs:long">
            <xs:annotation>
              <xs:documentation>An institution login ID (from the account record), represented as a number</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The account name from the institution</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="50" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="realAccountNumberLast4" type="xs:integer">
            <xs:annotation>
              <xs:documentation>The last 4 digits of the ACH account number</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="status">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>pending during account discovery, always active following successful account activation</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="50" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="type">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Account type, e.g. checking/saving</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="50" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ObbAccountOwner">
        <xs:sequence>
          <xs:element minOccurs="1" name="address">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Address of the owner on record for the account</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="255" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name of the owner on record for the account</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="255" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ObbInstitution">
        <xs:sequence>
          <xs:element minOccurs="0" name="institutionIconUrl">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>URL of the institution logo icon for reporting</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="255" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="institutionId" type="xs:integer">
            <xs:annotation>
              <xs:documentation>ID of the financial institution</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="institutionName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name of the financial institution</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="255" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="institutionPrimaryColor">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Primary branding color of the institution, in hex color format</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="7" />
                <xs:minLength value="7" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="BalanceAnalyticsMetrics">
        <xs:sequence>
          <xs:element minOccurs="0" name="availableBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>Available Balance</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="availableBalanceDate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Available Balance date</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="25" />
                <xs:minLength value="25" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="averageDailyBalanceByMonthForTheReportTimePeriod" type="schemas:ObbDateRangeAndAmount">
            <xs:annotation>
              <xs:documentation>Average daily ending balance each month over the report time period</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="averageDailyBalanceForTheReportTimePeriod" type="xs:double">
            <xs:annotation>
              <xs:documentation>Average Daily Balance</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="averageWeekdayBalanceForTheReportTimePeriod" type="xs:double">
            <xs:annotation>
              <xs:documentation>Average Weekday Balance</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="countDailyNegativeBalancesByMonthForTheReportTimePeriod" type="schemas:ObbDateRangeAndCount">
            <xs:annotation>
              <xs:documentation>Number of negative daily ending balances each month over the report time period</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="currentRunningBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>Current Running Balance Date</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="currentRunningBalanceDate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Current Running Balance date</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="25" />
                <xs:minLength value="25" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="dailyBalancesByWeekdayForTheReportTimePeriod" type="schemas:ObbDailyBalance">
            <xs:annotation>
              <xs:documentation>Daily balance of the account during weekdays over the length of the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="dailyBalancesForTheReportTimePeriod" type="schemas:ObbDailyBalance">
            <xs:annotation>
              <xs:documentation>Daily balance of the account over the length of the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="historicNumberOfWeeksAverageBalanceIncreasing" type="schemas:ObbNumWeeksAverageBalanceIncreasing">
            <xs:annotation>
              <xs:documentation>Report of average account balance week over week and count of weeks where the average balance increased</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="maximumDailyBalanceByMonthForTheReportTimePeriod" type="schemas:ObbDateRangeAndAmount">
            <xs:annotation>
              <xs:documentation>Maximum daily ending balance each month over the report time period</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="maximumRunningBalanceForTheReportTimePeriod" type="xs:double">
            <xs:annotation>
              <xs:documentation>Maximum Running Balance</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="minimumDailyBalanceByMonthForTheReportTimePeriod" type="schemas:ObbDateRangeAndAmount">
            <xs:annotation>
              <xs:documentation>Minimum daily ending balance each month over the report time period</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="minimumRunningBalanceForTheReportTimePeriod" type="xs:double">
            <xs:annotation>
              <xs:documentation>Minimum Running Balance</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ObbDateRangeAndAmount">
        <xs:sequence>
          <xs:element minOccurs="0" name="amount" type="xs:double">
            <xs:annotation>
              <xs:documentation>Metric value for the given period</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="period">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Period represented by this metric</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="12" />
                <xs:minLength value="8" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="periodBeginDate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Begin date of the period being reported</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="10" />
                <xs:minLength value="10" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="periodEndDate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>End date of the period being reported</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="10" />
                <xs:minLength value="10" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ObbDateRangeAndCount">
        <xs:sequence>
          <xs:element minOccurs="1" name="count" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Count of occurrences for the given period</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="period">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Period represented by this metric</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="12" />
                <xs:minLength value="8" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="periodBeginDate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Begin date of the period being reported</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="10" />
                <xs:minLength value="10" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="periodEndDate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>End date of the period being reported</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="10" />
                <xs:minLength value="10" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ObbDailyBalance">
        <xs:sequence>
          <xs:element minOccurs="1" name="date">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Date of balance information</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="10" />
                <xs:minLength value="10" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="dayOfWeek">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Day of the week for which balance information available</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="9" />
                <xs:minLength value="6" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="endingBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>End of day balance</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ObbNumWeeksAverageBalanceIncreasing">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="historicAverageWeeklyBalances" type="schemas:ObbAverageWeeklyBalance">
            <xs:annotation>
              <xs:documentation>Average weekly balances over the known history</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="historicNumberOfWeeksAverageBalanceIncreasing" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Number of weeks during the known history where the average balance of the account increased week over week</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="historicNumberOfWeeksWithDataAvailable" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Number of weeks during the history in which data was available</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ObbAverageWeeklyBalance">
        <xs:sequence>
          <xs:element minOccurs="1" name="amount" type="xs:double">
            <xs:annotation>
              <xs:documentation>Average daily ending balance during the week</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="fromDate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Begin date of the week</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="10" />
                <xs:minLength value="10" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="toDate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>End date of the week</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="10" />
                <xs:minLength value="10" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="week" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Week number, where the first week of each year begins on January 1st and ends on January 7th. May be in the range [1, 53]</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ObbCurrentReportRequestDetails">
        <xs:sequence>
          <xs:element minOccurs="1" name="reportBeginDate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Date from when the requested data is available</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="10" />
                <xs:minLength value="10" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="reportEndDate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Date to which the requested data is available</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="10" />
                <xs:minLength value="10" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="reportRequestDate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The date and time the report was requested</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="25" />
                <xs:minLength value="25" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="requestedDaysForReport" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Number of days requested for the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="requestedReportBeginDate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Date the report would have began on if enough data was available for which the partner requested</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="10" />
                <xs:minLength value="10" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ObbDataAvailability">
        <xs:sequence>
          <xs:element minOccurs="1" name="historicAvailabilityBeginDate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Begin date for data availability</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="10" />
                <xs:minLength value="10" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="historicAvailabilityEndDate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>End date for data availability</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="10" />
                <xs:minLength value="10" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="historicAvailableDays" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Days for which transaction details are available</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="historicDataAvailability">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description of historic data availability</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="255" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="BalanceAnalyticsBusinessSummary">
        <xs:sequence>
          <xs:element minOccurs="0" name="balanceAnalyticsMetrics" type="schemas:BalanceAnalyticsMetrics">
            <xs:annotation>
              <xs:documentation>Balance analytics metrics and calculations across all accounts in the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="currentReportRequest" type="schemas:ObbCurrentReportRequestDetails">
            <xs:annotation>
              <xs:documentation>Describes the requested attributes of the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="historicDataAvailability" type="schemas:ObbDataAvailability">
            <xs:annotation>
              <xs:documentation>Describes the availability of historical data for all accounts owned by the business</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ObbReportHeader">
        <xs:annotation>
          <xs:documentation>Includes details about the business the report is generated for and metadata about the report</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="businessAddress">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Business address line 1</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="255" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="businessCity">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Business address city</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="255" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="businessName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name of the business</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="255" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="businessState">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Business address state</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="255" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="businessZip">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Business address zip</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="255" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="referenceNumber">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Partner-provided reference number</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="255" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="reportDate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Date the report was requested</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="25" />
                <xs:minLength value="25" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="reportId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Generated unique report ID</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="255" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CashFlowAnalyticsAccountResult">
        <xs:sequence>
          <xs:element minOccurs="1" name="accountDetails" type="schemas:ObbAccountDetails">
            <xs:annotation>
              <xs:documentation>Details of the account and financial institution</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="accountId" type="xs:long">
            <xs:annotation>
              <xs:documentation>An account ID represented as a number</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="cashflowAnalyticsMetrics" type="schemas:CashFlowAnalyticsMetrics">
            <xs:annotation>
              <xs:documentation>Generated cashflow calculations/metrics</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="currentReportRequest" type="schemas:ObbCurrentReportRequestDetails">
            <xs:annotation>
              <xs:documentation>Describes the requested attributes of the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="historicDataAvailability" type="schemas:ObbDataAvailability">
            <xs:annotation>
              <xs:documentation>Describes the availability of data at the time the report was requested</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CashFlowAnalyticsMetrics">
        <xs:sequence>
          <xs:element minOccurs="0" name="inflow" type="schemas:CashFlowInflowAttributes">
            <xs:annotation>
              <xs:documentation>Inflow Attributes</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="negativeTriggers" type="schemas:CashFlowNegativeTriggers">
            <xs:annotation>
              <xs:documentation>Details of transactions that may be warning signs of bad creditworthiness</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="outflow" type="schemas:CashFlowOutflowAttributes">
            <xs:annotation>
              <xs:documentation>Outflow attributes</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="revenueByMonthForTheReportTimePeriod" type="schemas:ObbDateRangeAndAmount">
            <xs:annotation>
              <xs:documentation>Sum of all transactions categorized as revenue, split by months</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="revenueForTheReportTimePeriod" type="xs:double">
            <xs:annotation>
              <xs:documentation>Sum of all transactions categorized as revenue</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="transactionAnalytics" type="schemas:CashFlowTransactionAnalyticsAttributes">
            <xs:annotation>
              <xs:documentation>Transaction Analytics Attributes</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CashFlowInflowAttributes">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="averageDepositByMonthForTheReportTimePeriod" type="schemas:ObbDateRangeAndAmount">
            <xs:annotation>
              <xs:documentation>Average value of deposits during periods in the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="countDepositsByMonthForTheReportTimePeriod" type="schemas:ObbDateRangeAndCount">
            <xs:annotation>
              <xs:documentation>Count of all deposits during periods in the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="historicCountOfDepositTransactions" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Count of ALL deposits over entire known history of the account (may exceed requested length of report)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="historicSumOfDeposits" type="xs:double">
            <xs:annotation>
              <xs:documentation>Sum of ALL deposits over entire known history of the account (may exceed requested length of report)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="maximumDepositByMonthForTheReportTimePeriod" type="schemas:ObbDateRangeAndAmount">
            <xs:annotation>
              <xs:documentation>Maximum deposit value for different periods in the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="minimumDepositByMonthForTheReportTimePeriod" type="schemas:ObbDateRangeAndAmount">
            <xs:annotation>
              <xs:documentation>Minimum deposit value for different periods in the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="sumDepositsByMonthForTheReportTimePeriod" type="schemas:ObbDateRangeAndAmount">
            <xs:annotation>
              <xs:documentation>Sum of all deposits during periods in the report</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CashFlowNegativeTriggers">
        <xs:sequence>
          <xs:element minOccurs="0" name="insufficientFundFees" type="schemas:CashFlowInsufficientFundsFees">
            <xs:annotation>
              <xs:documentation>Non Sufficient Fund Fees</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CashFlowInsufficientFundsFees">
        <xs:sequence>
          <xs:element minOccurs="0" name="countOfTransactionsForTheReportTimePeriod" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Count of all NSF transactions during the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="sumOfTransactionsForTheReportTimePeriod" type="xs:double">
            <xs:annotation>
              <xs:documentation>Sum of all NSF transactions during the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="transactions" type="schemas:InsufficientFundsTransaction">
            <xs:annotation>
              <xs:documentation>Transactions categorized as NSF</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="InsufficientFundsTransaction">
        <xs:sequence>
          <xs:element minOccurs="1" name="amount" type="xs:double">
            <xs:annotation>
              <xs:documentation>Amount of the NSF transaction</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description of the transaction</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="255" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="memo">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Transaction memo</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="255" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="postedDate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Posted date of the NSF transaction</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="10" />
                <xs:minLength value="10" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="transactionId" type="xs:long">
            <xs:annotation>
              <xs:documentation>Finicity transaction ID</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CashFlowOutflowAttributes">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="averageWithdrawalByMonthForTheReportTimePeriod" type="schemas:ObbDateRangeAndAmount">
            <xs:annotation>
              <xs:documentation>Average value of withdrawals during periods in the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="countWithdrawalsByMonthForTheReportTimePeriod" type="schemas:ObbDateRangeAndCount">
            <xs:annotation>
              <xs:documentation>Count of all withdrawals during periods in the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="historicCountOfWithdrawalTransactions" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Count of ALL withdrawals over entire known history of the account (may exceed requested length of report)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="historicSumOfWithdrawals" type="xs:double">
            <xs:annotation>
              <xs:documentation>Sum of ALL withdrawals over entire known history of the account (may exceed requested length of report)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="maximumWithdrawalByMonthForTheReportTimePeriod" type="schemas:ObbDateRangeAndAmount">
            <xs:annotation>
              <xs:documentation>Maximum withdrawal value for different periods in the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="minimumWithdrawalByMonthForTheReportTimePeriod" type="schemas:ObbDateRangeAndAmount">
            <xs:annotation>
              <xs:documentation>Minimum withdrawal value for different periods in the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="sumWithdrawalsByMonthForTheReportTimePeriod" type="schemas:ObbDateRangeAndAmount">
            <xs:annotation>
              <xs:documentation>Sum of all withdrawals during periods in the report</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CashFlowTransactionAnalyticsAttributes">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="activityDepositsCreditsForTheReportTimePeriod" type="schemas:CashFlowActivityDepositsCredits">
            <xs:annotation>
              <xs:documentation>List of all deposit transactions posted to the account during the report period</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="activityWithdrawalsDebitsForTheReportTimePeriod" type="schemas:CashFlowActivityWithdrawalsDebits">
            <xs:annotation>
              <xs:documentation>List of all withdrawal transactions posted to the account during the report period</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="averageTransactionValueByMonthForTheReportTimePeriod" type="schemas:ObbDateRangeAndAmount">
            <xs:annotation>
              <xs:documentation>Average value of transactions during periods in the report. Values may be positive or negative</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="historicWeeksWithZeroTransactions" type="schemas:CashFlowNumWeeksZeros">
            <xs:annotation>
              <xs:documentation>Details of weeks with zero transactions during the known history of the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="lastTransactionDate" type="schemas:LastTransactionDate">
            <xs:annotation>
              <xs:documentation>Latest posted transaction(s) to the account. May be more than one if they share the same timestamp</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="netCashFlowByMonthForTheReportTimePeriod" type="schemas:ObbDateRangeAndAmount">
            <xs:annotation>
              <xs:documentation>Net cash flow for each month during the report period</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="netCashFlowForTheReportTimePeriod" type="xs:double">
            <xs:annotation>
              <xs:documentation>Net cash flow during the report period (may be positive or negative)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CashFlowActivityDepositsCredits">
        <xs:sequence>
          <xs:element minOccurs="1" name="date">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Date the deposit transaction was posted</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="10" />
                <xs:minLength value="10" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="depositsCredits" type="xs:double">
            <xs:annotation>
              <xs:documentation>Amount of the deposit</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="transactionDescription">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description of transaction</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="255" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CashFlowActivityWithdrawalsDebits">
        <xs:sequence>
          <xs:element minOccurs="1" name="date">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Date the withdrawal transaction was posted</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="10" />
                <xs:minLength value="10" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="transactionDescription">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description of transaction</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="255" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="withdrawalsDebits" type="xs:double">
            <xs:annotation>
              <xs:documentation>Amount of the withdrawal</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CashFlowNumWeeksZeros">
        <xs:sequence>
          <xs:element minOccurs="1" name="historicNumberOfWeeksWithDataAvailable" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Number of weeks during known history of account in which data was available</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="historicNumberOfWeeksZeroTransactions" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Number of weeks during known history of account where zero transactions were posted</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="historicWeeksWithZeroTransactions" type="schemas:ObbWeekOfYear">
            <xs:annotation>
              <xs:documentation>List of weeks with zero reported transactions</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ObbWeekOfYear">
        <xs:sequence>
          <xs:element minOccurs="1" name="fromDate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Begin date of the week</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="10" />
                <xs:minLength value="10" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="toDate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>End date of the week</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="10" />
                <xs:minLength value="10" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="week" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Week number, where the first week of each year begins on January 1st and ends on January 7th. May be in the range [1, 53]</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CashFlowAnalyticsBusinessSummary">
        <xs:sequence>
          <xs:element minOccurs="0" name="cashflowAnalyticsMetrics" type="schemas:CashFlowAnalyticsMetrics">
            <xs:annotation>
              <xs:documentation>Cash flow analytics metrics and calculations across all accounts in the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="currentReportRequest" type="schemas:ObbCurrentReportRequestDetails">
            <xs:annotation>
              <xs:documentation>Describes the requested attributes of the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="historicDataAvailability" type="schemas:ObbDataAvailability">
            <xs:annotation>
              <xs:documentation>Describes the availability of historical data for all accounts owned by the business</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ObbErrorMessage">
        <xs:annotation>
          <xs:documentation>OBB Error response message</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="errorCode" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Error code</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="message">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Detailed reason about the source of the error</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="255" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="BalanceAndCashFlowAnalyticsReportAck">
        <xs:annotation>
          <xs:documentation>Response given when analtyics were generated successfully, providing the caller with a report ID which can be used to retrieve the report as JSON or a PDF.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="accountIds" type="xs:long">
            <xs:annotation>
              <xs:documentation>List of account IDs included in the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="businessId" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Business ID associated with the requested customer</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="createdDate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Created date of balance analytics request</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="25" />
                <xs:minLength value="25" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="customerId" type="xs:long">
            <xs:annotation>
              <xs:documentation>A customer ID represented as a number. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="reportId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A report ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="reportPin">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>PIN that may be used to access the report</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="50" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="requesterName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name of requester</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="255" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Title of the report</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="BalanceAnalyticsReport">
        <xs:annotation>
          <xs:documentation>Balance analytics report data as JSON</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="accountResults" type="schemas:BalanceAnalyticsAccountResult">
            <xs:annotation>
              <xs:documentation>Balance results per account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="businessId" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Business ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="businessSummary" type="schemas:BalanceAnalyticsBusinessSummary">
            <xs:annotation>
              <xs:documentation>Balance analytics summarized across all accounts in the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="customerId" type="xs:long">
            <xs:annotation>
              <xs:documentation>A customer ID represented as a number. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="reportHeader" type="schemas:ObbReportHeader">
            <xs:annotation>
              <xs:documentation>Customer and report metadata</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="requesterName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name of requester</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="255" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Title of the report</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CashFlowAnalyticsReport">
        <xs:annotation>
          <xs:documentation>Cash Flow Analytics report data as JSON</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="accountResults" type="schemas:CashFlowAnalyticsAccountResult">
            <xs:annotation>
              <xs:documentation>Cash flow results per account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="businessId" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Business ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="businessSummary" type="schemas:CashFlowAnalyticsBusinessSummary">
            <xs:annotation>
              <xs:documentation>Cash flow analytics summarized across all accounts in the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="customerId" type="xs:long">
            <xs:annotation>
              <xs:documentation>A customer ID represented as a number. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="reportHeader" type="schemas:ObbReportHeader">
            <xs:annotation>
              <xs:documentation>Customer and report metadata</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="requesterName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name of requester</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="255" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Title of the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="totalRevenue" type="xs:double">
            <xs:annotation>
              <xs:documentation>The total revenue</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Account">
        <xs:sequence>
          <xs:element minOccurs="1" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>Finicity account ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="ownerName" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name(s) of the account owner(s), retrieved from the institution.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="ownerAddress" type="xs:string">
            <xs:annotation>
              <xs:documentation>The mailing address of the account owner, retrieved from the institution.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="name" type="xs:string">
            <xs:annotation>
              <xs:documentation>The account name from the institution</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="number" type="xs:string">
            <xs:annotation>
              <xs:documentation>The account number from the institution (obfuscated)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>CFR: `ALL` (`checking` / `savings` / `loan` / `mortgage` / `credit card` / `CD` / `MM` / `investment`...)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="aggregationStatusCode" type="xs:string">
            <xs:annotation>
              <xs:documentation>The status of the most recent aggregation attempt for this account (non-zero means the account was not accessed successfully for this report, and additional fields for this account may not be reliable)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="currentBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>The cleared balance of the account as-of `balanceDate`</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="availableBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>Available balance</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="balanceDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A timestamp showing when the `balance` was captured</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="transactions" type="schemas:ReportTransaction">
            <xs:annotation>
              <xs:documentation>a list of transaction records</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="cashFlowBalance" type="schemas:CashFlowCashFlowBalance" />
          <xs:element minOccurs="0" name="cashFlowCredit" type="schemas:CashFlowCashFlowCredit" />
          <xs:element minOccurs="0" name="cashFlowDebit" type="schemas:CashFlowCashFlowDebit" />
          <xs:element minOccurs="0" name="cashFlowCharacteristic" type="schemas:CashFlowCashFlowCharacteristic" />
          <xs:element minOccurs="1" name="balance" type="xs:double">
            <xs:annotation>
              <xs:documentation>The cleared balance of the account as-of `balanceDate`</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="averageMonthlyBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>The average monthly balance of the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="totNumberInsufficientFundsFeeDebitTxAccount" type="xs:integer">
            <xs:annotation>
              <xs:documentation>The count for the total number of insufficient funds transactions, based on the `fromDate` of the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount" type="xs:integer">
            <xs:annotation>
              <xs:documentation>The total number of  insufficient funds fees for the account over six months</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount" type="xs:long">
            <xs:annotation>
              <xs:documentation>The total number of days since the most recent insufficient funds fee for the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="asset" type="schemas:PrequalificationReportAssetSummary" />
          <xs:element minOccurs="0" name="details" type="schemas:AccountDetails" />
          <xs:element minOccurs="0" name="totNumberInsufficientFundsFeeDebitTxOver2MonthsAccount" type="xs:long">
            <xs:annotation>
              <xs:documentation>The count for the total number of insufficient funds transactions for the last two months, based on the `fromDate` of the report.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="incomeStreams" type="schemas:VOAIReportIncomeStream2">
            <xs:annotation>
              <xs:documentation>A list of income stream records</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="beginningBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>Beginning balance of account per the time period in the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="miscDeposits" type="schemas:ReportTransaction">
            <xs:annotation>
              <xs:documentation>A list of miscellaneous deposits</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AccountDetails1">
        <xs:sequence>
          <xs:element minOccurs="0" name="accountNumberDisplay">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The account number from a financial institution in truncated format</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="50" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="accountOwner" type="schemas:ObbAccountOwner" />
          <xs:element minOccurs="0" name="aggregationAttemptDate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A timestamp showing the last aggregation attempt. This will not be present until you have run your first aggregation for the account.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="25" />
                <xs:minLength value="25" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="aggregationStatusCode" type="xs:integer">
            <xs:annotation>
              <xs:documentation>The status of the most recent aggregation attempt. This will not be present until you have run your first aggregation for the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="aggregationSuccessDate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A timestamp showing the last successful aggregation of the account. This will not be present until you have run your first aggregation for the account.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="25" />
                <xs:minLength value="25" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="currency">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The currency of the account</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="5" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="currentBalance" type="xs:double">
            <xs:annotation>
              <xs:documentation>Current reported balance of the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="id" type="xs:long">
            <xs:annotation>
              <xs:documentation>An account ID represented as a number</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="institution" type="schemas:ObbInstitution" />
          <xs:element minOccurs="0" name="institutionLoginId" type="xs:long">
            <xs:annotation>
              <xs:documentation>An institution login ID (from the account record), represented as a number</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The account name from the institution</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="50" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="realAccountNumberLast4" type="xs:integer">
            <xs:annotation>
              <xs:documentation>The last 4 digits of the ACH account number</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="status">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>pending during account discovery, always active following successful account activation</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="50" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="type">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Account type, e.g. checking/saving</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="50" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="BalanceAnalyticsAccountResult1">
        <xs:sequence>
          <xs:element minOccurs="1" name="accountDetails" type="schemas:AccountDetails1" />
          <xs:element minOccurs="1" name="accountId" type="xs:long">
            <xs:annotation>
              <xs:documentation>An account ID represented as a number</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="balanceAnalyticsMetrics" type="schemas:BalanceAnalyticsMetrics">
            <xs:annotation>
              <xs:documentation>Balance analytics metrics and calculations</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="currentReportRequest" type="schemas:ObbCurrentReportRequestDetails" />
          <xs:element minOccurs="1" name="historicDataAvailability" type="schemas:ObbDataAvailability" />
          <xs:element minOccurs="0" name="cashflowAnalyticsMetrics" type="schemas:CashFlowAnalyticsMetrics">
            <xs:annotation>
              <xs:documentation>Generated cashflow calculations/metrics</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="BusinessSummary">
        <xs:sequence>
          <xs:element minOccurs="0" name="cashflowAnalyticsMetrics" type="schemas:CashFlowAnalyticsMetrics">
            <xs:annotation>
              <xs:documentation>Cash flow analytics metrics and calculations across all accounts in the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="currentReportRequest" type="schemas:ObbCurrentReportRequestDetails" />
          <xs:element minOccurs="1" name="historicDataAvailability" type="schemas:ObbDataAvailability" />
          <xs:element minOccurs="0" name="balanceAnalyticsMetrics" type="schemas:BalanceAnalyticsMetrics">
            <xs:annotation>
              <xs:documentation>Balance analytics metrics and calculations across all accounts in the report</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CashFlowAnalyticsAccountResult1">
        <xs:sequence>
          <xs:element minOccurs="1" name="accountDetails" type="schemas:AccountDetails1" />
          <xs:element minOccurs="1" name="accountId" type="xs:long">
            <xs:annotation>
              <xs:documentation>An account ID represented as a number</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="cashflowAnalyticsMetrics" type="schemas:CashFlowAnalyticsMetrics">
            <xs:annotation>
              <xs:documentation>Generated cashflow calculations/metrics</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="currentReportRequest" type="schemas:ObbCurrentReportRequestDetails" />
          <xs:element minOccurs="1" name="historicDataAvailability" type="schemas:ObbDataAvailability" />
          <xs:element minOccurs="0" name="balanceAnalyticsMetrics" type="schemas:BalanceAnalyticsMetrics">
            <xs:annotation>
              <xs:documentation>Balance analytics metrics and calculations</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GetObbAnalyticsReportFcraResponse">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="accountResults" type="schemas:BalanceAnalyticsAccountResult1">
            <xs:annotation>
              <xs:documentation>Balance results per account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="businessId" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Business ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="businessSummary" type="schemas:BusinessSummary" />
          <xs:element minOccurs="1" name="customerId" type="xs:long">
            <xs:annotation>
              <xs:documentation>A customer ID represented as a number. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="reportHeader" type="schemas:ReportHeader" />
          <xs:element minOccurs="0" name="requesterName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name of requester</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="255" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Title of the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="totalRevenue" type="xs:double">
            <xs:annotation>
              <xs:documentation>The total revenue</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GetObbAnalyticsReportResponse">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="accountResults" type="schemas:CashFlowAnalyticsAccountResult1">
            <xs:annotation>
              <xs:documentation>Cash flow results per account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="businessId" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Business ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="businessSummary" type="schemas:BusinessSummary" />
          <xs:element minOccurs="1" name="customerId" type="xs:long">
            <xs:annotation>
              <xs:documentation>A customer ID represented as a number. See Add Customer API for how to create a customer ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="reportHeader" type="schemas:ReportHeader" />
          <xs:element minOccurs="0" name="requesterName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name of requester</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="255" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Title of the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="totalRevenue" type="xs:double">
            <xs:annotation>
              <xs:documentation>The total revenue</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LastTransactionDate">
        <xs:sequence>
          <xs:element minOccurs="1" name="date" type="xs:string">
            <xs:annotation>
              <xs:documentation>Date the deposit transaction was posted</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="depositsCredits" type="xs:double">
            <xs:annotation>
              <xs:documentation>Amount of transaction if deposit, otherwise null</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="withdrawalsDebits" type="xs:double">
            <xs:annotation>
              <xs:documentation>Amount of transaction if withdrawal, otherwise null</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="zeroAmountTransaction" type="xs:double">
            <xs:annotation>
              <xs:documentation>Amount of transaction if zero, otherwise null</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="transactionDescription" type="xs:string">
            <xs:annotation>
              <xs:documentation>Description of transaction</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ReportHeader">
        <xs:sequence>
          <xs:element minOccurs="0" name="businessAddress">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Business address line 1</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="255" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="businessCity">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Business address city</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="255" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="businessName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name of the business</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="255" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="businessState">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Business address state</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="255" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="businessZip">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Business address zip</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="255" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="referenceNumber">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Partner-provided reference number</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="255" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="reportDate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Date the report was requested</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="25" />
                <xs:minLength value="25" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="reportId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Generated unique report ID</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="255" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ReportInstitution2">
        <xs:sequence>
          <xs:element minOccurs="1" name="id" type="xs:long">
            <xs:annotation>
              <xs:documentation>The ID of a financial institution, represented as a number</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="name" type="xs:string">
            <xs:annotation>
              <xs:documentation>Finicity institution name</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="urlHomeApp" type="xs:string">
            <xs:annotation>
              <xs:documentation>The URL of the Financial Institution</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="accounts" type="schemas:Account">
            <xs:annotation>
              <xs:documentation>A list of account records</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VOAIReportIncomeStream2">
        <xs:annotation>
          <xs:documentation>A report income stream record</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="id" type="xs:string">
            <xs:annotation>
              <xs:documentation>Income stream ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="name" type="xs:string">
            <xs:annotation>
              <xs:documentation>A human-readable name based on the `normalizedPayee` name of the transactions for this income stream</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>Possible values: "ACTIVE", "INACTIVE"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="estimateInclusion" type="xs:string">
            <xs:annotation>
              <xs:documentation>Possible values: "HIGH", "MODERATE", "LOW", "NO"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="confidence" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Level of confidence that the deposit stream represents income (example: 85%)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="cadence" type="schemas:CadenceDetails" />
          <xs:element minOccurs="1" maxOccurs="unbounded" name="netMonthly" type="schemas:NetMonthly">
            <xs:annotation>
              <xs:documentation>A list of net monthly records. One instance for each complete calendar month in the report.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="netAnnual" type="xs:double">
            <xs:annotation>
              <xs:documentation>Sum of all values in `netMonthlyIncome` over the previous 12 months</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="projectedNetAnnual" type="xs:double">
            <xs:annotation>
              <xs:documentation>Projected net income over the next 12 months, across all income streams, based on `netAnnualIncome`</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="estimatedGrossAnnual" type="xs:double">
            <xs:annotation>
              <xs:documentation>Before-tax gross annual income (estimated from `netAnnual`) across all income stream in the past 12 months</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="projectedGrossAnnual" type="xs:double">
            <xs:annotation>
              <xs:documentation>Projected gross income over the next 12 months, across all active income streams, based on `projectedNetAnnual`</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="averageMonthlyIncomeNet" type="xs:double">
            <xs:annotation>
              <xs:documentation>Monthly average amount over the previous 24 months</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="incomeStreamMonths" type="xs:integer">
            <xs:annotation>
              <xs:documentation>The number of months the income transactions are observed</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="transactions" type="schemas:ReportTransaction">
            <xs:annotation>
              <xs:documentation>A list of transaction records</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="daysSinceLastTransaction" type="xs:integer">
            <xs:annotation>
              <xs:documentation>The number of days since the last credit transaction for the particular income stream</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="nextExpectedTransactionDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>The next expected credit transaction date for the particular income stream, based on the cadence</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VOIEPayStatement2">
        <xs:sequence>
          <xs:element minOccurs="1" name="payPeriod" type="xs:string">
            <xs:annotation>
              <xs:documentation>The pay period of the pay statement</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="billable" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Designates whether the pay statement is billable</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="assetId" type="xs:string">
            <xs:annotation>
              <xs:documentation>The asset ID of the stored pay statement</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="payDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>The listed pay date for the pay statement</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="startDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>The beginning of the pay period</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="endDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>The end of the pay period</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="netPayCurrent" type="xs:double">
            <xs:annotation>
              <xs:documentation>The total pay after deductions for the employee for the current pay period</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="netPayYTD" type="xs:double">
            <xs:annotation>
              <xs:documentation>The total accumulation of pay after deductions for the employee for the current pay year</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="grossPayCurrent" type="xs:double">
            <xs:annotation>
              <xs:documentation>The total pay before deductions for the employee for the current pay period</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="grossPayYTD" type="xs:double">
            <xs:annotation>
              <xs:documentation>The total accumulation of pay before deductions for the employee for the current pay year</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="payrollProvider" type="xs:string">
            <xs:annotation>
              <xs:documentation>The company that provides the pay stub.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="employer" type="schemas:Employer" />
          <xs:element minOccurs="1" name="employee" type="schemas:Employee" />
          <xs:element minOccurs="1" maxOccurs="unbounded" name="payStat" type="schemas:PayStat">
            <xs:annotation>
              <xs:documentation>Information pertaining to the earnings on the pay statement</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="deductions" type="schemas:Deduction">
            <xs:annotation>
              <xs:documentation>Information pertaining to deductions on the pay statement</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="directDeposits" type="schemas:DirectDeposit">
            <xs:annotation>
              <xs:documentation>Information pertaining to direct deposits on the pay statement</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="monthlyIncome" type="schemas:PaystubMonthlyIncomeRecord" />
          <xs:element minOccurs="1" maxOccurs="unbounded" name="institutions" type="xs:string">
            <xs:annotation>
              <xs:documentation>Not populated for the voieWithStatement style of paystub report. For the VOIE - Paystub (with TXVerify) reports this would include details of the financial institution accounts and income streams with matching transactions to the pay statement.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="errorCode" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Error code for the asset</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="errorMessage" type="xs:string">
            <xs:annotation>
              <xs:documentation>Error message for the asset</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomerAccountsByInstitutionLogin_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="institutionLoginId" type="xs:string">
            <xs:annotation>
              <xs:documentation>The institution login ID</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomerAccountsByInstitutionLogin_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:CustomerAccounts">
            <xs:annotation>
              <xs:documentation>A list of customer accounts</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomerAccountsByInstitutionLogin_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomerAccountsByInstitutionLogin_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomerAccountsByInstitutionLogin_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_RefreshCustomerAccountsByInstitutionLogin_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="institutionLoginId" type="xs:string">
            <xs:annotation>
              <xs:documentation>The institution login ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" fixed="application/json" name="Content-Type" type="xs:string" />
          <xs:element minOccurs="0" name="body" type="xs:anyType">
            <xs:annotation>
              <xs:documentation>No payload expected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_RefreshCustomerAccountsByInstitutionLogin_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:CustomerAccounts">
            <xs:annotation>
              <xs:documentation>A list of customer accounts</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_RefreshCustomerAccountsByInstitutionLogin_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_RefreshCustomerAccountsByInstitutionLogin_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_RefreshCustomerAccountsByInstitutionLogin_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DELETE_DeleteCustomerAccountsByInstitutionLogin_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="institutionLoginId" type="xs:string">
            <xs:annotation>
              <xs:documentation>The institution login ID</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DELETE_DeleteCustomerAccountsByInstitutionLogin_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response204">
            <xs:annotation>
              <xs:documentation>The customer accounts were successfully deleted</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DELETE_DeleteCustomerAccountsByInstitutionLogin_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DELETE_DeleteCustomerAccountsByInstitutionLogin_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DELETE_DeleteCustomerAccountsByInstitutionLogin_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomerAccount_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="accountId" type="xs:string">
            <xs:annotation>
              <xs:documentation>The account ID</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomerAccount_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:CustomerAccount">
            <xs:annotation>
              <xs:documentation>An account represents a bank account such as a checking or savings that the customer has added via the Connect interface.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomerAccount_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomerAccount_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomerAccount_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DELETE_DeleteCustomerAccount_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="accountId" type="xs:string">
            <xs:annotation>
              <xs:documentation>The account ID</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DELETE_DeleteCustomerAccount_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response204">
            <xs:annotation>
              <xs:documentation>The customer account was successfully deleted</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DELETE_DeleteCustomerAccount_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DELETE_DeleteCustomerAccount_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DELETE_DeleteCustomerAccount_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomerAccounts_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>A filter to fetch account in the given status</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomerAccounts_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:CustomerAccounts">
            <xs:annotation>
              <xs:documentation>A list of customer accounts</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomerAccounts_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomerAccounts_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomerAccounts_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_RefreshCustomerAccounts_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" fixed="application/json" name="Content-Type" type="xs:string" />
          <xs:element minOccurs="0" name="body" type="xs:anyType">
            <xs:annotation>
              <xs:documentation>No payload expected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_RefreshCustomerAccounts_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:CustomerAccounts">
            <xs:annotation>
              <xs:documentation>A list of customer accounts</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_RefreshCustomerAccounts_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_RefreshCustomerAccounts_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_RefreshCustomerAccounts_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomerAccountsByInstitution_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="institutionId" type="xs:long">
            <xs:annotation>
              <xs:documentation>The institution ID</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomerAccountsByInstitution_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:CustomerAccounts">
            <xs:annotation>
              <xs:documentation>A list of customer accounts</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomerAccountsByInstitution_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomerAccountsByInstitution_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomerAccountsByInstitution_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateConsumerAttributes_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" fixed="application/json" name="Content-Type" type="xs:string" />
          <xs:element minOccurs="0" name="body" type="schemas:ConsumerAttributeAccountIDs" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateConsumerAttributes_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:ConsumerAttributesAnalyticId">
            <xs:annotation>
              <xs:documentation>An analytic ID and a date</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateConsumerAttributes_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateConsumerAttributes_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateConsumerAttributes_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_ListConsumerAttributes_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_ListConsumerAttributes_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:ConsumerAttributeList">
            <xs:annotation>
              <xs:documentation>Attributes IDs were successfully retrieved</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_ListConsumerAttributes_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_ListConsumerAttributes_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_ListConsumerAttributes_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateFCRAConsumerAttributes_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" fixed="application/json" name="Content-Type" type="xs:string" />
          <xs:element minOccurs="0" name="body" type="schemas:ConsumerAttributeAccountIDs" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateFCRAConsumerAttributes_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:ConsumerAttributesAnalyticId">
            <xs:annotation>
              <xs:documentation>An analytic ID and a date</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateFCRAConsumerAttributes_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateFCRAConsumerAttributes_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateFCRAConsumerAttributes_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetConsumerAttributesByID_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="analyticsId" type="xs:string">
            <xs:annotation>
              <xs:documentation>The analytic ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetConsumerAttributesByID_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:ConsumerAttributes">
            <xs:annotation>
              <xs:documentation>The Consumer Attributes report was successfully retrieved</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetConsumerAttributesByID_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetConsumerAttributesByID_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetConsumerAttributesByID_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetFCRAConsumerAttributesByID_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="analyticsId" type="xs:string">
            <xs:annotation>
              <xs:documentation>The analytic ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="purpose" type="xs:string">
            <xs:annotation>
              <xs:documentation>2-digit code from [Permissible Purpose Codes](https://docs.finicity.com/permissible-purpose-codes/), specifying the reason for retrieving this report. Required for retrieving some reports.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetFCRAConsumerAttributesByID_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:ConsumerAttributes">
            <xs:annotation>
              <xs:documentation>The Consumer Attributes report was successfully retrieved</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetFCRAConsumerAttributesByID_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetFCRAConsumerAttributesByID_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetFCRAConsumerAttributesByID_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_RegisterApp_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" fixed="application/json" name="Content-Type" type="xs:string" />
          <xs:element minOccurs="1" name="body" type="schemas:Application" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_RegisterApp_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response201" type="schemas:RegisteredApplication">
            <xs:annotation>
              <xs:documentation>The app registration was successfully created</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_RegisterApp_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_RegisterApp_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PUT_ModifyAppRegistration_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="preAppId" type="xs:string">
            <xs:annotation>
              <xs:documentation>The application registration tracking ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" fixed="application/json" name="Content-Type" type="xs:string" />
          <xs:element minOccurs="1" name="body" type="schemas:Application" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PUT_ModifyAppRegistration_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:RegisteredApplication">
            <xs:annotation>
              <xs:documentation>The app registration was updated</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PUT_ModifyAppRegistration_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PUT_ModifyAppRegistration_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PUT_ModifyAppRegistration_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetAppRegistrationStatus_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="0" name="preAppId" type="xs:string">
            <xs:annotation>
              <xs:documentation>The application registration tracking ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="applicationId" type="xs:string">
            <xs:annotation>
              <xs:documentation>The application ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>Look up app registration requests by status</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="appName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Look up app registration requests by app name</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="submittedDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>Look up app registration requests by the date they were submitted</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="modifiedDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>Look up app registration requests by the date the request was updated. This can be used to determine when a request was updated to "A" or "R".</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="1" name="page" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Index of the page of results to return</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="1" name="pageSize" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Maximum number of results per page</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetAppRegistrationStatus_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:AppStatuses">
            <xs:annotation>
              <xs:documentation>The response for the Get App Registration Status API which returns an array of status objects</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetAppRegistrationStatus_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetAppRegistrationStatus_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetAppRegistrationStatus_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PUT_SetCustomerAppID_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="applicationId" type="xs:string">
            <xs:annotation>
              <xs:documentation>The application ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" fixed="application/json" name="Content-Type" type="xs:string" />
          <xs:element minOccurs="0" name="body" type="xs:anyType">
            <xs:annotation>
              <xs:documentation>No payload expected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PUT_SetCustomerAppID_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200">
            <xs:annotation>
              <xs:documentation>The app was successfully assigned</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PUT_SetCustomerAppID_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PUT_SetCustomerAppID_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PUT_SetCustomerAppID_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PUT_MigrateInstitutionLoginAccounts_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="institutionLoginId" type="xs:string">
            <xs:annotation>
              <xs:documentation>The institution login ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" fixed="application/json" name="Content-Type" type="xs:string" />
          <xs:element minOccurs="1" name="body" type="xs:anyType">
            <xs:annotation>
              <xs:documentation>No payload expected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PUT_MigrateInstitutionLoginAccounts_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:CustomerAccounts">
            <xs:annotation>
              <xs:documentation>A list of customer accounts</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PUT_MigrateInstitutionLoginAccounts_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PUT_MigrateInstitutionLoginAccounts_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PUT_MigrateInstitutionLoginAccounts_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetAssetByCustomerID_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="assetId" type="xs:string">
            <xs:annotation>
              <xs:documentation>The asset ID</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetAssetByCustomerID_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="xs:hexBinary">
            <xs:annotation>
              <xs:documentation>The asset was successfully downloaded</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetAssetByCustomerID_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetAssetByCustomerID_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetAssetByCustomerID_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_CreateToken_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" fixed="application/json" name="Content-Type" type="xs:string" />
          <xs:element minOccurs="1" name="body" type="schemas:PartnerCredentials" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_CreateToken_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:AccessToken">
            <xs:annotation>
              <xs:documentation>A temporary access token to be passed in the `Finicity-App-Token` HTTP header of all subsequent API requests</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_CreateToken_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_CreateToken_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check Partner ID, Partner Secret or Finicity-App-Key.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PUT_ModifyPartnerSecret_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" fixed="application/json" name="Content-Type" type="xs:string" />
          <xs:element minOccurs="1" name="body" type="schemas:PartnerCredentialsWithNewSecret" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PUT_ModifyPartnerSecret_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response204">
            <xs:annotation>
              <xs:documentation>The Partner Secret was successfully updated</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PUT_ModifyPartnerSecret_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PUT_ModifyPartnerSecret_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check Partner ID, Partner Secret or Finicity-App-Key.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateBalanceAnalytics_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" fixed="application/json" name="Content-Type" type="xs:string" />
          <xs:element minOccurs="1" name="body" type="schemas:BalanceAndCashFlowAnalyticsReportConstraints" />
          <xs:element minOccurs="0" name="reference-number" type="xs:string">
            <xs:annotation>
              <xs:documentation>Partner-provided reference number to correlate reports.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateBalanceAnalytics_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:BalanceAndCashFlowAnalyticsReportAck">
            <xs:annotation>
              <xs:documentation>Response given when analtyics were generated successfully, providing the caller with a report ID which can be used to retrieve the report as JSON or a PDF.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateBalanceAnalytics_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ObbErrorMessage">
            <xs:annotation>
              <xs:documentation>OBB Error response message</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateBalanceAnalytics_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ObbErrorMessage">
            <xs:annotation>
              <xs:documentation>OBB Error response message</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateBalanceAnalytics_403">
        <xs:sequence>
          <xs:element minOccurs="1" name="response403" type="schemas:ObbErrorMessage">
            <xs:annotation>
              <xs:documentation>OBB Error response message</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateBalanceAnalytics_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ObbErrorMessage">
            <xs:annotation>
              <xs:documentation>OBB Error response message</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateBalanceAnalytics_409">
        <xs:sequence>
          <xs:element minOccurs="1" name="response409" type="schemas:ObbErrorMessage">
            <xs:annotation>
              <xs:documentation>OBB Error response message</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateBalanceAnalyticsFcra_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" fixed="application/json" name="Content-Type" type="xs:string" />
          <xs:element minOccurs="1" name="body" type="schemas:BalanceAndCashFlowAnalyticsReportConstraints" />
          <xs:element minOccurs="0" name="reference-number" type="xs:string">
            <xs:annotation>
              <xs:documentation>Partner-provided reference number to correlate reports.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateBalanceAnalyticsFcra_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:BalanceAndCashFlowAnalyticsReportAck">
            <xs:annotation>
              <xs:documentation>Response given when analtyics were generated successfully, providing the caller with a report ID which can be used to retrieve the report as JSON or a PDF.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateBalanceAnalyticsFcra_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ObbErrorMessage">
            <xs:annotation>
              <xs:documentation>OBB Error response message</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateBalanceAnalyticsFcra_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ObbErrorMessage">
            <xs:annotation>
              <xs:documentation>OBB Error response message</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateBalanceAnalyticsFcra_403">
        <xs:sequence>
          <xs:element minOccurs="1" name="response403" type="schemas:ObbErrorMessage">
            <xs:annotation>
              <xs:documentation>OBB Error response message</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateBalanceAnalyticsFcra_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ObbErrorMessage">
            <xs:annotation>
              <xs:documentation>OBB Error response message</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateBalanceAnalyticsFcra_409">
        <xs:sequence>
          <xs:element minOccurs="1" name="response409" type="schemas:ObbErrorMessage">
            <xs:annotation>
              <xs:documentation>OBB Error response message</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetObbAnalyticsReport_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="obb_report_id" type="xs:string">
            <xs:annotation>
              <xs:documentation>Report ID generated and returned by OBB products</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetObbAnalyticsReport_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:GetObbAnalyticsReportResponse">
            <xs:annotation>
              <xs:documentation>OBB Analytics report data as JSON or PDF</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetObbAnalyticsReport_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetObbAnalyticsReportFcra_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="obb_report_id" type="xs:string">
            <xs:annotation>
              <xs:documentation>Report ID generated and returned by OBB products</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="purpose" type="xs:string">
            <xs:annotation>
              <xs:documentation>2-digit code from [Permissible Purpose Codes](https://docs.finicity.com/permissible-purpose-codes/), specifying the reason for retrieving this report. Required for retrieving some reports.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetObbAnalyticsReportFcra_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:GetObbAnalyticsReportFcraResponse">
            <xs:annotation>
              <xs:documentation>OBB Analytics FCRA report data as JSON or PDF</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetObbAnalyticsReportFcra_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomerAccountStatement_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="accountId" type="xs:string">
            <xs:annotation>
              <xs:documentation>The account ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="1" name="index">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Request statements from 1-24. By default, 1 is the most recent statement. Increase the index value to count back (by month) and retrieve its most recent statement.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer">
                <xs:maxInclusive value="24" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>The type of statement to retrieve</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomerAccountStatement_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="xs:hexBinary">
            <xs:annotation>
              <xs:documentation>The statement was successfully downloaded as a PDF file</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomerAccountStatement_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomerAccountStatement_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomerAccountStatement_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateStatementReport_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" fixed="application/json" name="Content-Type" type="xs:string" />
          <xs:element minOccurs="1" name="body" type="schemas:StatementReportConstraints" />
          <xs:element minOccurs="0" name="callbackUrl" type="xs:string">
            <xs:annotation>
              <xs:documentation>A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateStatementReport_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response202" type="schemas:StatementReportAck">
            <xs:annotation>
              <xs:documentation>The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateStatementReport_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateStatementReport_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateStatementReport_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateCashFlowBusinessReport_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" fixed="application/json" name="Content-Type" type="xs:string" />
          <xs:element minOccurs="1" name="body" type="schemas:CashFlowReportConstraints" />
          <xs:element minOccurs="0" name="callbackUrl" type="xs:string">
            <xs:annotation>
              <xs:documentation>A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateCashFlowBusinessReport_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response202" type="schemas:CashFlowReportAck">
            <xs:annotation>
              <xs:documentation>The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateCashFlowBusinessReport_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateCashFlowBusinessReport_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateCashFlowBusinessReport_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateCashFlowPersonalReport_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" fixed="application/json" name="Content-Type" type="xs:string" />
          <xs:element minOccurs="1" name="body" type="schemas:CashFlowReportConstraints" />
          <xs:element minOccurs="0" name="callbackUrl" type="xs:string">
            <xs:annotation>
              <xs:documentation>A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateCashFlowPersonalReport_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response202" type="schemas:CashFlowReportAck">
            <xs:annotation>
              <xs:documentation>The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateCashFlowPersonalReport_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateCashFlowPersonalReport_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateCashFlowPersonalReport_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateCashFlowAnalytics_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" fixed="application/json" name="Content-Type" type="xs:string" />
          <xs:element minOccurs="1" name="body" type="schemas:BalanceAndCashFlowAnalyticsReportConstraints" />
          <xs:element minOccurs="0" name="reference-number" type="xs:string">
            <xs:annotation>
              <xs:documentation>Partner-provided reference number to correlate reports.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateCashFlowAnalytics_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:BalanceAndCashFlowAnalyticsReportAck">
            <xs:annotation>
              <xs:documentation>Response given when analtyics were generated successfully, providing the caller with a report ID which can be used to retrieve the report as JSON or a PDF.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateCashFlowAnalytics_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ObbErrorMessage">
            <xs:annotation>
              <xs:documentation>OBB Error response message</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateCashFlowAnalytics_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ObbErrorMessage">
            <xs:annotation>
              <xs:documentation>OBB Error response message</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateCashFlowAnalytics_403">
        <xs:sequence>
          <xs:element minOccurs="1" name="response403" type="schemas:ObbErrorMessage">
            <xs:annotation>
              <xs:documentation>OBB Error response message</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateCashFlowAnalytics_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ObbErrorMessage">
            <xs:annotation>
              <xs:documentation>OBB Error response message</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateCashFlowAnalytics_409">
        <xs:sequence>
          <xs:element minOccurs="1" name="response409" type="schemas:ObbErrorMessage">
            <xs:annotation>
              <xs:documentation>OBB Error response message</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateCashFlowAnalyticsFcra_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" fixed="application/json" name="Content-Type" type="xs:string" />
          <xs:element minOccurs="1" name="body" type="schemas:BalanceAndCashFlowAnalyticsReportConstraints" />
          <xs:element minOccurs="0" name="reference-number" type="xs:string">
            <xs:annotation>
              <xs:documentation>Partner-provided reference number to correlate reports.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateCashFlowAnalyticsFcra_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:BalanceAndCashFlowAnalyticsReportAck">
            <xs:annotation>
              <xs:documentation>Response given when analtyics were generated successfully, providing the caller with a report ID which can be used to retrieve the report as JSON or a PDF.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateCashFlowAnalyticsFcra_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ObbErrorMessage">
            <xs:annotation>
              <xs:documentation>OBB Error response message</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateCashFlowAnalyticsFcra_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ObbErrorMessage">
            <xs:annotation>
              <xs:documentation>OBB Error response message</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateCashFlowAnalyticsFcra_403">
        <xs:sequence>
          <xs:element minOccurs="1" name="response403" type="schemas:ObbErrorMessage">
            <xs:annotation>
              <xs:documentation>OBB Error response message</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateCashFlowAnalyticsFcra_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ObbErrorMessage">
            <xs:annotation>
              <xs:documentation>OBB Error response message</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateCashFlowAnalyticsFcra_409">
        <xs:sequence>
          <xs:element minOccurs="1" name="response409" type="schemas:ObbErrorMessage">
            <xs:annotation>
              <xs:documentation>OBB Error response message</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateConnectUrl_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" fixed="application/json" name="Content-Type" type="xs:string" />
          <xs:element minOccurs="1" name="body" type="schemas:ConnectParameters" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateConnectUrl_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:ConnectUrl">
            <xs:annotation>
              <xs:documentation>A Connect URL object</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateConnectUrl_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateConnectUrl_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateLiteConnectUrl_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" fixed="application/json" name="Content-Type" type="xs:string" />
          <xs:element minOccurs="1" name="body" type="schemas:LiteConnectParameters" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateLiteConnectUrl_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:ConnectUrl">
            <xs:annotation>
              <xs:documentation>A Connect URL object</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateLiteConnectUrl_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateLiteConnectUrl_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateFixConnectUrl_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" fixed="application/json" name="Content-Type" type="xs:string" />
          <xs:element minOccurs="1" name="body" type="schemas:FixConnectParameters" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateFixConnectUrl_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:ConnectUrl">
            <xs:annotation>
              <xs:documentation>A Connect URL object</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateFixConnectUrl_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateFixConnectUrl_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateFixConnectUrl_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_SendConnectEmail_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" fixed="application/json" name="Content-Type" type="xs:string" />
          <xs:element minOccurs="1" name="body" type="schemas:ConnectEmailParameters" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_SendConnectEmail_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:ConnectEmailUrl">
            <xs:annotation>
              <xs:documentation>The URL link was successfully generated and the email sent</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_SendConnectEmail_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_SendConnectEmail_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateJointBorrowerConnectUrl_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" fixed="application/json" name="Content-Type" type="xs:string" />
          <xs:element minOccurs="1" name="body" type="schemas:ConnectJointBorrowerParameters" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateJointBorrowerConnectUrl_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:ConnectUrl">
            <xs:annotation>
              <xs:documentation>A Connect URL object</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateJointBorrowerConnectUrl_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateJointBorrowerConnectUrl_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_SendJointBorrowerConnectEmail_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" fixed="application/json" name="Content-Type" type="xs:string" />
          <xs:element minOccurs="1" name="body" type="schemas:ConnectJointBorrowerEmailParameters" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_SendJointBorrowerConnectEmail_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:ConnectEmailUrl">
            <xs:annotation>
              <xs:documentation>The URL link was successfully generated and the email sent</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_SendJointBorrowerConnectEmail_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_SendJointBorrowerConnectEmail_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_CreateConsumer_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" fixed="application/json" name="Content-Type" type="xs:string" />
          <xs:element minOccurs="1" name="body" type="schemas:NewConsumer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_CreateConsumer_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response201" type="schemas:CreatedConsumer">
            <xs:annotation>
              <xs:documentation>A consumer that was just created</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_CreateConsumer_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_CreateConsumer_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_CreateConsumer_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_CreateConsumer_409">
        <xs:sequence>
          <xs:element minOccurs="1" name="response409" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource already exists</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetConsumerForCustomer_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetConsumerForCustomer_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:Consumer">
            <xs:annotation>
              <xs:documentation>A finicity consumer record</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetConsumerForCustomer_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetConsumerForCustomer_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetConsumerForCustomer_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetConsumer_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="consumerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>The consumer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetConsumer_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:Consumer">
            <xs:annotation>
              <xs:documentation>A finicity consumer record</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetConsumer_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetConsumer_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetConsumer_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PUT_ModifyConsumer_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="consumerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>The consumer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" fixed="application/json" name="Content-Type" type="xs:string" />
          <xs:element minOccurs="1" name="body" type="schemas:ConsumerUpdate" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PUT_ModifyConsumer_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response204">
            <xs:annotation>
              <xs:documentation>The consumer was successfully updated</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PUT_ModifyConsumer_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PUT_ModifyConsumer_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PUT_ModifyConsumer_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_AddTestingCustomer_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" fixed="application/json" name="Content-Type" type="xs:string" />
          <xs:element minOccurs="1" name="body" type="schemas:NewCustomer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_AddTestingCustomer_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response201" type="schemas:CreatedCustomer">
            <xs:annotation>
              <xs:documentation>A new customer that was just enrolled</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_AddTestingCustomer_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_AddTestingCustomer_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_AddCustomer_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" fixed="application/json" name="Content-Type" type="xs:string" />
          <xs:element minOccurs="1" name="body" type="schemas:NewCustomer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_AddCustomer_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response201" type="schemas:CreatedCustomer">
            <xs:annotation>
              <xs:documentation>A new customer that was just enrolled</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_AddCustomer_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_AddCustomer_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_AddCustomer_429">
        <xs:sequence>
          <xs:element minOccurs="1" name="response429">
            <xs:annotation>
              <xs:documentation>The service can't accept more requests or is not available from the [Test Drive](https://signup.finicity.com/).</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomers_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="0" name="username" type="xs:string">
            <xs:annotation>
              <xs:documentation>Username for exact match (will return 0 or 1 record)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>"testing" or "active" to return only customers of that type, or leave empty to return all customers</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="search" type="xs:string">
            <xs:annotation>
              <xs:documentation>The text you wish to match. Leave this empty if you wish to return all customers. Must be URL-encoded (see: [Handling Spaces in Queries](https://docs.finicity.com/endpoint-syntax-and-format/)).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="1" name="start" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Index of the page of results to return</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="25" name="limit">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Maximum number of results per page</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer">
                <xs:maxInclusive value="1000" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomers_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:Customers">
            <xs:annotation>
              <xs:documentation>A list of customers</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomers_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomers_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomerWithAppData_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomerWithAppData_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:CustomerWithAppData">
            <xs:annotation>
              <xs:documentation>A finicity customer record with application info</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomerWithAppData_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomerWithAppData_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomerWithAppData_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomer_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomer_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:Customer">
            <xs:annotation>
              <xs:documentation>A finicity customer record</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomer_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomer_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomer_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PUT_ModifyCustomer_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" fixed="application/json" name="Content-Type" type="xs:string" />
          <xs:element minOccurs="1" name="body" type="schemas:CustomerUpdate" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PUT_ModifyCustomer_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response204">
            <xs:annotation>
              <xs:documentation>The customer was successfully updated</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PUT_ModifyCustomer_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PUT_ModifyCustomer_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PUT_ModifyCustomer_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DELETE_DeleteCustomer_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DELETE_DeleteCustomer_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response204">
            <xs:annotation>
              <xs:documentation>The customer was successfully deleted</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DELETE_DeleteCustomer_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DELETE_DeleteCustomer_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCertifiedInstitutionsWithRSSD_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="0" name="search" type="xs:string">
            <xs:annotation>
              <xs:documentation>Search term (financial institution `name` field). Leave empty for all FIs.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="1" name="start" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Index of the page of results to return</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="25" name="limit">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Maximum number of results per page</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer">
                <xs:maxInclusive value="1000" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>A product type: "transAgg", "ach", "stateAgg", "voi", "voa", "aha", "availBalance", "accountOwner"</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCertifiedInstitutionsWithRSSD_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:CertifiedInstitutions">
            <xs:annotation>
              <xs:documentation>A list of financial institutions from the Get Certified Institutions API</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCertifiedInstitutionsWithRSSD_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCertifiedInstitutionsWithRSSD_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetInstitutions_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="0" name="search" type="xs:string">
            <xs:annotation>
              <xs:documentation>Search term (financial institution `name` field). Leave empty for all FIs.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="1" name="start" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Index of the page of results to return</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="25" name="limit">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Maximum number of results per page</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer">
                <xs:maxInclusive value="1000" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>A product type: "transAgg", "ach", "stateAgg", "voi", "voa", "aha", "availBalance", "accountOwner"</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetInstitutions_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:Institutions">
            <xs:annotation>
              <xs:documentation>A list of financial institutions from the Get Institutions API</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetInstitutions_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetInstitutions_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCertifiedInstitutions_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="0" name="search" type="xs:string">
            <xs:annotation>
              <xs:documentation>Search term (financial institution `name` field). Leave empty for all FIs.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="1" name="start" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Index of the page of results to return</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="25" name="limit">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Maximum number of results per page</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer">
                <xs:maxInclusive value="1000" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="type" type="xs:string">
            <xs:annotation>
              <xs:documentation>A product type: "transAgg", "ach", "stateAgg", "voi", "voa", "aha", "availBalance", "accountOwner"</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCertifiedInstitutions_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:CertifiedInstitutions">
            <xs:annotation>
              <xs:documentation>A list of financial institutions from the Get Certified Institutions API</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCertifiedInstitutions_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCertifiedInstitutions_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetInstitution_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="institutionId" type="xs:long">
            <xs:annotation>
              <xs:documentation>The institution ID</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetInstitution_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:InstitutionWrapper">
            <xs:annotation>
              <xs:documentation>Institution was successfully retrieved</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetInstitution_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetInstitution_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetInstitution_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetInstitutionBranding_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="institutionId" type="xs:long">
            <xs:annotation>
              <xs:documentation>The institution ID</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetInstitutionBranding_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:BrandingWrapper">
            <xs:annotation>
              <xs:documentation>Institution branding was successfully retrieved</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetInstitutionBranding_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetInstitutionBranding_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetInstitutionBranding_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_StoreCustomerPayStatement_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" fixed="application/json" name="Content-Type" type="xs:string" />
          <xs:element minOccurs="1" name="body" type="schemas:PayStatement" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_StoreCustomerPayStatement_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:Asset">
            <xs:annotation>
              <xs:documentation>An asset</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_StoreCustomerPayStatement_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_StoreCustomerPayStatement_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_StoreCustomerPayStatement_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetAccountOwner_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="accountId" type="xs:string">
            <xs:annotation>
              <xs:documentation>The account ID</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetAccountOwner_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:AccountOwner">
            <xs:annotation>
              <xs:documentation>Owner of a customer account</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetAccountOwner_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetAccountOwner_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetAccountOwner_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetLoanPaymentDetails_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="accountId" type="xs:string">
            <xs:annotation>
              <xs:documentation>The account ID</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetLoanPaymentDetails_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:LoanPaymentDetails">
            <xs:annotation>
              <xs:documentation>Loan payment details for a customer account</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetLoanPaymentDetails_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetLoanPaymentDetails_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetLoanPaymentDetails_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetAccountACHDetails_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="accountId" type="xs:string">
            <xs:annotation>
              <xs:documentation>The account ID</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetAccountACHDetails_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:ACHDetails">
            <xs:annotation>
              <xs:documentation>The routing and account number information to initiate ACH transfers</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetAccountACHDetails_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetAccountACHDetails_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetAccountACHDetails_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetAvailableBalanceLive_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="accountId" type="xs:string">
            <xs:annotation>
              <xs:documentation>The account ID</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetAvailableBalanceLive_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:AvailableBalance">
            <xs:annotation>
              <xs:documentation>The live balance was successfully retrieved</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetAvailableBalanceLive_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetAvailableBalanceLive_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetAvailableBalanceLive_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetAvailableBalance_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="accountId" type="xs:string">
            <xs:annotation>
              <xs:documentation>The account ID</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetAvailableBalance_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:AvailableBalance">
            <xs:annotation>
              <xs:documentation>The balance was successfully retrieved</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetAvailableBalance_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetAvailableBalance_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetAvailableBalance_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetPortfolioByCustomer_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="portfolioId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A portfolio ID with the portfolio version number. Using the portfolio number without a version number will return the most recently generated reports.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetPortfolioByCustomer_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:PortfolioSummary">
            <xs:annotation>
              <xs:documentation>The portfolio was successfully retrieved</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetPortfolioByCustomer_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetPortfolioByCustomer_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetPortfolioByCustomer_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetPortfolioByConsumer_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="consumerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>The consumer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="portfolioId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A portfolio ID with the portfolio version number. Using the portfolio number without a version number will return the most recently generated reports.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetPortfolioByConsumer_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:PortfolioWithConsumerSummary">
            <xs:annotation>
              <xs:documentation>The portfolio was successfully retrieved</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetPortfolioByConsumer_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetPortfolioByConsumer_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetPortfolioByConsumer_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetReportByCustomer_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="reportId" type="xs:string">
            <xs:annotation>
              <xs:documentation>ID of the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="onBehalfOf" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the entity you are retrieving the report on behalf of</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="purpose" type="xs:string">
            <xs:annotation>
              <xs:documentation>2-digit code from [Permissible Purpose Codes](https://docs.finicity.com/permissible-purpose-codes/), specifying the reason for retrieving this report. Required for retrieving some reports.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetReportByCustomer_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:Report">
            <xs:annotation>
              <xs:documentation>A report</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetReportByCustomer_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetReportByCustomer_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetReportByCustomer_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetReportByConsumer_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="consumerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>The consumer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="reportId" type="xs:string">
            <xs:annotation>
              <xs:documentation>ID of the report</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="purpose" type="xs:string">
            <xs:annotation>
              <xs:documentation>2-digit code from [Permissible Purpose Codes](https://docs.finicity.com/permissible-purpose-codes/), specifying the reason for retrieving this report. Required for retrieving some reports.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="onBehalfOf" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the entity you are retrieving the report on behalf of</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetReportByConsumer_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:Report">
            <xs:annotation>
              <xs:documentation>A report</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetReportByConsumer_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetReportByConsumer_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetReportByConsumer_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetReportsByCustomerId_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="purpose" type="xs:string">
            <xs:annotation>
              <xs:documentation>2-digit code from [Permissible Purpose Codes](https://docs.finicity.com/permissible-purpose-codes/), specifying the reason for retrieving this report. Required for retrieving some reports.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetReportsByCustomerId_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:ReportSummaries">
            <xs:annotation>
              <xs:documentation>The reports summaries were successfully retrieved</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetReportsByCustomerId_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetReportsByCustomerId_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetReportsByCustomerId_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetReportsByCustomerId_429">
        <xs:sequence>
          <xs:element minOccurs="1" name="response429">
            <xs:annotation>
              <xs:documentation>The service can't accept more requests or is not available from the [Test Drive](https://signup.finicity.com/).</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetReportsByConsumerId_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="consumerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>The consumer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="purpose" type="xs:string">
            <xs:annotation>
              <xs:documentation>2-digit code from [Permissible Purpose Codes](https://docs.finicity.com/permissible-purpose-codes/), specifying the reason for retrieving this report. Required for retrieving some reports.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetReportsByConsumerId_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:ReportSummaries">
            <xs:annotation>
              <xs:documentation>The reports summaries were successfully retrieved</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetReportsByConsumerId_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetReportsByConsumerId_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetReportsByConsumerId_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetReportsByConsumerId_429">
        <xs:sequence>
          <xs:element minOccurs="1" name="response429">
            <xs:annotation>
              <xs:documentation>The service can't accept more requests or is not available from the [Test Drive](https://signup.finicity.com/).</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_LoadHistoricTransactionsForCustomerAccount_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="accountId" type="xs:string">
            <xs:annotation>
              <xs:documentation>The account ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" fixed="application/json" name="Content-Type" type="xs:string" />
          <xs:element minOccurs="0" name="body" type="xs:anyType">
            <xs:annotation>
              <xs:documentation>No payload expected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_LoadHistoricTransactionsForCustomerAccount_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response203">
            <xs:annotation>
              <xs:documentation>The response contains an MFA challenge in XML or JSON format. Contact your Account Manager or Systems Engineers to determine the best route to handle this error.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_LoadHistoricTransactionsForCustomerAccount_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_LoadHistoricTransactionsForCustomerAccount_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_LoadHistoricTransactionsForCustomerAccount_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetAllCustomerTransactions_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="fromDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A start date</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="toDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A end date</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="1" name="start" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Index of the page of results to return</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="25" name="limit">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Maximum number of results per page</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer">
                <xs:maxInclusive value="1000" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" default="desc" name="sort" type="xs:string">
            <xs:annotation>
              <xs:documentation>Date sort order: "asc" for ascending, "desc" for descending</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="false" name="includePending" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>If pending transactions must be included</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetAllCustomerTransactions_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:Transactions">
            <xs:annotation>
              <xs:documentation>A list of transactions</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetAllCustomerTransactions_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetAllCustomerTransactions_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetAllCustomerTransactions_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomerTransaction_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="transactionId" type="xs:long">
            <xs:annotation>
              <xs:documentation>A transaction ID</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomerTransaction_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:Transaction">
            <xs:annotation>
              <xs:documentation>The transaction was successfully retrieved</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomerTransaction_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomerTransaction_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomerTransaction_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomerAccountTransactions_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="accountId" type="xs:string">
            <xs:annotation>
              <xs:documentation>The account ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="fromDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A start date</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="toDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A end date</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="1" name="start" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Index of the page of results to return</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="25" name="limit">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Maximum number of results per page</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer">
                <xs:maxInclusive value="1000" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" default="desc" name="sort" type="xs:string">
            <xs:annotation>
              <xs:documentation>Date sort order: "asc" for ascending, "desc" for descending</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="false" name="includePending" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>If pending transactions must be included</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomerAccountTransactions_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:Transactions">
            <xs:annotation>
              <xs:documentation>A list of transactions</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomerAccountTransactions_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomerAccountTransactions_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GET_GetCustomerAccountTransactions_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateTransactionsReport_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="toDate" type="xs:long">
            <xs:annotation>
              <xs:documentation>A end date</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" fixed="application/json" name="Content-Type" type="xs:string" />
          <xs:element minOccurs="1" name="body" type="schemas:TransactionsReportConstraints" />
          <xs:element minOccurs="0" name="callbackUrl" type="xs:string">
            <xs:annotation>
              <xs:documentation>A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="false" name="includePending" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>If pending transactions must be included</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateTransactionsReport_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response202" type="schemas:TransactionsReportAck">
            <xs:annotation>
              <xs:documentation>The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateTransactionsReport_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateTransactionsReport_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateTransactionsReport_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_SubscribeToTxPushNotifications_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="accountId" type="xs:string">
            <xs:annotation>
              <xs:documentation>The account ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" fixed="application/json" name="Content-Type" type="xs:string" />
          <xs:element minOccurs="1" name="body" type="schemas:TxPushSubscriptionParameters" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_SubscribeToTxPushNotifications_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response201" type="schemas:TxPushSubscriptions">
            <xs:annotation>
              <xs:documentation>The subscription was successfully created</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_SubscribeToTxPushNotifications_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_SubscribeToTxPushNotifications_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_SubscribeToTxPushNotifications_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DELETE_DisableTxPushNotifications_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="accountId" type="xs:string">
            <xs:annotation>
              <xs:documentation>The account ID</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DELETE_DisableTxPushNotifications_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response204">
            <xs:annotation>
              <xs:documentation>Subscriptions were successfully deleted for the given account</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DELETE_DisableTxPushNotifications_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DELETE_DisableTxPushNotifications_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DELETE_DisableTxPushNotifications_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_CreateTxPushTestTransaction_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="accountId" type="xs:string">
            <xs:annotation>
              <xs:documentation>The account ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" fixed="application/json" name="Content-Type" type="xs:string" />
          <xs:element minOccurs="1" name="body" type="schemas:TestTxPushTransaction" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_CreateTxPushTestTransaction_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response201" type="schemas:CreatedTestTxPushTransaction">
            <xs:annotation>
              <xs:documentation>Response for TxPush test transaction</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_CreateTxPushTestTransaction_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_CreateTxPushTestTransaction_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_CreateTxPushTestTransaction_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DELETE_DeleteTxPushSubscription_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="subscriptionId" type="xs:long">
            <xs:annotation>
              <xs:documentation>The subscription ID</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DELETE_DeleteTxPushSubscription_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response204">
            <xs:annotation>
              <xs:documentation>The subscription was successfully deleted</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DELETE_DeleteTxPushSubscription_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DELETE_DeleteTxPushSubscription_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DELETE_DeleteTxPushSubscription_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateVOAReport_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" fixed="application/json" name="Content-Type" type="xs:string" />
          <xs:element minOccurs="1" name="body" type="schemas:VOAReportConstraints" />
          <xs:element minOccurs="0" name="callbackUrl" type="xs:string">
            <xs:annotation>
              <xs:documentation>A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateVOAReport_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response202" type="schemas:VOAReportAck">
            <xs:annotation>
              <xs:documentation>The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateVOAReport_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateVOAReport_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateVOAReport_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateVOAWithIncomeReport_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" fixed="application/json" name="Content-Type" type="xs:string" />
          <xs:element minOccurs="1" name="body" type="schemas:VOAWithIncomeReportConstraints" />
          <xs:element minOccurs="0" name="callbackUrl" type="xs:string">
            <xs:annotation>
              <xs:documentation>A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateVOAWithIncomeReport_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response202" type="schemas:VOAWithIncomeReportAck">
            <xs:annotation>
              <xs:documentation>The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateVOAWithIncomeReport_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateVOAWithIncomeReport_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateVOAWithIncomeReport_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GeneratePrequalificationCRAReport_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" fixed="application/json" name="Content-Type" type="xs:string" />
          <xs:element minOccurs="1" name="body" type="schemas:PrequalificationReportConstraints" />
          <xs:element minOccurs="0" name="callbackUrl" type="xs:string">
            <xs:annotation>
              <xs:documentation>A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GeneratePrequalificationCRAReport_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response202" type="schemas:PrequalificationReportAck">
            <xs:annotation>
              <xs:documentation>The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GeneratePrequalificationCRAReport_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GeneratePrequalificationCRAReport_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GeneratePrequalificationCRAReport_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GeneratePrequalificationNonCRAReport_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" fixed="application/json" name="Content-Type" type="xs:string" />
          <xs:element minOccurs="1" name="body" type="schemas:PrequalificationReportConstraints" />
          <xs:element minOccurs="0" name="callbackUrl" type="xs:string">
            <xs:annotation>
              <xs:documentation>A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GeneratePrequalificationNonCRAReport_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response202" type="schemas:PrequalificationReportAck">
            <xs:annotation>
              <xs:documentation>The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GeneratePrequalificationNonCRAReport_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GeneratePrequalificationNonCRAReport_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GeneratePrequalificationNonCRAReport_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateVOIReport_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" fixed="application/json" name="Content-Type" type="xs:string" />
          <xs:element minOccurs="1" name="body" type="schemas:VOIReportConstraints" />
          <xs:element minOccurs="0" name="callbackUrl" type="xs:string">
            <xs:annotation>
              <xs:documentation>A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateVOIReport_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response202" type="schemas:VOIReportAck">
            <xs:annotation>
              <xs:documentation>The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateVOIReport_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateVOIReport_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateVOIReport_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateVOEPayrollReport_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" fixed="application/json" name="Content-Type" type="xs:string" />
          <xs:element minOccurs="1" name="body" type="schemas:PayrollReportConstraints" />
          <xs:element minOccurs="0" name="callbackUrl" type="xs:string">
            <xs:annotation>
              <xs:documentation>A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateVOEPayrollReport_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response202" type="schemas:PayrollReportAck">
            <xs:annotation>
              <xs:documentation>The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateVOEPayrollReport_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateVOEPayrollReport_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateVOEPayrollReport_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateVOETransactionsReport_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" fixed="application/json" name="Content-Type" type="xs:string" />
          <xs:element minOccurs="1" name="body" type="schemas:VOETransactionsReportConstraints" />
          <xs:element minOccurs="0" name="callbackUrl" type="xs:string">
            <xs:annotation>
              <xs:documentation>A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateVOETransactionsReport_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response202" type="schemas:VOETransactionsReportAck">
            <xs:annotation>
              <xs:documentation>The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateVOETransactionsReport_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateVOETransactionsReport_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateVOETransactionsReport_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GeneratePayStatementReport_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" fixed="application/json" name="Content-Type" type="xs:string" />
          <xs:element minOccurs="1" name="body" type="schemas:PayStatementReportConstraints" />
          <xs:element minOccurs="0" name="callbackUrl" type="xs:string">
            <xs:annotation>
              <xs:documentation>A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GeneratePayStatementReport_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response202" type="schemas:PayStatementReportAck">
            <xs:annotation>
              <xs:documentation>The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GeneratePayStatementReport_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GeneratePayStatementReport_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GeneratePayStatementReport_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateVOIEPaystubWithTXVerifyReport_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" fixed="application/json" name="Content-Type" type="xs:string" />
          <xs:element minOccurs="1" name="body" type="schemas:VOIEWithTXVerifyReportConstraints" />
          <xs:element minOccurs="0" name="callbackUrl" type="xs:string">
            <xs:annotation>
              <xs:documentation>A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateVOIEPaystubWithTXVerifyReport_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response202" type="schemas:VOIEPaystubWithTXVerifyReportAck">
            <xs:annotation>
              <xs:documentation>The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateVOIEPaystubWithTXVerifyReport_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateVOIEPaystubWithTXVerifyReport_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateVOIEPaystubWithTXVerifyReport_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateVOIEPaystubReport_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" fixed="application/json" name="Content-Type" type="xs:string" />
          <xs:element minOccurs="1" name="body" type="schemas:VOIEReportConstraints" />
          <xs:element minOccurs="0" name="callbackUrl" type="xs:string">
            <xs:annotation>
              <xs:documentation>A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateVOIEPaystubReport_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response202" type="schemas:VOIEPaystubReportAck">
            <xs:annotation>
              <xs:documentation>The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateVOIEPaystubReport_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateVOIEPaystubReport_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_GenerateVOIEPaystubReport_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_RefreshVOIEPayrollReport_InputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="customerId" type="xs:string">
            <xs:annotation>
              <xs:documentation>A customer ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" fixed="application/json" name="Content-Type" type="xs:string" />
          <xs:element minOccurs="1" name="body" type="schemas:PayrollReportConstraints" />
          <xs:element minOccurs="0" name="callbackUrl" type="xs:string">
            <xs:annotation>
              <xs:documentation>A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_RefreshVOIEPayrollReport_OutputMessage">
        <xs:sequence>
          <xs:element minOccurs="1" name="response202" type="schemas:PayrollReportAck">
            <xs:annotation>
              <xs:documentation>The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_RefreshVOIEPayrollReport_400">
        <xs:sequence>
          <xs:element minOccurs="1" name="response400" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request was rejected</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_RefreshVOIEPayrollReport_401">
        <xs:sequence>
          <xs:element minOccurs="1" name="response401" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="POST_RefreshVOIEPayrollReport_404">
        <xs:sequence>
          <xs:element minOccurs="1" name="response404" type="schemas:ErrorMessage">
            <xs:annotation>
              <xs:documentation>The resource doesn't exist</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </types>
  <message name="GET_GetCustomerAccountsByInstitutionLogin_InputMessage">
    <part name="GET_GetCustomerAccountsByInstitutionLogin_InputMessage" element="schemas:GET_GetCustomerAccountsByInstitutionLogin_InputMessage" />
  </message>
  <message name="GET_GetCustomerAccountsByInstitutionLogin_OutputMessage">
    <part name="GET_GetCustomerAccountsByInstitutionLogin_OutputMessage" element="schemas:GET_GetCustomerAccountsByInstitutionLogin_OutputMessage" />
  </message>
  <message name="GET_GetCustomerAccountsByInstitutionLogin_400">
    <part name="GET_GetCustomerAccountsByInstitutionLogin_400" element="schemas:GET_GetCustomerAccountsByInstitutionLogin_400" />
  </message>
  <message name="GET_GetCustomerAccountsByInstitutionLogin_401">
    <part name="GET_GetCustomerAccountsByInstitutionLogin_401" element="schemas:GET_GetCustomerAccountsByInstitutionLogin_401" />
  </message>
  <message name="GET_GetCustomerAccountsByInstitutionLogin_404">
    <part name="GET_GetCustomerAccountsByInstitutionLogin_404" element="schemas:GET_GetCustomerAccountsByInstitutionLogin_404" />
  </message>
  <message name="POST_RefreshCustomerAccountsByInstitutionLogin_InputMessage">
    <part name="POST_RefreshCustomerAccountsByInstitutionLogin_InputMessage" element="schemas:POST_RefreshCustomerAccountsByInstitutionLogin_InputMessage" />
  </message>
  <message name="POST_RefreshCustomerAccountsByInstitutionLogin_OutputMessage">
    <part name="POST_RefreshCustomerAccountsByInstitutionLogin_OutputMessage" element="schemas:POST_RefreshCustomerAccountsByInstitutionLogin_OutputMessage" />
  </message>
  <message name="POST_RefreshCustomerAccountsByInstitutionLogin_400">
    <part name="POST_RefreshCustomerAccountsByInstitutionLogin_400" element="schemas:POST_RefreshCustomerAccountsByInstitutionLogin_400" />
  </message>
  <message name="POST_RefreshCustomerAccountsByInstitutionLogin_401">
    <part name="POST_RefreshCustomerAccountsByInstitutionLogin_401" element="schemas:POST_RefreshCustomerAccountsByInstitutionLogin_401" />
  </message>
  <message name="POST_RefreshCustomerAccountsByInstitutionLogin_404">
    <part name="POST_RefreshCustomerAccountsByInstitutionLogin_404" element="schemas:POST_RefreshCustomerAccountsByInstitutionLogin_404" />
  </message>
  <message name="DELETE_DeleteCustomerAccountsByInstitutionLogin_InputMessage">
    <part name="DELETE_DeleteCustomerAccountsByInstitutionLogin_InputMessage" element="schemas:DELETE_DeleteCustomerAccountsByInstitutionLogin_InputMessage" />
  </message>
  <message name="DELETE_DeleteCustomerAccountsByInstitutionLogin_OutputMessage">
    <part name="DELETE_DeleteCustomerAccountsByInstitutionLogin_OutputMessage" element="schemas:DELETE_DeleteCustomerAccountsByInstitutionLogin_OutputMessage" />
  </message>
  <message name="DELETE_DeleteCustomerAccountsByInstitutionLogin_400">
    <part name="DELETE_DeleteCustomerAccountsByInstitutionLogin_400" element="schemas:DELETE_DeleteCustomerAccountsByInstitutionLogin_400" />
  </message>
  <message name="DELETE_DeleteCustomerAccountsByInstitutionLogin_401">
    <part name="DELETE_DeleteCustomerAccountsByInstitutionLogin_401" element="schemas:DELETE_DeleteCustomerAccountsByInstitutionLogin_401" />
  </message>
  <message name="DELETE_DeleteCustomerAccountsByInstitutionLogin_404">
    <part name="DELETE_DeleteCustomerAccountsByInstitutionLogin_404" element="schemas:DELETE_DeleteCustomerAccountsByInstitutionLogin_404" />
  </message>
  <message name="GET_GetCustomerAccount_InputMessage">
    <part name="GET_GetCustomerAccount_InputMessage" element="schemas:GET_GetCustomerAccount_InputMessage" />
  </message>
  <message name="GET_GetCustomerAccount_OutputMessage">
    <part name="GET_GetCustomerAccount_OutputMessage" element="schemas:GET_GetCustomerAccount_OutputMessage" />
  </message>
  <message name="GET_GetCustomerAccount_400">
    <part name="GET_GetCustomerAccount_400" element="schemas:GET_GetCustomerAccount_400" />
  </message>
  <message name="GET_GetCustomerAccount_401">
    <part name="GET_GetCustomerAccount_401" element="schemas:GET_GetCustomerAccount_401" />
  </message>
  <message name="GET_GetCustomerAccount_404">
    <part name="GET_GetCustomerAccount_404" element="schemas:GET_GetCustomerAccount_404" />
  </message>
  <message name="DELETE_DeleteCustomerAccount_InputMessage">
    <part name="DELETE_DeleteCustomerAccount_InputMessage" element="schemas:DELETE_DeleteCustomerAccount_InputMessage" />
  </message>
  <message name="DELETE_DeleteCustomerAccount_OutputMessage">
    <part name="DELETE_DeleteCustomerAccount_OutputMessage" element="schemas:DELETE_DeleteCustomerAccount_OutputMessage" />
  </message>
  <message name="DELETE_DeleteCustomerAccount_400">
    <part name="DELETE_DeleteCustomerAccount_400" element="schemas:DELETE_DeleteCustomerAccount_400" />
  </message>
  <message name="DELETE_DeleteCustomerAccount_401">
    <part name="DELETE_DeleteCustomerAccount_401" element="schemas:DELETE_DeleteCustomerAccount_401" />
  </message>
  <message name="DELETE_DeleteCustomerAccount_404">
    <part name="DELETE_DeleteCustomerAccount_404" element="schemas:DELETE_DeleteCustomerAccount_404" />
  </message>
  <message name="GET_GetCustomerAccounts_InputMessage">
    <part name="GET_GetCustomerAccounts_InputMessage" element="schemas:GET_GetCustomerAccounts_InputMessage" />
  </message>
  <message name="GET_GetCustomerAccounts_OutputMessage">
    <part name="GET_GetCustomerAccounts_OutputMessage" element="schemas:GET_GetCustomerAccounts_OutputMessage" />
  </message>
  <message name="GET_GetCustomerAccounts_400">
    <part name="GET_GetCustomerAccounts_400" element="schemas:GET_GetCustomerAccounts_400" />
  </message>
  <message name="GET_GetCustomerAccounts_401">
    <part name="GET_GetCustomerAccounts_401" element="schemas:GET_GetCustomerAccounts_401" />
  </message>
  <message name="GET_GetCustomerAccounts_404">
    <part name="GET_GetCustomerAccounts_404" element="schemas:GET_GetCustomerAccounts_404" />
  </message>
  <message name="POST_RefreshCustomerAccounts_InputMessage">
    <part name="POST_RefreshCustomerAccounts_InputMessage" element="schemas:POST_RefreshCustomerAccounts_InputMessage" />
  </message>
  <message name="POST_RefreshCustomerAccounts_OutputMessage">
    <part name="POST_RefreshCustomerAccounts_OutputMessage" element="schemas:POST_RefreshCustomerAccounts_OutputMessage" />
  </message>
  <message name="POST_RefreshCustomerAccounts_400">
    <part name="POST_RefreshCustomerAccounts_400" element="schemas:POST_RefreshCustomerAccounts_400" />
  </message>
  <message name="POST_RefreshCustomerAccounts_401">
    <part name="POST_RefreshCustomerAccounts_401" element="schemas:POST_RefreshCustomerAccounts_401" />
  </message>
  <message name="POST_RefreshCustomerAccounts_404">
    <part name="POST_RefreshCustomerAccounts_404" element="schemas:POST_RefreshCustomerAccounts_404" />
  </message>
  <message name="GET_GetCustomerAccountsByInstitution_InputMessage">
    <part name="GET_GetCustomerAccountsByInstitution_InputMessage" element="schemas:GET_GetCustomerAccountsByInstitution_InputMessage" />
  </message>
  <message name="GET_GetCustomerAccountsByInstitution_OutputMessage">
    <part name="GET_GetCustomerAccountsByInstitution_OutputMessage" element="schemas:GET_GetCustomerAccountsByInstitution_OutputMessage" />
  </message>
  <message name="GET_GetCustomerAccountsByInstitution_400">
    <part name="GET_GetCustomerAccountsByInstitution_400" element="schemas:GET_GetCustomerAccountsByInstitution_400" />
  </message>
  <message name="GET_GetCustomerAccountsByInstitution_401">
    <part name="GET_GetCustomerAccountsByInstitution_401" element="schemas:GET_GetCustomerAccountsByInstitution_401" />
  </message>
  <message name="GET_GetCustomerAccountsByInstitution_404">
    <part name="GET_GetCustomerAccountsByInstitution_404" element="schemas:GET_GetCustomerAccountsByInstitution_404" />
  </message>
  <message name="POST_GenerateConsumerAttributes_InputMessage">
    <part name="POST_GenerateConsumerAttributes_InputMessage" element="schemas:POST_GenerateConsumerAttributes_InputMessage" />
  </message>
  <message name="POST_GenerateConsumerAttributes_OutputMessage">
    <part name="POST_GenerateConsumerAttributes_OutputMessage" element="schemas:POST_GenerateConsumerAttributes_OutputMessage" />
  </message>
  <message name="POST_GenerateConsumerAttributes_400">
    <part name="POST_GenerateConsumerAttributes_400" element="schemas:POST_GenerateConsumerAttributes_400" />
  </message>
  <message name="POST_GenerateConsumerAttributes_401">
    <part name="POST_GenerateConsumerAttributes_401" element="schemas:POST_GenerateConsumerAttributes_401" />
  </message>
  <message name="POST_GenerateConsumerAttributes_404">
    <part name="POST_GenerateConsumerAttributes_404" element="schemas:POST_GenerateConsumerAttributes_404" />
  </message>
  <message name="GET_ListConsumerAttributes_InputMessage">
    <part name="GET_ListConsumerAttributes_InputMessage" element="schemas:GET_ListConsumerAttributes_InputMessage" />
  </message>
  <message name="GET_ListConsumerAttributes_OutputMessage">
    <part name="GET_ListConsumerAttributes_OutputMessage" element="schemas:GET_ListConsumerAttributes_OutputMessage" />
  </message>
  <message name="GET_ListConsumerAttributes_400">
    <part name="GET_ListConsumerAttributes_400" element="schemas:GET_ListConsumerAttributes_400" />
  </message>
  <message name="GET_ListConsumerAttributes_401">
    <part name="GET_ListConsumerAttributes_401" element="schemas:GET_ListConsumerAttributes_401" />
  </message>
  <message name="GET_ListConsumerAttributes_404">
    <part name="GET_ListConsumerAttributes_404" element="schemas:GET_ListConsumerAttributes_404" />
  </message>
  <message name="POST_GenerateFCRAConsumerAttributes_InputMessage">
    <part name="POST_GenerateFCRAConsumerAttributes_InputMessage" element="schemas:POST_GenerateFCRAConsumerAttributes_InputMessage" />
  </message>
  <message name="POST_GenerateFCRAConsumerAttributes_OutputMessage">
    <part name="POST_GenerateFCRAConsumerAttributes_OutputMessage" element="schemas:POST_GenerateFCRAConsumerAttributes_OutputMessage" />
  </message>
  <message name="POST_GenerateFCRAConsumerAttributes_400">
    <part name="POST_GenerateFCRAConsumerAttributes_400" element="schemas:POST_GenerateFCRAConsumerAttributes_400" />
  </message>
  <message name="POST_GenerateFCRAConsumerAttributes_401">
    <part name="POST_GenerateFCRAConsumerAttributes_401" element="schemas:POST_GenerateFCRAConsumerAttributes_401" />
  </message>
  <message name="POST_GenerateFCRAConsumerAttributes_404">
    <part name="POST_GenerateFCRAConsumerAttributes_404" element="schemas:POST_GenerateFCRAConsumerAttributes_404" />
  </message>
  <message name="GET_GetConsumerAttributesByID_InputMessage">
    <part name="GET_GetConsumerAttributesByID_InputMessage" element="schemas:GET_GetConsumerAttributesByID_InputMessage" />
  </message>
  <message name="GET_GetConsumerAttributesByID_OutputMessage">
    <part name="GET_GetConsumerAttributesByID_OutputMessage" element="schemas:GET_GetConsumerAttributesByID_OutputMessage" />
  </message>
  <message name="GET_GetConsumerAttributesByID_400">
    <part name="GET_GetConsumerAttributesByID_400" element="schemas:GET_GetConsumerAttributesByID_400" />
  </message>
  <message name="GET_GetConsumerAttributesByID_401">
    <part name="GET_GetConsumerAttributesByID_401" element="schemas:GET_GetConsumerAttributesByID_401" />
  </message>
  <message name="GET_GetConsumerAttributesByID_404">
    <part name="GET_GetConsumerAttributesByID_404" element="schemas:GET_GetConsumerAttributesByID_404" />
  </message>
  <message name="GET_GetFCRAConsumerAttributesByID_InputMessage">
    <part name="GET_GetFCRAConsumerAttributesByID_InputMessage" element="schemas:GET_GetFCRAConsumerAttributesByID_InputMessage" />
  </message>
  <message name="GET_GetFCRAConsumerAttributesByID_OutputMessage">
    <part name="GET_GetFCRAConsumerAttributesByID_OutputMessage" element="schemas:GET_GetFCRAConsumerAttributesByID_OutputMessage" />
  </message>
  <message name="GET_GetFCRAConsumerAttributesByID_400">
    <part name="GET_GetFCRAConsumerAttributesByID_400" element="schemas:GET_GetFCRAConsumerAttributesByID_400" />
  </message>
  <message name="GET_GetFCRAConsumerAttributesByID_401">
    <part name="GET_GetFCRAConsumerAttributesByID_401" element="schemas:GET_GetFCRAConsumerAttributesByID_401" />
  </message>
  <message name="GET_GetFCRAConsumerAttributesByID_404">
    <part name="GET_GetFCRAConsumerAttributesByID_404" element="schemas:GET_GetFCRAConsumerAttributesByID_404" />
  </message>
  <message name="POST_RegisterApp_InputMessage">
    <part name="POST_RegisterApp_InputMessage" element="schemas:POST_RegisterApp_InputMessage" />
  </message>
  <message name="POST_RegisterApp_OutputMessage">
    <part name="POST_RegisterApp_OutputMessage" element="schemas:POST_RegisterApp_OutputMessage" />
  </message>
  <message name="POST_RegisterApp_400">
    <part name="POST_RegisterApp_400" element="schemas:POST_RegisterApp_400" />
  </message>
  <message name="POST_RegisterApp_401">
    <part name="POST_RegisterApp_401" element="schemas:POST_RegisterApp_401" />
  </message>
  <message name="PUT_ModifyAppRegistration_InputMessage">
    <part name="PUT_ModifyAppRegistration_InputMessage" element="schemas:PUT_ModifyAppRegistration_InputMessage" />
  </message>
  <message name="PUT_ModifyAppRegistration_OutputMessage">
    <part name="PUT_ModifyAppRegistration_OutputMessage" element="schemas:PUT_ModifyAppRegistration_OutputMessage" />
  </message>
  <message name="PUT_ModifyAppRegistration_400">
    <part name="PUT_ModifyAppRegistration_400" element="schemas:PUT_ModifyAppRegistration_400" />
  </message>
  <message name="PUT_ModifyAppRegistration_401">
    <part name="PUT_ModifyAppRegistration_401" element="schemas:PUT_ModifyAppRegistration_401" />
  </message>
  <message name="PUT_ModifyAppRegistration_404">
    <part name="PUT_ModifyAppRegistration_404" element="schemas:PUT_ModifyAppRegistration_404" />
  </message>
  <message name="GET_GetAppRegistrationStatus_InputMessage">
    <part name="GET_GetAppRegistrationStatus_InputMessage" element="schemas:GET_GetAppRegistrationStatus_InputMessage" />
  </message>
  <message name="GET_GetAppRegistrationStatus_OutputMessage">
    <part name="GET_GetAppRegistrationStatus_OutputMessage" element="schemas:GET_GetAppRegistrationStatus_OutputMessage" />
  </message>
  <message name="GET_GetAppRegistrationStatus_400">
    <part name="GET_GetAppRegistrationStatus_400" element="schemas:GET_GetAppRegistrationStatus_400" />
  </message>
  <message name="GET_GetAppRegistrationStatus_401">
    <part name="GET_GetAppRegistrationStatus_401" element="schemas:GET_GetAppRegistrationStatus_401" />
  </message>
  <message name="GET_GetAppRegistrationStatus_404">
    <part name="GET_GetAppRegistrationStatus_404" element="schemas:GET_GetAppRegistrationStatus_404" />
  </message>
  <message name="PUT_SetCustomerAppID_InputMessage">
    <part name="PUT_SetCustomerAppID_InputMessage" element="schemas:PUT_SetCustomerAppID_InputMessage" />
  </message>
  <message name="PUT_SetCustomerAppID_OutputMessage">
    <part name="PUT_SetCustomerAppID_OutputMessage" element="schemas:PUT_SetCustomerAppID_OutputMessage" />
  </message>
  <message name="PUT_SetCustomerAppID_400">
    <part name="PUT_SetCustomerAppID_400" element="schemas:PUT_SetCustomerAppID_400" />
  </message>
  <message name="PUT_SetCustomerAppID_401">
    <part name="PUT_SetCustomerAppID_401" element="schemas:PUT_SetCustomerAppID_401" />
  </message>
  <message name="PUT_SetCustomerAppID_404">
    <part name="PUT_SetCustomerAppID_404" element="schemas:PUT_SetCustomerAppID_404" />
  </message>
  <message name="PUT_MigrateInstitutionLoginAccounts_InputMessage">
    <part name="PUT_MigrateInstitutionLoginAccounts_InputMessage" element="schemas:PUT_MigrateInstitutionLoginAccounts_InputMessage" />
  </message>
  <message name="PUT_MigrateInstitutionLoginAccounts_OutputMessage">
    <part name="PUT_MigrateInstitutionLoginAccounts_OutputMessage" element="schemas:PUT_MigrateInstitutionLoginAccounts_OutputMessage" />
  </message>
  <message name="PUT_MigrateInstitutionLoginAccounts_400">
    <part name="PUT_MigrateInstitutionLoginAccounts_400" element="schemas:PUT_MigrateInstitutionLoginAccounts_400" />
  </message>
  <message name="PUT_MigrateInstitutionLoginAccounts_401">
    <part name="PUT_MigrateInstitutionLoginAccounts_401" element="schemas:PUT_MigrateInstitutionLoginAccounts_401" />
  </message>
  <message name="PUT_MigrateInstitutionLoginAccounts_404">
    <part name="PUT_MigrateInstitutionLoginAccounts_404" element="schemas:PUT_MigrateInstitutionLoginAccounts_404" />
  </message>
  <message name="GET_GetAssetByCustomerID_InputMessage">
    <part name="GET_GetAssetByCustomerID_InputMessage" element="schemas:GET_GetAssetByCustomerID_InputMessage" />
  </message>
  <message name="GET_GetAssetByCustomerID_OutputMessage">
    <part name="GET_GetAssetByCustomerID_OutputMessage" element="schemas:GET_GetAssetByCustomerID_OutputMessage" />
  </message>
  <message name="GET_GetAssetByCustomerID_400">
    <part name="GET_GetAssetByCustomerID_400" element="schemas:GET_GetAssetByCustomerID_400" />
  </message>
  <message name="GET_GetAssetByCustomerID_401">
    <part name="GET_GetAssetByCustomerID_401" element="schemas:GET_GetAssetByCustomerID_401" />
  </message>
  <message name="GET_GetAssetByCustomerID_404">
    <part name="GET_GetAssetByCustomerID_404" element="schemas:GET_GetAssetByCustomerID_404" />
  </message>
  <message name="POST_CreateToken_InputMessage">
    <part name="POST_CreateToken_InputMessage" element="schemas:POST_CreateToken_InputMessage" />
  </message>
  <message name="POST_CreateToken_OutputMessage">
    <part name="POST_CreateToken_OutputMessage" element="schemas:POST_CreateToken_OutputMessage" />
  </message>
  <message name="POST_CreateToken_400">
    <part name="POST_CreateToken_400" element="schemas:POST_CreateToken_400" />
  </message>
  <message name="POST_CreateToken_401">
    <part name="POST_CreateToken_401" element="schemas:POST_CreateToken_401" />
  </message>
  <message name="PUT_ModifyPartnerSecret_InputMessage">
    <part name="PUT_ModifyPartnerSecret_InputMessage" element="schemas:PUT_ModifyPartnerSecret_InputMessage" />
  </message>
  <message name="PUT_ModifyPartnerSecret_OutputMessage">
    <part name="PUT_ModifyPartnerSecret_OutputMessage" element="schemas:PUT_ModifyPartnerSecret_OutputMessage" />
  </message>
  <message name="PUT_ModifyPartnerSecret_400">
    <part name="PUT_ModifyPartnerSecret_400" element="schemas:PUT_ModifyPartnerSecret_400" />
  </message>
  <message name="PUT_ModifyPartnerSecret_401">
    <part name="PUT_ModifyPartnerSecret_401" element="schemas:PUT_ModifyPartnerSecret_401" />
  </message>
  <message name="POST_GenerateBalanceAnalytics_InputMessage">
    <part name="POST_GenerateBalanceAnalytics_InputMessage" element="schemas:POST_GenerateBalanceAnalytics_InputMessage" />
  </message>
  <message name="POST_GenerateBalanceAnalytics_OutputMessage">
    <part name="POST_GenerateBalanceAnalytics_OutputMessage" element="schemas:POST_GenerateBalanceAnalytics_OutputMessage" />
  </message>
  <message name="POST_GenerateBalanceAnalytics_400">
    <part name="POST_GenerateBalanceAnalytics_400" element="schemas:POST_GenerateBalanceAnalytics_400" />
  </message>
  <message name="POST_GenerateBalanceAnalytics_401">
    <part name="POST_GenerateBalanceAnalytics_401" element="schemas:POST_GenerateBalanceAnalytics_401" />
  </message>
  <message name="POST_GenerateBalanceAnalytics_403">
    <part name="POST_GenerateBalanceAnalytics_403" element="schemas:POST_GenerateBalanceAnalytics_403" />
  </message>
  <message name="POST_GenerateBalanceAnalytics_404">
    <part name="POST_GenerateBalanceAnalytics_404" element="schemas:POST_GenerateBalanceAnalytics_404" />
  </message>
  <message name="POST_GenerateBalanceAnalytics_409">
    <part name="POST_GenerateBalanceAnalytics_409" element="schemas:POST_GenerateBalanceAnalytics_409" />
  </message>
  <message name="POST_GenerateBalanceAnalyticsFcra_InputMessage">
    <part name="POST_GenerateBalanceAnalyticsFcra_InputMessage" element="schemas:POST_GenerateBalanceAnalyticsFcra_InputMessage" />
  </message>
  <message name="POST_GenerateBalanceAnalyticsFcra_OutputMessage">
    <part name="POST_GenerateBalanceAnalyticsFcra_OutputMessage" element="schemas:POST_GenerateBalanceAnalyticsFcra_OutputMessage" />
  </message>
  <message name="POST_GenerateBalanceAnalyticsFcra_400">
    <part name="POST_GenerateBalanceAnalyticsFcra_400" element="schemas:POST_GenerateBalanceAnalyticsFcra_400" />
  </message>
  <message name="POST_GenerateBalanceAnalyticsFcra_401">
    <part name="POST_GenerateBalanceAnalyticsFcra_401" element="schemas:POST_GenerateBalanceAnalyticsFcra_401" />
  </message>
  <message name="POST_GenerateBalanceAnalyticsFcra_403">
    <part name="POST_GenerateBalanceAnalyticsFcra_403" element="schemas:POST_GenerateBalanceAnalyticsFcra_403" />
  </message>
  <message name="POST_GenerateBalanceAnalyticsFcra_404">
    <part name="POST_GenerateBalanceAnalyticsFcra_404" element="schemas:POST_GenerateBalanceAnalyticsFcra_404" />
  </message>
  <message name="POST_GenerateBalanceAnalyticsFcra_409">
    <part name="POST_GenerateBalanceAnalyticsFcra_409" element="schemas:POST_GenerateBalanceAnalyticsFcra_409" />
  </message>
  <message name="GET_GetObbAnalyticsReport_InputMessage">
    <part name="GET_GetObbAnalyticsReport_InputMessage" element="schemas:GET_GetObbAnalyticsReport_InputMessage" />
  </message>
  <message name="GET_GetObbAnalyticsReport_OutputMessage">
    <part name="GET_GetObbAnalyticsReport_OutputMessage" element="schemas:GET_GetObbAnalyticsReport_OutputMessage" />
  </message>
  <message name="GET_GetObbAnalyticsReport_404">
    <part name="GET_GetObbAnalyticsReport_404" element="schemas:GET_GetObbAnalyticsReport_404" />
  </message>
  <message name="GET_GetObbAnalyticsReportFcra_InputMessage">
    <part name="GET_GetObbAnalyticsReportFcra_InputMessage" element="schemas:GET_GetObbAnalyticsReportFcra_InputMessage" />
  </message>
  <message name="GET_GetObbAnalyticsReportFcra_OutputMessage">
    <part name="GET_GetObbAnalyticsReportFcra_OutputMessage" element="schemas:GET_GetObbAnalyticsReportFcra_OutputMessage" />
  </message>
  <message name="GET_GetObbAnalyticsReportFcra_404">
    <part name="GET_GetObbAnalyticsReportFcra_404" element="schemas:GET_GetObbAnalyticsReportFcra_404" />
  </message>
  <message name="GET_GetCustomerAccountStatement_InputMessage">
    <part name="GET_GetCustomerAccountStatement_InputMessage" element="schemas:GET_GetCustomerAccountStatement_InputMessage" />
  </message>
  <message name="GET_GetCustomerAccountStatement_OutputMessage">
    <part name="GET_GetCustomerAccountStatement_OutputMessage" element="schemas:GET_GetCustomerAccountStatement_OutputMessage" />
  </message>
  <message name="GET_GetCustomerAccountStatement_400">
    <part name="GET_GetCustomerAccountStatement_400" element="schemas:GET_GetCustomerAccountStatement_400" />
  </message>
  <message name="GET_GetCustomerAccountStatement_401">
    <part name="GET_GetCustomerAccountStatement_401" element="schemas:GET_GetCustomerAccountStatement_401" />
  </message>
  <message name="GET_GetCustomerAccountStatement_404">
    <part name="GET_GetCustomerAccountStatement_404" element="schemas:GET_GetCustomerAccountStatement_404" />
  </message>
  <message name="POST_GenerateStatementReport_InputMessage">
    <part name="POST_GenerateStatementReport_InputMessage" element="schemas:POST_GenerateStatementReport_InputMessage" />
  </message>
  <message name="POST_GenerateStatementReport_OutputMessage">
    <part name="POST_GenerateStatementReport_OutputMessage" element="schemas:POST_GenerateStatementReport_OutputMessage" />
  </message>
  <message name="POST_GenerateStatementReport_400">
    <part name="POST_GenerateStatementReport_400" element="schemas:POST_GenerateStatementReport_400" />
  </message>
  <message name="POST_GenerateStatementReport_401">
    <part name="POST_GenerateStatementReport_401" element="schemas:POST_GenerateStatementReport_401" />
  </message>
  <message name="POST_GenerateStatementReport_404">
    <part name="POST_GenerateStatementReport_404" element="schemas:POST_GenerateStatementReport_404" />
  </message>
  <message name="POST_GenerateCashFlowBusinessReport_InputMessage">
    <part name="POST_GenerateCashFlowBusinessReport_InputMessage" element="schemas:POST_GenerateCashFlowBusinessReport_InputMessage" />
  </message>
  <message name="POST_GenerateCashFlowBusinessReport_OutputMessage">
    <part name="POST_GenerateCashFlowBusinessReport_OutputMessage" element="schemas:POST_GenerateCashFlowBusinessReport_OutputMessage" />
  </message>
  <message name="POST_GenerateCashFlowBusinessReport_400">
    <part name="POST_GenerateCashFlowBusinessReport_400" element="schemas:POST_GenerateCashFlowBusinessReport_400" />
  </message>
  <message name="POST_GenerateCashFlowBusinessReport_401">
    <part name="POST_GenerateCashFlowBusinessReport_401" element="schemas:POST_GenerateCashFlowBusinessReport_401" />
  </message>
  <message name="POST_GenerateCashFlowBusinessReport_404">
    <part name="POST_GenerateCashFlowBusinessReport_404" element="schemas:POST_GenerateCashFlowBusinessReport_404" />
  </message>
  <message name="POST_GenerateCashFlowPersonalReport_InputMessage">
    <part name="POST_GenerateCashFlowPersonalReport_InputMessage" element="schemas:POST_GenerateCashFlowPersonalReport_InputMessage" />
  </message>
  <message name="POST_GenerateCashFlowPersonalReport_OutputMessage">
    <part name="POST_GenerateCashFlowPersonalReport_OutputMessage" element="schemas:POST_GenerateCashFlowPersonalReport_OutputMessage" />
  </message>
  <message name="POST_GenerateCashFlowPersonalReport_400">
    <part name="POST_GenerateCashFlowPersonalReport_400" element="schemas:POST_GenerateCashFlowPersonalReport_400" />
  </message>
  <message name="POST_GenerateCashFlowPersonalReport_401">
    <part name="POST_GenerateCashFlowPersonalReport_401" element="schemas:POST_GenerateCashFlowPersonalReport_401" />
  </message>
  <message name="POST_GenerateCashFlowPersonalReport_404">
    <part name="POST_GenerateCashFlowPersonalReport_404" element="schemas:POST_GenerateCashFlowPersonalReport_404" />
  </message>
  <message name="POST_GenerateCashFlowAnalytics_InputMessage">
    <part name="POST_GenerateCashFlowAnalytics_InputMessage" element="schemas:POST_GenerateCashFlowAnalytics_InputMessage" />
  </message>
  <message name="POST_GenerateCashFlowAnalytics_OutputMessage">
    <part name="POST_GenerateCashFlowAnalytics_OutputMessage" element="schemas:POST_GenerateCashFlowAnalytics_OutputMessage" />
  </message>
  <message name="POST_GenerateCashFlowAnalytics_400">
    <part name="POST_GenerateCashFlowAnalytics_400" element="schemas:POST_GenerateCashFlowAnalytics_400" />
  </message>
  <message name="POST_GenerateCashFlowAnalytics_401">
    <part name="POST_GenerateCashFlowAnalytics_401" element="schemas:POST_GenerateCashFlowAnalytics_401" />
  </message>
  <message name="POST_GenerateCashFlowAnalytics_403">
    <part name="POST_GenerateCashFlowAnalytics_403" element="schemas:POST_GenerateCashFlowAnalytics_403" />
  </message>
  <message name="POST_GenerateCashFlowAnalytics_404">
    <part name="POST_GenerateCashFlowAnalytics_404" element="schemas:POST_GenerateCashFlowAnalytics_404" />
  </message>
  <message name="POST_GenerateCashFlowAnalytics_409">
    <part name="POST_GenerateCashFlowAnalytics_409" element="schemas:POST_GenerateCashFlowAnalytics_409" />
  </message>
  <message name="POST_GenerateCashFlowAnalyticsFcra_InputMessage">
    <part name="POST_GenerateCashFlowAnalyticsFcra_InputMessage" element="schemas:POST_GenerateCashFlowAnalyticsFcra_InputMessage" />
  </message>
  <message name="POST_GenerateCashFlowAnalyticsFcra_OutputMessage">
    <part name="POST_GenerateCashFlowAnalyticsFcra_OutputMessage" element="schemas:POST_GenerateCashFlowAnalyticsFcra_OutputMessage" />
  </message>
  <message name="POST_GenerateCashFlowAnalyticsFcra_400">
    <part name="POST_GenerateCashFlowAnalyticsFcra_400" element="schemas:POST_GenerateCashFlowAnalyticsFcra_400" />
  </message>
  <message name="POST_GenerateCashFlowAnalyticsFcra_401">
    <part name="POST_GenerateCashFlowAnalyticsFcra_401" element="schemas:POST_GenerateCashFlowAnalyticsFcra_401" />
  </message>
  <message name="POST_GenerateCashFlowAnalyticsFcra_403">
    <part name="POST_GenerateCashFlowAnalyticsFcra_403" element="schemas:POST_GenerateCashFlowAnalyticsFcra_403" />
  </message>
  <message name="POST_GenerateCashFlowAnalyticsFcra_404">
    <part name="POST_GenerateCashFlowAnalyticsFcra_404" element="schemas:POST_GenerateCashFlowAnalyticsFcra_404" />
  </message>
  <message name="POST_GenerateCashFlowAnalyticsFcra_409">
    <part name="POST_GenerateCashFlowAnalyticsFcra_409" element="schemas:POST_GenerateCashFlowAnalyticsFcra_409" />
  </message>
  <message name="POST_GenerateConnectUrl_InputMessage">
    <part name="POST_GenerateConnectUrl_InputMessage" element="schemas:POST_GenerateConnectUrl_InputMessage" />
  </message>
  <message name="POST_GenerateConnectUrl_OutputMessage">
    <part name="POST_GenerateConnectUrl_OutputMessage" element="schemas:POST_GenerateConnectUrl_OutputMessage" />
  </message>
  <message name="POST_GenerateConnectUrl_400">
    <part name="POST_GenerateConnectUrl_400" element="schemas:POST_GenerateConnectUrl_400" />
  </message>
  <message name="POST_GenerateConnectUrl_401">
    <part name="POST_GenerateConnectUrl_401" element="schemas:POST_GenerateConnectUrl_401" />
  </message>
  <message name="POST_GenerateLiteConnectUrl_InputMessage">
    <part name="POST_GenerateLiteConnectUrl_InputMessage" element="schemas:POST_GenerateLiteConnectUrl_InputMessage" />
  </message>
  <message name="POST_GenerateLiteConnectUrl_OutputMessage">
    <part name="POST_GenerateLiteConnectUrl_OutputMessage" element="schemas:POST_GenerateLiteConnectUrl_OutputMessage" />
  </message>
  <message name="POST_GenerateLiteConnectUrl_400">
    <part name="POST_GenerateLiteConnectUrl_400" element="schemas:POST_GenerateLiteConnectUrl_400" />
  </message>
  <message name="POST_GenerateLiteConnectUrl_401">
    <part name="POST_GenerateLiteConnectUrl_401" element="schemas:POST_GenerateLiteConnectUrl_401" />
  </message>
  <message name="POST_GenerateFixConnectUrl_InputMessage">
    <part name="POST_GenerateFixConnectUrl_InputMessage" element="schemas:POST_GenerateFixConnectUrl_InputMessage" />
  </message>
  <message name="POST_GenerateFixConnectUrl_OutputMessage">
    <part name="POST_GenerateFixConnectUrl_OutputMessage" element="schemas:POST_GenerateFixConnectUrl_OutputMessage" />
  </message>
  <message name="POST_GenerateFixConnectUrl_400">
    <part name="POST_GenerateFixConnectUrl_400" element="schemas:POST_GenerateFixConnectUrl_400" />
  </message>
  <message name="POST_GenerateFixConnectUrl_401">
    <part name="POST_GenerateFixConnectUrl_401" element="schemas:POST_GenerateFixConnectUrl_401" />
  </message>
  <message name="POST_GenerateFixConnectUrl_404">
    <part name="POST_GenerateFixConnectUrl_404" element="schemas:POST_GenerateFixConnectUrl_404" />
  </message>
  <message name="POST_SendConnectEmail_InputMessage">
    <part name="POST_SendConnectEmail_InputMessage" element="schemas:POST_SendConnectEmail_InputMessage" />
  </message>
  <message name="POST_SendConnectEmail_OutputMessage">
    <part name="POST_SendConnectEmail_OutputMessage" element="schemas:POST_SendConnectEmail_OutputMessage" />
  </message>
  <message name="POST_SendConnectEmail_400">
    <part name="POST_SendConnectEmail_400" element="schemas:POST_SendConnectEmail_400" />
  </message>
  <message name="POST_SendConnectEmail_401">
    <part name="POST_SendConnectEmail_401" element="schemas:POST_SendConnectEmail_401" />
  </message>
  <message name="POST_GenerateJointBorrowerConnectUrl_InputMessage">
    <part name="POST_GenerateJointBorrowerConnectUrl_InputMessage" element="schemas:POST_GenerateJointBorrowerConnectUrl_InputMessage" />
  </message>
  <message name="POST_GenerateJointBorrowerConnectUrl_OutputMessage">
    <part name="POST_GenerateJointBorrowerConnectUrl_OutputMessage" element="schemas:POST_GenerateJointBorrowerConnectUrl_OutputMessage" />
  </message>
  <message name="POST_GenerateJointBorrowerConnectUrl_400">
    <part name="POST_GenerateJointBorrowerConnectUrl_400" element="schemas:POST_GenerateJointBorrowerConnectUrl_400" />
  </message>
  <message name="POST_GenerateJointBorrowerConnectUrl_401">
    <part name="POST_GenerateJointBorrowerConnectUrl_401" element="schemas:POST_GenerateJointBorrowerConnectUrl_401" />
  </message>
  <message name="POST_SendJointBorrowerConnectEmail_InputMessage">
    <part name="POST_SendJointBorrowerConnectEmail_InputMessage" element="schemas:POST_SendJointBorrowerConnectEmail_InputMessage" />
  </message>
  <message name="POST_SendJointBorrowerConnectEmail_OutputMessage">
    <part name="POST_SendJointBorrowerConnectEmail_OutputMessage" element="schemas:POST_SendJointBorrowerConnectEmail_OutputMessage" />
  </message>
  <message name="POST_SendJointBorrowerConnectEmail_400">
    <part name="POST_SendJointBorrowerConnectEmail_400" element="schemas:POST_SendJointBorrowerConnectEmail_400" />
  </message>
  <message name="POST_SendJointBorrowerConnectEmail_401">
    <part name="POST_SendJointBorrowerConnectEmail_401" element="schemas:POST_SendJointBorrowerConnectEmail_401" />
  </message>
  <message name="POST_CreateConsumer_InputMessage">
    <part name="POST_CreateConsumer_InputMessage" element="schemas:POST_CreateConsumer_InputMessage" />
  </message>
  <message name="POST_CreateConsumer_OutputMessage">
    <part name="POST_CreateConsumer_OutputMessage" element="schemas:POST_CreateConsumer_OutputMessage" />
  </message>
  <message name="POST_CreateConsumer_400">
    <part name="POST_CreateConsumer_400" element="schemas:POST_CreateConsumer_400" />
  </message>
  <message name="POST_CreateConsumer_401">
    <part name="POST_CreateConsumer_401" element="schemas:POST_CreateConsumer_401" />
  </message>
  <message name="POST_CreateConsumer_404">
    <part name="POST_CreateConsumer_404" element="schemas:POST_CreateConsumer_404" />
  </message>
  <message name="POST_CreateConsumer_409">
    <part name="POST_CreateConsumer_409" element="schemas:POST_CreateConsumer_409" />
  </message>
  <message name="GET_GetConsumerForCustomer_InputMessage">
    <part name="GET_GetConsumerForCustomer_InputMessage" element="schemas:GET_GetConsumerForCustomer_InputMessage" />
  </message>
  <message name="GET_GetConsumerForCustomer_OutputMessage">
    <part name="GET_GetConsumerForCustomer_OutputMessage" element="schemas:GET_GetConsumerForCustomer_OutputMessage" />
  </message>
  <message name="GET_GetConsumerForCustomer_400">
    <part name="GET_GetConsumerForCustomer_400" element="schemas:GET_GetConsumerForCustomer_400" />
  </message>
  <message name="GET_GetConsumerForCustomer_401">
    <part name="GET_GetConsumerForCustomer_401" element="schemas:GET_GetConsumerForCustomer_401" />
  </message>
  <message name="GET_GetConsumerForCustomer_404">
    <part name="GET_GetConsumerForCustomer_404" element="schemas:GET_GetConsumerForCustomer_404" />
  </message>
  <message name="GET_GetConsumer_InputMessage">
    <part name="GET_GetConsumer_InputMessage" element="schemas:GET_GetConsumer_InputMessage" />
  </message>
  <message name="GET_GetConsumer_OutputMessage">
    <part name="GET_GetConsumer_OutputMessage" element="schemas:GET_GetConsumer_OutputMessage" />
  </message>
  <message name="GET_GetConsumer_400">
    <part name="GET_GetConsumer_400" element="schemas:GET_GetConsumer_400" />
  </message>
  <message name="GET_GetConsumer_401">
    <part name="GET_GetConsumer_401" element="schemas:GET_GetConsumer_401" />
  </message>
  <message name="GET_GetConsumer_404">
    <part name="GET_GetConsumer_404" element="schemas:GET_GetConsumer_404" />
  </message>
  <message name="PUT_ModifyConsumer_InputMessage">
    <part name="PUT_ModifyConsumer_InputMessage" element="schemas:PUT_ModifyConsumer_InputMessage" />
  </message>
  <message name="PUT_ModifyConsumer_OutputMessage">
    <part name="PUT_ModifyConsumer_OutputMessage" element="schemas:PUT_ModifyConsumer_OutputMessage" />
  </message>
  <message name="PUT_ModifyConsumer_400">
    <part name="PUT_ModifyConsumer_400" element="schemas:PUT_ModifyConsumer_400" />
  </message>
  <message name="PUT_ModifyConsumer_401">
    <part name="PUT_ModifyConsumer_401" element="schemas:PUT_ModifyConsumer_401" />
  </message>
  <message name="PUT_ModifyConsumer_404">
    <part name="PUT_ModifyConsumer_404" element="schemas:PUT_ModifyConsumer_404" />
  </message>
  <message name="POST_AddTestingCustomer_InputMessage">
    <part name="POST_AddTestingCustomer_InputMessage" element="schemas:POST_AddTestingCustomer_InputMessage" />
  </message>
  <message name="POST_AddTestingCustomer_OutputMessage">
    <part name="POST_AddTestingCustomer_OutputMessage" element="schemas:POST_AddTestingCustomer_OutputMessage" />
  </message>
  <message name="POST_AddTestingCustomer_400">
    <part name="POST_AddTestingCustomer_400" element="schemas:POST_AddTestingCustomer_400" />
  </message>
  <message name="POST_AddTestingCustomer_401">
    <part name="POST_AddTestingCustomer_401" element="schemas:POST_AddTestingCustomer_401" />
  </message>
  <message name="POST_AddCustomer_InputMessage">
    <part name="POST_AddCustomer_InputMessage" element="schemas:POST_AddCustomer_InputMessage" />
  </message>
  <message name="POST_AddCustomer_OutputMessage">
    <part name="POST_AddCustomer_OutputMessage" element="schemas:POST_AddCustomer_OutputMessage" />
  </message>
  <message name="POST_AddCustomer_400">
    <part name="POST_AddCustomer_400" element="schemas:POST_AddCustomer_400" />
  </message>
  <message name="POST_AddCustomer_401">
    <part name="POST_AddCustomer_401" element="schemas:POST_AddCustomer_401" />
  </message>
  <message name="POST_AddCustomer_429">
    <part name="POST_AddCustomer_429" element="schemas:POST_AddCustomer_429" />
  </message>
  <message name="GET_GetCustomers_InputMessage">
    <part name="GET_GetCustomers_InputMessage" element="schemas:GET_GetCustomers_InputMessage" />
  </message>
  <message name="GET_GetCustomers_OutputMessage">
    <part name="GET_GetCustomers_OutputMessage" element="schemas:GET_GetCustomers_OutputMessage" />
  </message>
  <message name="GET_GetCustomers_400">
    <part name="GET_GetCustomers_400" element="schemas:GET_GetCustomers_400" />
  </message>
  <message name="GET_GetCustomers_401">
    <part name="GET_GetCustomers_401" element="schemas:GET_GetCustomers_401" />
  </message>
  <message name="GET_GetCustomerWithAppData_InputMessage">
    <part name="GET_GetCustomerWithAppData_InputMessage" element="schemas:GET_GetCustomerWithAppData_InputMessage" />
  </message>
  <message name="GET_GetCustomerWithAppData_OutputMessage">
    <part name="GET_GetCustomerWithAppData_OutputMessage" element="schemas:GET_GetCustomerWithAppData_OutputMessage" />
  </message>
  <message name="GET_GetCustomerWithAppData_400">
    <part name="GET_GetCustomerWithAppData_400" element="schemas:GET_GetCustomerWithAppData_400" />
  </message>
  <message name="GET_GetCustomerWithAppData_401">
    <part name="GET_GetCustomerWithAppData_401" element="schemas:GET_GetCustomerWithAppData_401" />
  </message>
  <message name="GET_GetCustomerWithAppData_404">
    <part name="GET_GetCustomerWithAppData_404" element="schemas:GET_GetCustomerWithAppData_404" />
  </message>
  <message name="GET_GetCustomer_InputMessage">
    <part name="GET_GetCustomer_InputMessage" element="schemas:GET_GetCustomer_InputMessage" />
  </message>
  <message name="GET_GetCustomer_OutputMessage">
    <part name="GET_GetCustomer_OutputMessage" element="schemas:GET_GetCustomer_OutputMessage" />
  </message>
  <message name="GET_GetCustomer_400">
    <part name="GET_GetCustomer_400" element="schemas:GET_GetCustomer_400" />
  </message>
  <message name="GET_GetCustomer_401">
    <part name="GET_GetCustomer_401" element="schemas:GET_GetCustomer_401" />
  </message>
  <message name="GET_GetCustomer_404">
    <part name="GET_GetCustomer_404" element="schemas:GET_GetCustomer_404" />
  </message>
  <message name="PUT_ModifyCustomer_InputMessage">
    <part name="PUT_ModifyCustomer_InputMessage" element="schemas:PUT_ModifyCustomer_InputMessage" />
  </message>
  <message name="PUT_ModifyCustomer_OutputMessage">
    <part name="PUT_ModifyCustomer_OutputMessage" element="schemas:PUT_ModifyCustomer_OutputMessage" />
  </message>
  <message name="PUT_ModifyCustomer_400">
    <part name="PUT_ModifyCustomer_400" element="schemas:PUT_ModifyCustomer_400" />
  </message>
  <message name="PUT_ModifyCustomer_401">
    <part name="PUT_ModifyCustomer_401" element="schemas:PUT_ModifyCustomer_401" />
  </message>
  <message name="PUT_ModifyCustomer_404">
    <part name="PUT_ModifyCustomer_404" element="schemas:PUT_ModifyCustomer_404" />
  </message>
  <message name="DELETE_DeleteCustomer_InputMessage">
    <part name="DELETE_DeleteCustomer_InputMessage" element="schemas:DELETE_DeleteCustomer_InputMessage" />
  </message>
  <message name="DELETE_DeleteCustomer_OutputMessage">
    <part name="DELETE_DeleteCustomer_OutputMessage" element="schemas:DELETE_DeleteCustomer_OutputMessage" />
  </message>
  <message name="DELETE_DeleteCustomer_401">
    <part name="DELETE_DeleteCustomer_401" element="schemas:DELETE_DeleteCustomer_401" />
  </message>
  <message name="DELETE_DeleteCustomer_404">
    <part name="DELETE_DeleteCustomer_404" element="schemas:DELETE_DeleteCustomer_404" />
  </message>
  <message name="GET_GetCertifiedInstitutionsWithRSSD_InputMessage">
    <part name="GET_GetCertifiedInstitutionsWithRSSD_InputMessage" element="schemas:GET_GetCertifiedInstitutionsWithRSSD_InputMessage" />
  </message>
  <message name="GET_GetCertifiedInstitutionsWithRSSD_OutputMessage">
    <part name="GET_GetCertifiedInstitutionsWithRSSD_OutputMessage" element="schemas:GET_GetCertifiedInstitutionsWithRSSD_OutputMessage" />
  </message>
  <message name="GET_GetCertifiedInstitutionsWithRSSD_400">
    <part name="GET_GetCertifiedInstitutionsWithRSSD_400" element="schemas:GET_GetCertifiedInstitutionsWithRSSD_400" />
  </message>
  <message name="GET_GetCertifiedInstitutionsWithRSSD_401">
    <part name="GET_GetCertifiedInstitutionsWithRSSD_401" element="schemas:GET_GetCertifiedInstitutionsWithRSSD_401" />
  </message>
  <message name="GET_GetInstitutions_InputMessage">
    <part name="GET_GetInstitutions_InputMessage" element="schemas:GET_GetInstitutions_InputMessage" />
  </message>
  <message name="GET_GetInstitutions_OutputMessage">
    <part name="GET_GetInstitutions_OutputMessage" element="schemas:GET_GetInstitutions_OutputMessage" />
  </message>
  <message name="GET_GetInstitutions_400">
    <part name="GET_GetInstitutions_400" element="schemas:GET_GetInstitutions_400" />
  </message>
  <message name="GET_GetInstitutions_401">
    <part name="GET_GetInstitutions_401" element="schemas:GET_GetInstitutions_401" />
  </message>
  <message name="GET_GetCertifiedInstitutions_InputMessage">
    <part name="GET_GetCertifiedInstitutions_InputMessage" element="schemas:GET_GetCertifiedInstitutions_InputMessage" />
  </message>
  <message name="GET_GetCertifiedInstitutions_OutputMessage">
    <part name="GET_GetCertifiedInstitutions_OutputMessage" element="schemas:GET_GetCertifiedInstitutions_OutputMessage" />
  </message>
  <message name="GET_GetCertifiedInstitutions_400">
    <part name="GET_GetCertifiedInstitutions_400" element="schemas:GET_GetCertifiedInstitutions_400" />
  </message>
  <message name="GET_GetCertifiedInstitutions_401">
    <part name="GET_GetCertifiedInstitutions_401" element="schemas:GET_GetCertifiedInstitutions_401" />
  </message>
  <message name="GET_GetInstitution_InputMessage">
    <part name="GET_GetInstitution_InputMessage" element="schemas:GET_GetInstitution_InputMessage" />
  </message>
  <message name="GET_GetInstitution_OutputMessage">
    <part name="GET_GetInstitution_OutputMessage" element="schemas:GET_GetInstitution_OutputMessage" />
  </message>
  <message name="GET_GetInstitution_400">
    <part name="GET_GetInstitution_400" element="schemas:GET_GetInstitution_400" />
  </message>
  <message name="GET_GetInstitution_401">
    <part name="GET_GetInstitution_401" element="schemas:GET_GetInstitution_401" />
  </message>
  <message name="GET_GetInstitution_404">
    <part name="GET_GetInstitution_404" element="schemas:GET_GetInstitution_404" />
  </message>
  <message name="GET_GetInstitutionBranding_InputMessage">
    <part name="GET_GetInstitutionBranding_InputMessage" element="schemas:GET_GetInstitutionBranding_InputMessage" />
  </message>
  <message name="GET_GetInstitutionBranding_OutputMessage">
    <part name="GET_GetInstitutionBranding_OutputMessage" element="schemas:GET_GetInstitutionBranding_OutputMessage" />
  </message>
  <message name="GET_GetInstitutionBranding_400">
    <part name="GET_GetInstitutionBranding_400" element="schemas:GET_GetInstitutionBranding_400" />
  </message>
  <message name="GET_GetInstitutionBranding_401">
    <part name="GET_GetInstitutionBranding_401" element="schemas:GET_GetInstitutionBranding_401" />
  </message>
  <message name="GET_GetInstitutionBranding_404">
    <part name="GET_GetInstitutionBranding_404" element="schemas:GET_GetInstitutionBranding_404" />
  </message>
  <message name="POST_StoreCustomerPayStatement_InputMessage">
    <part name="POST_StoreCustomerPayStatement_InputMessage" element="schemas:POST_StoreCustomerPayStatement_InputMessage" />
  </message>
  <message name="POST_StoreCustomerPayStatement_OutputMessage">
    <part name="POST_StoreCustomerPayStatement_OutputMessage" element="schemas:POST_StoreCustomerPayStatement_OutputMessage" />
  </message>
  <message name="POST_StoreCustomerPayStatement_400">
    <part name="POST_StoreCustomerPayStatement_400" element="schemas:POST_StoreCustomerPayStatement_400" />
  </message>
  <message name="POST_StoreCustomerPayStatement_401">
    <part name="POST_StoreCustomerPayStatement_401" element="schemas:POST_StoreCustomerPayStatement_401" />
  </message>
  <message name="POST_StoreCustomerPayStatement_404">
    <part name="POST_StoreCustomerPayStatement_404" element="schemas:POST_StoreCustomerPayStatement_404" />
  </message>
  <message name="GET_GetAccountOwner_InputMessage">
    <part name="GET_GetAccountOwner_InputMessage" element="schemas:GET_GetAccountOwner_InputMessage" />
  </message>
  <message name="GET_GetAccountOwner_OutputMessage">
    <part name="GET_GetAccountOwner_OutputMessage" element="schemas:GET_GetAccountOwner_OutputMessage" />
  </message>
  <message name="GET_GetAccountOwner_400">
    <part name="GET_GetAccountOwner_400" element="schemas:GET_GetAccountOwner_400" />
  </message>
  <message name="GET_GetAccountOwner_401">
    <part name="GET_GetAccountOwner_401" element="schemas:GET_GetAccountOwner_401" />
  </message>
  <message name="GET_GetAccountOwner_404">
    <part name="GET_GetAccountOwner_404" element="schemas:GET_GetAccountOwner_404" />
  </message>
  <message name="GET_GetLoanPaymentDetails_InputMessage">
    <part name="GET_GetLoanPaymentDetails_InputMessage" element="schemas:GET_GetLoanPaymentDetails_InputMessage" />
  </message>
  <message name="GET_GetLoanPaymentDetails_OutputMessage">
    <part name="GET_GetLoanPaymentDetails_OutputMessage" element="schemas:GET_GetLoanPaymentDetails_OutputMessage" />
  </message>
  <message name="GET_GetLoanPaymentDetails_400">
    <part name="GET_GetLoanPaymentDetails_400" element="schemas:GET_GetLoanPaymentDetails_400" />
  </message>
  <message name="GET_GetLoanPaymentDetails_401">
    <part name="GET_GetLoanPaymentDetails_401" element="schemas:GET_GetLoanPaymentDetails_401" />
  </message>
  <message name="GET_GetLoanPaymentDetails_404">
    <part name="GET_GetLoanPaymentDetails_404" element="schemas:GET_GetLoanPaymentDetails_404" />
  </message>
  <message name="GET_GetAccountACHDetails_InputMessage">
    <part name="GET_GetAccountACHDetails_InputMessage" element="schemas:GET_GetAccountACHDetails_InputMessage" />
  </message>
  <message name="GET_GetAccountACHDetails_OutputMessage">
    <part name="GET_GetAccountACHDetails_OutputMessage" element="schemas:GET_GetAccountACHDetails_OutputMessage" />
  </message>
  <message name="GET_GetAccountACHDetails_400">
    <part name="GET_GetAccountACHDetails_400" element="schemas:GET_GetAccountACHDetails_400" />
  </message>
  <message name="GET_GetAccountACHDetails_401">
    <part name="GET_GetAccountACHDetails_401" element="schemas:GET_GetAccountACHDetails_401" />
  </message>
  <message name="GET_GetAccountACHDetails_404">
    <part name="GET_GetAccountACHDetails_404" element="schemas:GET_GetAccountACHDetails_404" />
  </message>
  <message name="GET_GetAvailableBalanceLive_InputMessage">
    <part name="GET_GetAvailableBalanceLive_InputMessage" element="schemas:GET_GetAvailableBalanceLive_InputMessage" />
  </message>
  <message name="GET_GetAvailableBalanceLive_OutputMessage">
    <part name="GET_GetAvailableBalanceLive_OutputMessage" element="schemas:GET_GetAvailableBalanceLive_OutputMessage" />
  </message>
  <message name="GET_GetAvailableBalanceLive_400">
    <part name="GET_GetAvailableBalanceLive_400" element="schemas:GET_GetAvailableBalanceLive_400" />
  </message>
  <message name="GET_GetAvailableBalanceLive_401">
    <part name="GET_GetAvailableBalanceLive_401" element="schemas:GET_GetAvailableBalanceLive_401" />
  </message>
  <message name="GET_GetAvailableBalanceLive_404">
    <part name="GET_GetAvailableBalanceLive_404" element="schemas:GET_GetAvailableBalanceLive_404" />
  </message>
  <message name="GET_GetAvailableBalance_InputMessage">
    <part name="GET_GetAvailableBalance_InputMessage" element="schemas:GET_GetAvailableBalance_InputMessage" />
  </message>
  <message name="GET_GetAvailableBalance_OutputMessage">
    <part name="GET_GetAvailableBalance_OutputMessage" element="schemas:GET_GetAvailableBalance_OutputMessage" />
  </message>
  <message name="GET_GetAvailableBalance_400">
    <part name="GET_GetAvailableBalance_400" element="schemas:GET_GetAvailableBalance_400" />
  </message>
  <message name="GET_GetAvailableBalance_401">
    <part name="GET_GetAvailableBalance_401" element="schemas:GET_GetAvailableBalance_401" />
  </message>
  <message name="GET_GetAvailableBalance_404">
    <part name="GET_GetAvailableBalance_404" element="schemas:GET_GetAvailableBalance_404" />
  </message>
  <message name="GET_GetPortfolioByCustomer_InputMessage">
    <part name="GET_GetPortfolioByCustomer_InputMessage" element="schemas:GET_GetPortfolioByCustomer_InputMessage" />
  </message>
  <message name="GET_GetPortfolioByCustomer_OutputMessage">
    <part name="GET_GetPortfolioByCustomer_OutputMessage" element="schemas:GET_GetPortfolioByCustomer_OutputMessage" />
  </message>
  <message name="GET_GetPortfolioByCustomer_400">
    <part name="GET_GetPortfolioByCustomer_400" element="schemas:GET_GetPortfolioByCustomer_400" />
  </message>
  <message name="GET_GetPortfolioByCustomer_401">
    <part name="GET_GetPortfolioByCustomer_401" element="schemas:GET_GetPortfolioByCustomer_401" />
  </message>
  <message name="GET_GetPortfolioByCustomer_404">
    <part name="GET_GetPortfolioByCustomer_404" element="schemas:GET_GetPortfolioByCustomer_404" />
  </message>
  <message name="GET_GetPortfolioByConsumer_InputMessage">
    <part name="GET_GetPortfolioByConsumer_InputMessage" element="schemas:GET_GetPortfolioByConsumer_InputMessage" />
  </message>
  <message name="GET_GetPortfolioByConsumer_OutputMessage">
    <part name="GET_GetPortfolioByConsumer_OutputMessage" element="schemas:GET_GetPortfolioByConsumer_OutputMessage" />
  </message>
  <message name="GET_GetPortfolioByConsumer_400">
    <part name="GET_GetPortfolioByConsumer_400" element="schemas:GET_GetPortfolioByConsumer_400" />
  </message>
  <message name="GET_GetPortfolioByConsumer_401">
    <part name="GET_GetPortfolioByConsumer_401" element="schemas:GET_GetPortfolioByConsumer_401" />
  </message>
  <message name="GET_GetPortfolioByConsumer_404">
    <part name="GET_GetPortfolioByConsumer_404" element="schemas:GET_GetPortfolioByConsumer_404" />
  </message>
  <message name="GET_GetReportByCustomer_InputMessage">
    <part name="GET_GetReportByCustomer_InputMessage" element="schemas:GET_GetReportByCustomer_InputMessage" />
  </message>
  <message name="GET_GetReportByCustomer_OutputMessage">
    <part name="GET_GetReportByCustomer_OutputMessage" element="schemas:GET_GetReportByCustomer_OutputMessage" />
  </message>
  <message name="GET_GetReportByCustomer_400">
    <part name="GET_GetReportByCustomer_400" element="schemas:GET_GetReportByCustomer_400" />
  </message>
  <message name="GET_GetReportByCustomer_401">
    <part name="GET_GetReportByCustomer_401" element="schemas:GET_GetReportByCustomer_401" />
  </message>
  <message name="GET_GetReportByCustomer_404">
    <part name="GET_GetReportByCustomer_404" element="schemas:GET_GetReportByCustomer_404" />
  </message>
  <message name="GET_GetReportByConsumer_InputMessage">
    <part name="GET_GetReportByConsumer_InputMessage" element="schemas:GET_GetReportByConsumer_InputMessage" />
  </message>
  <message name="GET_GetReportByConsumer_OutputMessage">
    <part name="GET_GetReportByConsumer_OutputMessage" element="schemas:GET_GetReportByConsumer_OutputMessage" />
  </message>
  <message name="GET_GetReportByConsumer_400">
    <part name="GET_GetReportByConsumer_400" element="schemas:GET_GetReportByConsumer_400" />
  </message>
  <message name="GET_GetReportByConsumer_401">
    <part name="GET_GetReportByConsumer_401" element="schemas:GET_GetReportByConsumer_401" />
  </message>
  <message name="GET_GetReportByConsumer_404">
    <part name="GET_GetReportByConsumer_404" element="schemas:GET_GetReportByConsumer_404" />
  </message>
  <message name="GET_GetReportsByCustomerId_InputMessage">
    <part name="GET_GetReportsByCustomerId_InputMessage" element="schemas:GET_GetReportsByCustomerId_InputMessage" />
  </message>
  <message name="GET_GetReportsByCustomerId_OutputMessage">
    <part name="GET_GetReportsByCustomerId_OutputMessage" element="schemas:GET_GetReportsByCustomerId_OutputMessage" />
  </message>
  <message name="GET_GetReportsByCustomerId_400">
    <part name="GET_GetReportsByCustomerId_400" element="schemas:GET_GetReportsByCustomerId_400" />
  </message>
  <message name="GET_GetReportsByCustomerId_401">
    <part name="GET_GetReportsByCustomerId_401" element="schemas:GET_GetReportsByCustomerId_401" />
  </message>
  <message name="GET_GetReportsByCustomerId_404">
    <part name="GET_GetReportsByCustomerId_404" element="schemas:GET_GetReportsByCustomerId_404" />
  </message>
  <message name="GET_GetReportsByCustomerId_429">
    <part name="GET_GetReportsByCustomerId_429" element="schemas:GET_GetReportsByCustomerId_429" />
  </message>
  <message name="GET_GetReportsByConsumerId_InputMessage">
    <part name="GET_GetReportsByConsumerId_InputMessage" element="schemas:GET_GetReportsByConsumerId_InputMessage" />
  </message>
  <message name="GET_GetReportsByConsumerId_OutputMessage">
    <part name="GET_GetReportsByConsumerId_OutputMessage" element="schemas:GET_GetReportsByConsumerId_OutputMessage" />
  </message>
  <message name="GET_GetReportsByConsumerId_400">
    <part name="GET_GetReportsByConsumerId_400" element="schemas:GET_GetReportsByConsumerId_400" />
  </message>
  <message name="GET_GetReportsByConsumerId_401">
    <part name="GET_GetReportsByConsumerId_401" element="schemas:GET_GetReportsByConsumerId_401" />
  </message>
  <message name="GET_GetReportsByConsumerId_404">
    <part name="GET_GetReportsByConsumerId_404" element="schemas:GET_GetReportsByConsumerId_404" />
  </message>
  <message name="GET_GetReportsByConsumerId_429">
    <part name="GET_GetReportsByConsumerId_429" element="schemas:GET_GetReportsByConsumerId_429" />
  </message>
  <message name="POST_LoadHistoricTransactionsForCustomerAccount_InputMessage">
    <part name="POST_LoadHistoricTransactionsForCustomerAccount_InputMessage" element="schemas:POST_LoadHistoricTransactionsForCustomerAccount_InputMessage" />
  </message>
  <message name="POST_LoadHistoricTransactionsForCustomerAccount_OutputMessage">
    <part name="POST_LoadHistoricTransactionsForCustomerAccount_OutputMessage" element="schemas:POST_LoadHistoricTransactionsForCustomerAccount_OutputMessage" />
  </message>
  <message name="POST_LoadHistoricTransactionsForCustomerAccount_400">
    <part name="POST_LoadHistoricTransactionsForCustomerAccount_400" element="schemas:POST_LoadHistoricTransactionsForCustomerAccount_400" />
  </message>
  <message name="POST_LoadHistoricTransactionsForCustomerAccount_401">
    <part name="POST_LoadHistoricTransactionsForCustomerAccount_401" element="schemas:POST_LoadHistoricTransactionsForCustomerAccount_401" />
  </message>
  <message name="POST_LoadHistoricTransactionsForCustomerAccount_404">
    <part name="POST_LoadHistoricTransactionsForCustomerAccount_404" element="schemas:POST_LoadHistoricTransactionsForCustomerAccount_404" />
  </message>
  <message name="GET_GetAllCustomerTransactions_InputMessage">
    <part name="GET_GetAllCustomerTransactions_InputMessage" element="schemas:GET_GetAllCustomerTransactions_InputMessage" />
  </message>
  <message name="GET_GetAllCustomerTransactions_OutputMessage">
    <part name="GET_GetAllCustomerTransactions_OutputMessage" element="schemas:GET_GetAllCustomerTransactions_OutputMessage" />
  </message>
  <message name="GET_GetAllCustomerTransactions_400">
    <part name="GET_GetAllCustomerTransactions_400" element="schemas:GET_GetAllCustomerTransactions_400" />
  </message>
  <message name="GET_GetAllCustomerTransactions_401">
    <part name="GET_GetAllCustomerTransactions_401" element="schemas:GET_GetAllCustomerTransactions_401" />
  </message>
  <message name="GET_GetAllCustomerTransactions_404">
    <part name="GET_GetAllCustomerTransactions_404" element="schemas:GET_GetAllCustomerTransactions_404" />
  </message>
  <message name="GET_GetCustomerTransaction_InputMessage">
    <part name="GET_GetCustomerTransaction_InputMessage" element="schemas:GET_GetCustomerTransaction_InputMessage" />
  </message>
  <message name="GET_GetCustomerTransaction_OutputMessage">
    <part name="GET_GetCustomerTransaction_OutputMessage" element="schemas:GET_GetCustomerTransaction_OutputMessage" />
  </message>
  <message name="GET_GetCustomerTransaction_400">
    <part name="GET_GetCustomerTransaction_400" element="schemas:GET_GetCustomerTransaction_400" />
  </message>
  <message name="GET_GetCustomerTransaction_401">
    <part name="GET_GetCustomerTransaction_401" element="schemas:GET_GetCustomerTransaction_401" />
  </message>
  <message name="GET_GetCustomerTransaction_404">
    <part name="GET_GetCustomerTransaction_404" element="schemas:GET_GetCustomerTransaction_404" />
  </message>
  <message name="GET_GetCustomerAccountTransactions_InputMessage">
    <part name="GET_GetCustomerAccountTransactions_InputMessage" element="schemas:GET_GetCustomerAccountTransactions_InputMessage" />
  </message>
  <message name="GET_GetCustomerAccountTransactions_OutputMessage">
    <part name="GET_GetCustomerAccountTransactions_OutputMessage" element="schemas:GET_GetCustomerAccountTransactions_OutputMessage" />
  </message>
  <message name="GET_GetCustomerAccountTransactions_400">
    <part name="GET_GetCustomerAccountTransactions_400" element="schemas:GET_GetCustomerAccountTransactions_400" />
  </message>
  <message name="GET_GetCustomerAccountTransactions_401">
    <part name="GET_GetCustomerAccountTransactions_401" element="schemas:GET_GetCustomerAccountTransactions_401" />
  </message>
  <message name="GET_GetCustomerAccountTransactions_404">
    <part name="GET_GetCustomerAccountTransactions_404" element="schemas:GET_GetCustomerAccountTransactions_404" />
  </message>
  <message name="POST_GenerateTransactionsReport_InputMessage">
    <part name="POST_GenerateTransactionsReport_InputMessage" element="schemas:POST_GenerateTransactionsReport_InputMessage" />
  </message>
  <message name="POST_GenerateTransactionsReport_OutputMessage">
    <part name="POST_GenerateTransactionsReport_OutputMessage" element="schemas:POST_GenerateTransactionsReport_OutputMessage" />
  </message>
  <message name="POST_GenerateTransactionsReport_400">
    <part name="POST_GenerateTransactionsReport_400" element="schemas:POST_GenerateTransactionsReport_400" />
  </message>
  <message name="POST_GenerateTransactionsReport_401">
    <part name="POST_GenerateTransactionsReport_401" element="schemas:POST_GenerateTransactionsReport_401" />
  </message>
  <message name="POST_GenerateTransactionsReport_404">
    <part name="POST_GenerateTransactionsReport_404" element="schemas:POST_GenerateTransactionsReport_404" />
  </message>
  <message name="POST_SubscribeToTxPushNotifications_InputMessage">
    <part name="POST_SubscribeToTxPushNotifications_InputMessage" element="schemas:POST_SubscribeToTxPushNotifications_InputMessage" />
  </message>
  <message name="POST_SubscribeToTxPushNotifications_OutputMessage">
    <part name="POST_SubscribeToTxPushNotifications_OutputMessage" element="schemas:POST_SubscribeToTxPushNotifications_OutputMessage" />
  </message>
  <message name="POST_SubscribeToTxPushNotifications_400">
    <part name="POST_SubscribeToTxPushNotifications_400" element="schemas:POST_SubscribeToTxPushNotifications_400" />
  </message>
  <message name="POST_SubscribeToTxPushNotifications_401">
    <part name="POST_SubscribeToTxPushNotifications_401" element="schemas:POST_SubscribeToTxPushNotifications_401" />
  </message>
  <message name="POST_SubscribeToTxPushNotifications_404">
    <part name="POST_SubscribeToTxPushNotifications_404" element="schemas:POST_SubscribeToTxPushNotifications_404" />
  </message>
  <message name="DELETE_DisableTxPushNotifications_InputMessage">
    <part name="DELETE_DisableTxPushNotifications_InputMessage" element="schemas:DELETE_DisableTxPushNotifications_InputMessage" />
  </message>
  <message name="DELETE_DisableTxPushNotifications_OutputMessage">
    <part name="DELETE_DisableTxPushNotifications_OutputMessage" element="schemas:DELETE_DisableTxPushNotifications_OutputMessage" />
  </message>
  <message name="DELETE_DisableTxPushNotifications_400">
    <part name="DELETE_DisableTxPushNotifications_400" element="schemas:DELETE_DisableTxPushNotifications_400" />
  </message>
  <message name="DELETE_DisableTxPushNotifications_401">
    <part name="DELETE_DisableTxPushNotifications_401" element="schemas:DELETE_DisableTxPushNotifications_401" />
  </message>
  <message name="DELETE_DisableTxPushNotifications_404">
    <part name="DELETE_DisableTxPushNotifications_404" element="schemas:DELETE_DisableTxPushNotifications_404" />
  </message>
  <message name="POST_CreateTxPushTestTransaction_InputMessage">
    <part name="POST_CreateTxPushTestTransaction_InputMessage" element="schemas:POST_CreateTxPushTestTransaction_InputMessage" />
  </message>
  <message name="POST_CreateTxPushTestTransaction_OutputMessage">
    <part name="POST_CreateTxPushTestTransaction_OutputMessage" element="schemas:POST_CreateTxPushTestTransaction_OutputMessage" />
  </message>
  <message name="POST_CreateTxPushTestTransaction_400">
    <part name="POST_CreateTxPushTestTransaction_400" element="schemas:POST_CreateTxPushTestTransaction_400" />
  </message>
  <message name="POST_CreateTxPushTestTransaction_401">
    <part name="POST_CreateTxPushTestTransaction_401" element="schemas:POST_CreateTxPushTestTransaction_401" />
  </message>
  <message name="POST_CreateTxPushTestTransaction_404">
    <part name="POST_CreateTxPushTestTransaction_404" element="schemas:POST_CreateTxPushTestTransaction_404" />
  </message>
  <message name="DELETE_DeleteTxPushSubscription_InputMessage">
    <part name="DELETE_DeleteTxPushSubscription_InputMessage" element="schemas:DELETE_DeleteTxPushSubscription_InputMessage" />
  </message>
  <message name="DELETE_DeleteTxPushSubscription_OutputMessage">
    <part name="DELETE_DeleteTxPushSubscription_OutputMessage" element="schemas:DELETE_DeleteTxPushSubscription_OutputMessage" />
  </message>
  <message name="DELETE_DeleteTxPushSubscription_400">
    <part name="DELETE_DeleteTxPushSubscription_400" element="schemas:DELETE_DeleteTxPushSubscription_400" />
  </message>
  <message name="DELETE_DeleteTxPushSubscription_401">
    <part name="DELETE_DeleteTxPushSubscription_401" element="schemas:DELETE_DeleteTxPushSubscription_401" />
  </message>
  <message name="DELETE_DeleteTxPushSubscription_404">
    <part name="DELETE_DeleteTxPushSubscription_404" element="schemas:DELETE_DeleteTxPushSubscription_404" />
  </message>
  <message name="POST_GenerateVOAReport_InputMessage">
    <part name="POST_GenerateVOAReport_InputMessage" element="schemas:POST_GenerateVOAReport_InputMessage" />
  </message>
  <message name="POST_GenerateVOAReport_OutputMessage">
    <part name="POST_GenerateVOAReport_OutputMessage" element="schemas:POST_GenerateVOAReport_OutputMessage" />
  </message>
  <message name="POST_GenerateVOAReport_400">
    <part name="POST_GenerateVOAReport_400" element="schemas:POST_GenerateVOAReport_400" />
  </message>
  <message name="POST_GenerateVOAReport_401">
    <part name="POST_GenerateVOAReport_401" element="schemas:POST_GenerateVOAReport_401" />
  </message>
  <message name="POST_GenerateVOAReport_404">
    <part name="POST_GenerateVOAReport_404" element="schemas:POST_GenerateVOAReport_404" />
  </message>
  <message name="POST_GenerateVOAWithIncomeReport_InputMessage">
    <part name="POST_GenerateVOAWithIncomeReport_InputMessage" element="schemas:POST_GenerateVOAWithIncomeReport_InputMessage" />
  </message>
  <message name="POST_GenerateVOAWithIncomeReport_OutputMessage">
    <part name="POST_GenerateVOAWithIncomeReport_OutputMessage" element="schemas:POST_GenerateVOAWithIncomeReport_OutputMessage" />
  </message>
  <message name="POST_GenerateVOAWithIncomeReport_400">
    <part name="POST_GenerateVOAWithIncomeReport_400" element="schemas:POST_GenerateVOAWithIncomeReport_400" />
  </message>
  <message name="POST_GenerateVOAWithIncomeReport_401">
    <part name="POST_GenerateVOAWithIncomeReport_401" element="schemas:POST_GenerateVOAWithIncomeReport_401" />
  </message>
  <message name="POST_GenerateVOAWithIncomeReport_404">
    <part name="POST_GenerateVOAWithIncomeReport_404" element="schemas:POST_GenerateVOAWithIncomeReport_404" />
  </message>
  <message name="POST_GeneratePrequalificationCRAReport_InputMessage">
    <part name="POST_GeneratePrequalificationCRAReport_InputMessage" element="schemas:POST_GeneratePrequalificationCRAReport_InputMessage" />
  </message>
  <message name="POST_GeneratePrequalificationCRAReport_OutputMessage">
    <part name="POST_GeneratePrequalificationCRAReport_OutputMessage" element="schemas:POST_GeneratePrequalificationCRAReport_OutputMessage" />
  </message>
  <message name="POST_GeneratePrequalificationCRAReport_400">
    <part name="POST_GeneratePrequalificationCRAReport_400" element="schemas:POST_GeneratePrequalificationCRAReport_400" />
  </message>
  <message name="POST_GeneratePrequalificationCRAReport_401">
    <part name="POST_GeneratePrequalificationCRAReport_401" element="schemas:POST_GeneratePrequalificationCRAReport_401" />
  </message>
  <message name="POST_GeneratePrequalificationCRAReport_404">
    <part name="POST_GeneratePrequalificationCRAReport_404" element="schemas:POST_GeneratePrequalificationCRAReport_404" />
  </message>
  <message name="POST_GeneratePrequalificationNonCRAReport_InputMessage">
    <part name="POST_GeneratePrequalificationNonCRAReport_InputMessage" element="schemas:POST_GeneratePrequalificationNonCRAReport_InputMessage" />
  </message>
  <message name="POST_GeneratePrequalificationNonCRAReport_OutputMessage">
    <part name="POST_GeneratePrequalificationNonCRAReport_OutputMessage" element="schemas:POST_GeneratePrequalificationNonCRAReport_OutputMessage" />
  </message>
  <message name="POST_GeneratePrequalificationNonCRAReport_400">
    <part name="POST_GeneratePrequalificationNonCRAReport_400" element="schemas:POST_GeneratePrequalificationNonCRAReport_400" />
  </message>
  <message name="POST_GeneratePrequalificationNonCRAReport_401">
    <part name="POST_GeneratePrequalificationNonCRAReport_401" element="schemas:POST_GeneratePrequalificationNonCRAReport_401" />
  </message>
  <message name="POST_GeneratePrequalificationNonCRAReport_404">
    <part name="POST_GeneratePrequalificationNonCRAReport_404" element="schemas:POST_GeneratePrequalificationNonCRAReport_404" />
  </message>
  <message name="POST_GenerateVOIReport_InputMessage">
    <part name="POST_GenerateVOIReport_InputMessage" element="schemas:POST_GenerateVOIReport_InputMessage" />
  </message>
  <message name="POST_GenerateVOIReport_OutputMessage">
    <part name="POST_GenerateVOIReport_OutputMessage" element="schemas:POST_GenerateVOIReport_OutputMessage" />
  </message>
  <message name="POST_GenerateVOIReport_400">
    <part name="POST_GenerateVOIReport_400" element="schemas:POST_GenerateVOIReport_400" />
  </message>
  <message name="POST_GenerateVOIReport_401">
    <part name="POST_GenerateVOIReport_401" element="schemas:POST_GenerateVOIReport_401" />
  </message>
  <message name="POST_GenerateVOIReport_404">
    <part name="POST_GenerateVOIReport_404" element="schemas:POST_GenerateVOIReport_404" />
  </message>
  <message name="POST_GenerateVOEPayrollReport_InputMessage">
    <part name="POST_GenerateVOEPayrollReport_InputMessage" element="schemas:POST_GenerateVOEPayrollReport_InputMessage" />
  </message>
  <message name="POST_GenerateVOEPayrollReport_OutputMessage">
    <part name="POST_GenerateVOEPayrollReport_OutputMessage" element="schemas:POST_GenerateVOEPayrollReport_OutputMessage" />
  </message>
  <message name="POST_GenerateVOEPayrollReport_400">
    <part name="POST_GenerateVOEPayrollReport_400" element="schemas:POST_GenerateVOEPayrollReport_400" />
  </message>
  <message name="POST_GenerateVOEPayrollReport_401">
    <part name="POST_GenerateVOEPayrollReport_401" element="schemas:POST_GenerateVOEPayrollReport_401" />
  </message>
  <message name="POST_GenerateVOEPayrollReport_404">
    <part name="POST_GenerateVOEPayrollReport_404" element="schemas:POST_GenerateVOEPayrollReport_404" />
  </message>
  <message name="POST_GenerateVOETransactionsReport_InputMessage">
    <part name="POST_GenerateVOETransactionsReport_InputMessage" element="schemas:POST_GenerateVOETransactionsReport_InputMessage" />
  </message>
  <message name="POST_GenerateVOETransactionsReport_OutputMessage">
    <part name="POST_GenerateVOETransactionsReport_OutputMessage" element="schemas:POST_GenerateVOETransactionsReport_OutputMessage" />
  </message>
  <message name="POST_GenerateVOETransactionsReport_400">
    <part name="POST_GenerateVOETransactionsReport_400" element="schemas:POST_GenerateVOETransactionsReport_400" />
  </message>
  <message name="POST_GenerateVOETransactionsReport_401">
    <part name="POST_GenerateVOETransactionsReport_401" element="schemas:POST_GenerateVOETransactionsReport_401" />
  </message>
  <message name="POST_GenerateVOETransactionsReport_404">
    <part name="POST_GenerateVOETransactionsReport_404" element="schemas:POST_GenerateVOETransactionsReport_404" />
  </message>
  <message name="POST_GeneratePayStatementReport_InputMessage">
    <part name="POST_GeneratePayStatementReport_InputMessage" element="schemas:POST_GeneratePayStatementReport_InputMessage" />
  </message>
  <message name="POST_GeneratePayStatementReport_OutputMessage">
    <part name="POST_GeneratePayStatementReport_OutputMessage" element="schemas:POST_GeneratePayStatementReport_OutputMessage" />
  </message>
  <message name="POST_GeneratePayStatementReport_400">
    <part name="POST_GeneratePayStatementReport_400" element="schemas:POST_GeneratePayStatementReport_400" />
  </message>
  <message name="POST_GeneratePayStatementReport_401">
    <part name="POST_GeneratePayStatementReport_401" element="schemas:POST_GeneratePayStatementReport_401" />
  </message>
  <message name="POST_GeneratePayStatementReport_404">
    <part name="POST_GeneratePayStatementReport_404" element="schemas:POST_GeneratePayStatementReport_404" />
  </message>
  <message name="POST_GenerateVOIEPaystubWithTXVerifyReport_InputMessage">
    <part name="POST_GenerateVOIEPaystubWithTXVerifyReport_InputMessage" element="schemas:POST_GenerateVOIEPaystubWithTXVerifyReport_InputMessage" />
  </message>
  <message name="POST_GenerateVOIEPaystubWithTXVerifyReport_OutputMessage">
    <part name="POST_GenerateVOIEPaystubWithTXVerifyReport_OutputMessage" element="schemas:POST_GenerateVOIEPaystubWithTXVerifyReport_OutputMessage" />
  </message>
  <message name="POST_GenerateVOIEPaystubWithTXVerifyReport_400">
    <part name="POST_GenerateVOIEPaystubWithTXVerifyReport_400" element="schemas:POST_GenerateVOIEPaystubWithTXVerifyReport_400" />
  </message>
  <message name="POST_GenerateVOIEPaystubWithTXVerifyReport_401">
    <part name="POST_GenerateVOIEPaystubWithTXVerifyReport_401" element="schemas:POST_GenerateVOIEPaystubWithTXVerifyReport_401" />
  </message>
  <message name="POST_GenerateVOIEPaystubWithTXVerifyReport_404">
    <part name="POST_GenerateVOIEPaystubWithTXVerifyReport_404" element="schemas:POST_GenerateVOIEPaystubWithTXVerifyReport_404" />
  </message>
  <message name="POST_GenerateVOIEPaystubReport_InputMessage">
    <part name="POST_GenerateVOIEPaystubReport_InputMessage" element="schemas:POST_GenerateVOIEPaystubReport_InputMessage" />
  </message>
  <message name="POST_GenerateVOIEPaystubReport_OutputMessage">
    <part name="POST_GenerateVOIEPaystubReport_OutputMessage" element="schemas:POST_GenerateVOIEPaystubReport_OutputMessage" />
  </message>
  <message name="POST_GenerateVOIEPaystubReport_400">
    <part name="POST_GenerateVOIEPaystubReport_400" element="schemas:POST_GenerateVOIEPaystubReport_400" />
  </message>
  <message name="POST_GenerateVOIEPaystubReport_401">
    <part name="POST_GenerateVOIEPaystubReport_401" element="schemas:POST_GenerateVOIEPaystubReport_401" />
  </message>
  <message name="POST_GenerateVOIEPaystubReport_404">
    <part name="POST_GenerateVOIEPaystubReport_404" element="schemas:POST_GenerateVOIEPaystubReport_404" />
  </message>
  <message name="POST_RefreshVOIEPayrollReport_InputMessage">
    <part name="POST_RefreshVOIEPayrollReport_InputMessage" element="schemas:POST_RefreshVOIEPayrollReport_InputMessage" />
  </message>
  <message name="POST_RefreshVOIEPayrollReport_OutputMessage">
    <part name="POST_RefreshVOIEPayrollReport_OutputMessage" element="schemas:POST_RefreshVOIEPayrollReport_OutputMessage" />
  </message>
  <message name="POST_RefreshVOIEPayrollReport_400">
    <part name="POST_RefreshVOIEPayrollReport_400" element="schemas:POST_RefreshVOIEPayrollReport_400" />
  </message>
  <message name="POST_RefreshVOIEPayrollReport_401">
    <part name="POST_RefreshVOIEPayrollReport_401" element="schemas:POST_RefreshVOIEPayrollReport_401" />
  </message>
  <message name="POST_RefreshVOIEPayrollReport_404">
    <part name="POST_RefreshVOIEPayrollReport_404" element="schemas:POST_RefreshVOIEPayrollReport_404" />
  </message>
  <portType name="Finicity_x0020_APIs_PortType">
    <operation name="GET_GetCustomerAccountsByInstitutionLogin">
      <documentation>Get all accounts associated with the given institution login. All accounts returned are accessible by a single set of credentials on a single institution.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:GET_GetCustomerAccountsByInstitutionLogin_InputMessage" />
      <output message="wsdl:GET_GetCustomerAccountsByInstitutionLogin_OutputMessage">
        <documentation>The account list was successfully retrieved</documentation>
      </output>
      <fault name="GET_GetCustomerAccountsByInstitutionLogin_400" message="wsdl:GET_GetCustomerAccountsByInstitutionLogin_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="GET_GetCustomerAccountsByInstitutionLogin_401" message="wsdl:GET_GetCustomerAccountsByInstitutionLogin_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="GET_GetCustomerAccountsByInstitutionLogin_404" message="wsdl:GET_GetCustomerAccountsByInstitutionLogin_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="POST_RefreshCustomerAccountsByInstitutionLogin">
      <documentation>Refresh account and transaction data for all accounts associated with a given `institutionLoginId` with a connection to the institution.

Client apps are not permitted to automate calls to the Refresh services. Active accounts are automatically refreshed by Finicity once per day. Because many financial institutions only post transactions once per day, calling Refresh repeatedly is usually a waste of resources and is not recommended.

Apps may call Refresh services for a specific customer when there is a specific business case for the need of data that is up to date as of the moment. Please discuss with your account manager and systems engineer for further clarification.

The recommended timeout setting for this request is 120 seconds in order to receive a response. However, you can terminate the connection after making the call the operation will still complete. You will have to pull the account records to check for an updated aggregation attempt date to know when the refresh is complete.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:POST_RefreshCustomerAccountsByInstitutionLogin_InputMessage" />
      <output message="wsdl:POST_RefreshCustomerAccountsByInstitutionLogin_OutputMessage">
        <documentation>The account list was successfully refreshed</documentation>
      </output>
      <fault name="POST_RefreshCustomerAccountsByInstitutionLogin_400" message="wsdl:POST_RefreshCustomerAccountsByInstitutionLogin_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="POST_RefreshCustomerAccountsByInstitutionLogin_401" message="wsdl:POST_RefreshCustomerAccountsByInstitutionLogin_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="POST_RefreshCustomerAccountsByInstitutionLogin_404" message="wsdl:POST_RefreshCustomerAccountsByInstitutionLogin_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="DELETE_DeleteCustomerAccountsByInstitutionLogin">
      <documentation>Remove from Finicity aggregation the set of accounts matching the institution login ID.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:DELETE_DeleteCustomerAccountsByInstitutionLogin_InputMessage" />
      <output message="wsdl:DELETE_DeleteCustomerAccountsByInstitutionLogin_OutputMessage">
        <documentation>The customer accounts were successfully deleted</documentation>
      </output>
      <fault name="DELETE_DeleteCustomerAccountsByInstitutionLogin_400" message="wsdl:DELETE_DeleteCustomerAccountsByInstitutionLogin_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="DELETE_DeleteCustomerAccountsByInstitutionLogin_401" message="wsdl:DELETE_DeleteCustomerAccountsByInstitutionLogin_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="DELETE_DeleteCustomerAccountsByInstitutionLogin_404" message="wsdl:DELETE_DeleteCustomerAccountsByInstitutionLogin_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="GET_GetCustomerAccount">
      <documentation>Get a customer account by ID.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:GET_GetCustomerAccount_InputMessage" />
      <output message="wsdl:GET_GetCustomerAccount_OutputMessage">
        <documentation>The account was successfully retrieved</documentation>
      </output>
      <fault name="GET_GetCustomerAccount_400" message="wsdl:GET_GetCustomerAccount_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="GET_GetCustomerAccount_401" message="wsdl:GET_GetCustomerAccount_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="GET_GetCustomerAccount_404" message="wsdl:GET_GetCustomerAccount_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="DELETE_DeleteCustomerAccount">
      <documentation>Remove the given account from Finicity aggregation.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:DELETE_DeleteCustomerAccount_InputMessage" />
      <output message="wsdl:DELETE_DeleteCustomerAccount_OutputMessage">
        <documentation>The customer account was successfully deleted</documentation>
      </output>
      <fault name="DELETE_DeleteCustomerAccount_400" message="wsdl:DELETE_DeleteCustomerAccount_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="DELETE_DeleteCustomerAccount_401" message="wsdl:DELETE_DeleteCustomerAccount_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="DELETE_DeleteCustomerAccount_404" message="wsdl:DELETE_DeleteCustomerAccount_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="GET_GetCustomerAccounts">
      <documentation>Get all accounts owned by the given customer.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:GET_GetCustomerAccounts_InputMessage" />
      <output message="wsdl:GET_GetCustomerAccounts_OutputMessage">
        <documentation>The account list was successfully retrieved</documentation>
      </output>
      <fault name="GET_GetCustomerAccounts_400" message="wsdl:GET_GetCustomerAccounts_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="GET_GetCustomerAccounts_401" message="wsdl:GET_GetCustomerAccounts_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="GET_GetCustomerAccounts_404" message="wsdl:GET_GetCustomerAccounts_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="POST_RefreshCustomerAccounts">
      <documentation>Refresh account and transaction data for all accounts associated with the  given `customerId` with a connection to the institution.

Client apps are not permitted to automate calls to the Refresh services. Active accounts are automatically refreshed by Finicity once per day. Because many financial institutions only post transactions once per day, calling Refresh repeatedly is usually a waste of resources and is not recommended.

Apps may call Refresh services for a specific customer when there is a specific business case for the need of data that is up to date as of the moment. Please discuss with your account manager and systems engineer for further clarification.

The recommended timeout setting for this request is 120 seconds in order to receive a response. However, you can terminate the connection after making the call the operation will still complete. You will have to pull the account records to check for an updated aggregation attempt date to know when the refresh is complete.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:POST_RefreshCustomerAccounts_InputMessage" />
      <output message="wsdl:POST_RefreshCustomerAccounts_OutputMessage">
        <documentation>The account list was successfully refreshed</documentation>
      </output>
      <fault name="POST_RefreshCustomerAccounts_400" message="wsdl:POST_RefreshCustomerAccounts_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="POST_RefreshCustomerAccounts_401" message="wsdl:POST_RefreshCustomerAccounts_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="POST_RefreshCustomerAccounts_404" message="wsdl:POST_RefreshCustomerAccounts_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="GET_GetCustomerAccountsByInstitution">
      <documentation>Get all active accounts owned by the given customer at the given institution.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:GET_GetCustomerAccountsByInstitution_InputMessage" />
      <output message="wsdl:GET_GetCustomerAccountsByInstitution_OutputMessage">
        <documentation>The account list was successfully retrieved</documentation>
      </output>
      <fault name="GET_GetCustomerAccountsByInstitution_400" message="wsdl:GET_GetCustomerAccountsByInstitution_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="GET_GetCustomerAccountsByInstitution_401" message="wsdl:GET_GetCustomerAccountsByInstitution_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="GET_GetCustomerAccountsByInstitution_404" message="wsdl:GET_GetCustomerAccountsByInstitution_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="POST_GenerateConsumerAttributes">
      <documentation>Generate a Consumer Attributes report for the given customer. The "to" and "from" date range is the last 12 months of consumer data, based on the date at which the report was generated.

An analytic ID is created and associated with the customer's ID. If you generate multiple Consumer Attributes reports for the same customer, then each report will have its own analytic ID.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:POST_GenerateConsumerAttributes_InputMessage" />
      <output message="wsdl:POST_GenerateConsumerAttributes_OutputMessage">
        <documentation>The Consumer Attributes report was successfully generated</documentation>
      </output>
      <fault name="POST_GenerateConsumerAttributes_400" message="wsdl:POST_GenerateConsumerAttributes_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="POST_GenerateConsumerAttributes_401" message="wsdl:POST_GenerateConsumerAttributes_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="POST_GenerateConsumerAttributes_404" message="wsdl:POST_GenerateConsumerAttributes_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="GET_ListConsumerAttributes">
      <documentation>Retrieve a list of all analytic IDs previously created for a customer using the Generate Consumer Attributes APIs.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:GET_ListConsumerAttributes_InputMessage" />
      <output message="wsdl:GET_ListConsumerAttributes_OutputMessage">
        <documentation>Attributes IDs were successfully retrieved</documentation>
      </output>
      <fault name="GET_ListConsumerAttributes_400" message="wsdl:GET_ListConsumerAttributes_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="GET_ListConsumerAttributes_401" message="wsdl:GET_ListConsumerAttributes_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="GET_ListConsumerAttributes_404" message="wsdl:GET_ListConsumerAttributes_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="POST_GenerateFCRAConsumerAttributes">
      <documentation>_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:POST_GenerateFCRAConsumerAttributes_InputMessage" />
      <output message="wsdl:POST_GenerateFCRAConsumerAttributes_OutputMessage">
        <documentation>The Consumer Attributes report was successfully generated</documentation>
      </output>
      <fault name="POST_GenerateFCRAConsumerAttributes_400" message="wsdl:POST_GenerateFCRAConsumerAttributes_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="POST_GenerateFCRAConsumerAttributes_401" message="wsdl:POST_GenerateFCRAConsumerAttributes_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="POST_GenerateFCRAConsumerAttributes_404" message="wsdl:POST_GenerateFCRAConsumerAttributes_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="GET_GetConsumerAttributesByID">
      <documentation>Retrieve a Consumer Attributes report for a customer.

Use the analytic and customer IDs to retrieve 12 months of data attributes according to the "to" and "from" date range of the report at the time it was created. 

If the current date is before the end of the calendar month, then the most recent month provides all available data up to the current date.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:GET_GetConsumerAttributesByID_InputMessage" />
      <output message="wsdl:GET_GetConsumerAttributesByID_OutputMessage">
        <documentation>The Consumer Attributes report was successfully retrieved</documentation>
      </output>
      <fault name="GET_GetConsumerAttributesByID_400" message="wsdl:GET_GetConsumerAttributesByID_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="GET_GetConsumerAttributesByID_401" message="wsdl:GET_GetConsumerAttributesByID_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="GET_GetConsumerAttributesByID_404" message="wsdl:GET_GetConsumerAttributesByID_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="GET_GetFCRAConsumerAttributesByID">
      <documentation>Retrieve a FCRA Consumer Attributes report for a customer.

Use the analytic and customer IDs to retrieve 12 months of FCRA data attributes according to the `To` and `From` date range of the report at the time it was created. 

If the current date is before the end of the calendar month, then the most recent month provides all available data up to the current date.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:GET_GetFCRAConsumerAttributesByID_InputMessage" />
      <output message="wsdl:GET_GetFCRAConsumerAttributesByID_OutputMessage">
        <documentation>The Consumer Attributes report was successfully retrieved</documentation>
      </output>
      <fault name="GET_GetFCRAConsumerAttributesByID_400" message="wsdl:GET_GetFCRAConsumerAttributesByID_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="GET_GetFCRAConsumerAttributesByID_401" message="wsdl:GET_GetFCRAConsumerAttributesByID_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="GET_GetFCRAConsumerAttributesByID_404" message="wsdl:GET_GetFCRAConsumerAttributesByID_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="POST_RegisterApp">
      <documentation>Register a new application to access financial institutions using OAuth connections.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:POST_RegisterApp_InputMessage" />
      <output message="wsdl:POST_RegisterApp_OutputMessage">
        <documentation>The app registration was successfully created</documentation>
      </output>
      <fault name="POST_RegisterApp_400" message="wsdl:POST_RegisterApp_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="POST_RegisterApp_401" message="wsdl:POST_RegisterApp_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
    </operation>
    <operation name="PUT_ModifyAppRegistration">
      <documentation>Update a registered application.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:PUT_ModifyAppRegistration_InputMessage" />
      <output message="wsdl:PUT_ModifyAppRegistration_OutputMessage">
        <documentation>The app registration was updated</documentation>
      </output>
      <fault name="PUT_ModifyAppRegistration_400" message="wsdl:PUT_ModifyAppRegistration_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="PUT_ModifyAppRegistration_401" message="wsdl:PUT_ModifyAppRegistration_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="PUT_ModifyAppRegistration_404" message="wsdl:PUT_ModifyAppRegistration_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="GET_GetAppRegistrationStatus">
      <documentation>Get the status of your application registration(s).

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:GET_GetAppRegistrationStatus_InputMessage" />
      <output message="wsdl:GET_GetAppRegistrationStatus_OutputMessage">
        <documentation>The app registration statuses were returned</documentation>
      </output>
      <fault name="GET_GetAppRegistrationStatus_400" message="wsdl:GET_GetAppRegistrationStatus_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="GET_GetAppRegistrationStatus_401" message="wsdl:GET_GetAppRegistrationStatus_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="GET_GetAppRegistrationStatus_404" message="wsdl:GET_GetAppRegistrationStatus_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="PUT_SetCustomerAppID">
      <documentation>If you have multiple applications for a single client, and you want to register their applications to access financial institutions using OAuth connections, then use this API to assign applications to an existing customer.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:PUT_SetCustomerAppID_InputMessage" />
      <output message="wsdl:PUT_SetCustomerAppID_OutputMessage">
        <documentation>The app was successfully assigned</documentation>
      </output>
      <fault name="PUT_SetCustomerAppID_400" message="wsdl:PUT_SetCustomerAppID_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="PUT_SetCustomerAppID_401" message="wsdl:PUT_SetCustomerAppID_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="PUT_SetCustomerAppID_404" message="wsdl:PUT_SetCustomerAppID_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="PUT_MigrateInstitutionLoginAccounts">
      <documentation>The `institutionLoginId` parameter uses Finicity's internal FI mapping to move accounts from the current FI legacy connection to the new OAuth FI connection.

This API returns a list of accounts for the given institution login ID.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:PUT_MigrateInstitutionLoginAccounts_InputMessage" />
      <output message="wsdl:PUT_MigrateInstitutionLoginAccounts_OutputMessage">
        <documentation>The migration succeeded</documentation>
      </output>
      <fault name="PUT_MigrateInstitutionLoginAccounts_400" message="wsdl:PUT_MigrateInstitutionLoginAccounts_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="PUT_MigrateInstitutionLoginAccounts_401" message="wsdl:PUT_MigrateInstitutionLoginAccounts_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="PUT_MigrateInstitutionLoginAccounts_404" message="wsdl:PUT_MigrateInstitutionLoginAccounts_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="GET_GetAssetByCustomerID">
      <documentation>Retrieve a binary file for the given asset ID.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:GET_GetAssetByCustomerID_InputMessage" />
      <output message="wsdl:GET_GetAssetByCustomerID_OutputMessage">
        <documentation>The asset was successfully downloaded</documentation>
      </output>
      <fault name="GET_GetAssetByCustomerID_400" message="wsdl:GET_GetAssetByCustomerID_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="GET_GetAssetByCustomerID_401" message="wsdl:GET_GetAssetByCustomerID_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="GET_GetAssetByCustomerID_404" message="wsdl:GET_GetAssetByCustomerID_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="POST_CreateToken">
      <documentation>Send Partner ID and Partner Secret to the Partner Authentication service to obtain a token for accessing Finicity APIs.
* The token is valid for two hours and is required on all calls to the Finicity APIs
* As a best practice, use a single token for all calls. Assign a timestamp for each token, and then check the current timestamp before making any calls. If the token is greater than 90 minutes, generate a new one.
* ⚠️ After five failed attempts to authenticate, your account will be locked. Contact [support@finicity.com](mailto:support@finicity.com) to get help resetting your account.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:POST_CreateToken_InputMessage" />
      <output message="wsdl:POST_CreateToken_OutputMessage">
        <documentation>The access token was successfully created</documentation>
      </output>
      <fault name="POST_CreateToken_400" message="wsdl:POST_CreateToken_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="POST_CreateToken_401" message="wsdl:POST_CreateToken_401">
        <documentation>The request lacks valid authentication credentials. Check Partner ID, Partner Secret or Finicity-App-Key.</documentation>
      </fault>
    </operation>
    <operation name="PUT_ModifyPartnerSecret">
      <documentation>Change the Partner Secret used to authenticate this partner.

The secret does not expire, but can be changed by calling this API. A valid Partner Secret may contain upper and lowercase characters, numbers, and the characters !, @, #, $, %, &amp;, *, _, -, +. It must include at least one number and at least one letter, and its length should be between 12 and 255 characters.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:PUT_ModifyPartnerSecret_InputMessage" />
      <output message="wsdl:PUT_ModifyPartnerSecret_OutputMessage">
        <documentation>The Partner Secret was successfully updated</documentation>
      </output>
      <fault name="PUT_ModifyPartnerSecret_400" message="wsdl:PUT_ModifyPartnerSecret_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="PUT_ModifyPartnerSecret_401" message="wsdl:PUT_ModifyPartnerSecret_401">
        <documentation>The request lacks valid authentication credentials. Check Partner ID, Partner Secret or Finicity-App-Key.</documentation>
      </fault>
    </operation>
    <operation name="POST_GenerateBalanceAnalytics">
      <documentation>Balance Analytics for Business analyzes bank balances over time to report metrics and identify behavior that may indicate risk.

Calculated metrics include:
* Current/available account balances
* Minimum/maximum/average account balances over the requested time
  period and broken down by month

* Daily ending balance of accounts for each day in the requested time
  period

* Propensity of the customer's account balances to increase week over
  week

* Number of days in the requested time period ending with a negative
  balance


This version of the API is intended for piloting and integration testing your application with the Balance Analytics product. It does not adhere to FCRA requirements, and should not be used for production/lending purposes. See _Generate Balance Analytics - FCRA_ for the FCRA compliant version of this API.

A successful call to this API will generate analytics and store a report within Finicity. The report can be retrieved via _Get Balance Analytics Report_ (operation: _GetObbAnalyticsReport_).

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:POST_GenerateBalanceAnalytics_InputMessage" />
      <output message="wsdl:POST_GenerateBalanceAnalytics_OutputMessage">
        <documentation>Response given when balance analytics were generated successfully, providing the caller with a report ID which can be used to retrieve the report as JSON or a PDF.</documentation>
      </output>
      <fault name="POST_GenerateBalanceAnalytics_400" message="wsdl:POST_GenerateBalanceAnalytics_400">
        <documentation>A bad request was provided</documentation>
      </fault>
      <fault name="POST_GenerateBalanceAnalytics_401" message="wsdl:POST_GenerateBalanceAnalytics_401">
        <documentation>Unauthorized request</documentation>
      </fault>
      <fault name="POST_GenerateBalanceAnalytics_403" message="wsdl:POST_GenerateBalanceAnalytics_403">
        <documentation>Access forbidden</documentation>
      </fault>
      <fault name="POST_GenerateBalanceAnalytics_404" message="wsdl:POST_GenerateBalanceAnalytics_404">
        <documentation>Resource not found</documentation>
      </fault>
      <fault name="POST_GenerateBalanceAnalytics_409" message="wsdl:POST_GenerateBalanceAnalytics_409">
        <documentation>Resource conflict</documentation>
      </fault>
    </operation>
    <operation name="POST_GenerateBalanceAnalyticsFcra">
      <documentation>Balance Analytics for Business analyzes bank balances over time to report metrics and identify behavior that may indicate risk.

Calculated metrics include:
* Current/available account balances
* Minimum/maximum/average account balances over the requested time
  period and broken down by month

* Daily ending balance of accounts for each day in the requested time
  period

* Propensity of the customer's account balances to increase week over
  week

* Number of days in the requested time period ending with a negative
  balance


This version of the API is intended for production use. It maintains and enforces all compliance with FCRA rules and requirements.

*Note:* this is a premium service, billable per every successful API call for non-testing customers.

A successful call to this API will generate analytics and store a report within Finicity. The report can be retrieved via _Get Balance Analytics Report - FCRA_ (operation: _GetObbAnalyticsReportFCRA_).

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:POST_GenerateBalanceAnalyticsFcra_InputMessage" />
      <output message="wsdl:POST_GenerateBalanceAnalyticsFcra_OutputMessage">
        <documentation>Response given when balance analytics (FCRA) were generated successfully, providing the caller with a report ID which can be used to retrieve the report as JSON or a PDF.</documentation>
      </output>
      <fault name="POST_GenerateBalanceAnalyticsFcra_400" message="wsdl:POST_GenerateBalanceAnalyticsFcra_400">
        <documentation>A bad request was provided</documentation>
      </fault>
      <fault name="POST_GenerateBalanceAnalyticsFcra_401" message="wsdl:POST_GenerateBalanceAnalyticsFcra_401">
        <documentation>Unauthorized request</documentation>
      </fault>
      <fault name="POST_GenerateBalanceAnalyticsFcra_403" message="wsdl:POST_GenerateBalanceAnalyticsFcra_403">
        <documentation>Access forbidden</documentation>
      </fault>
      <fault name="POST_GenerateBalanceAnalyticsFcra_404" message="wsdl:POST_GenerateBalanceAnalyticsFcra_404">
        <documentation>Resource not found</documentation>
      </fault>
      <fault name="POST_GenerateBalanceAnalyticsFcra_409" message="wsdl:POST_GenerateBalanceAnalyticsFcra_409">
        <documentation>Resource conflict</documentation>
      </fault>
    </operation>
    <operation name="GET_GetObbAnalyticsReport">
      <documentation>Retrieve the report saved by _Generate Balance Analytics_ or _Generate Cash Flow Analytics_. Requires the report ID generated by the previous call.

Report data can either be retrieved as a JSON document or PDF file.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:GET_GetObbAnalyticsReport_InputMessage" />
      <output message="wsdl:GET_GetObbAnalyticsReport_OutputMessage">
        <documentation>OBB Analytics report data as JSON or PDF</documentation>
      </output>
      <fault name="GET_GetObbAnalyticsReport_404" message="wsdl:GET_GetObbAnalyticsReport_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="GET_GetObbAnalyticsReportFcra">
      <documentation>Retrieve the report saved by _Generate Balance Analytics - FCRA_ or _Generate Cash Flow Analytics - FCRA_. Requires the report ID generated by the previous call.

Report data can either be retrieved as a JSON document or PDF file.

*Note:* this is a premium service, billable per every successful API call for non-testing customers.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:GET_GetObbAnalyticsReportFcra_InputMessage" />
      <output message="wsdl:GET_GetObbAnalyticsReportFcra_OutputMessage">
        <documentation>OBB Analytics FCRA report data as JSON or PDF</documentation>
      </output>
      <fault name="GET_GetObbAnalyticsReportFcra_404" message="wsdl:GET_GetObbAnalyticsReportFcra_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="GET_GetCustomerAccountStatement">
      <documentation>Retrieve the customer's bank statements in PDF format. Up to 24 months of history is available depending on the financial institution. Since this is a premium service, charges incur per each successful statement retrieved. 

For certified financial institutions, statements are available for the following account types:
* Checking
* Savings
* Money market
* CDs
* Investments
* Mortgage
* Credit cards
* Loans
* Line of credit
* Student Loans

Note: setting the timeout to 180 seconds is recommended to allow enough time for a response.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:GET_GetCustomerAccountStatement_InputMessage" />
      <output message="wsdl:GET_GetCustomerAccountStatement_OutputMessage">
        <documentation>The statement was successfully downloaded as a PDF file</documentation>
      </output>
      <fault name="GET_GetCustomerAccountStatement_400" message="wsdl:GET_GetCustomerAccountStatement_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="GET_GetCustomerAccountStatement_401" message="wsdl:GET_GetCustomerAccountStatement_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="GET_GetCustomerAccountStatement_404" message="wsdl:GET_GetCustomerAccountStatement_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="POST_GenerateStatementReport">
      <documentation>Generate a Statement Report report for the given accounts under the given customer.

This is a premium service. A billable event will be created upon the successful generation of the Statement Report. 

Before calling this API, a consumer must be created for the given customer ID (see Consumers APIs).

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:POST_GenerateStatementReport_InputMessage" />
      <output message="wsdl:POST_GenerateStatementReport_OutputMessage">
        <documentation>The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.</documentation>
      </output>
      <fault name="POST_GenerateStatementReport_400" message="wsdl:POST_GenerateStatementReport_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="POST_GenerateStatementReport_401" message="wsdl:POST_GenerateStatementReport_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="POST_GenerateStatementReport_404" message="wsdl:POST_GenerateStatementReport_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="POST_GenerateCashFlowBusinessReport">
      <documentation>Generate a Cash Flow Report (Business) report for all checking and savings under the given customer. This service retrieves up to two years of transaction history for the given account. It then uses this information to generate the CFR report. A consumer is not required to generate this report.

This report is not provided under FCRA rules, and this report is not available in the Finicity Consumer Portal for the borrower to view.

If no account type of checking or savings is found, the service will return HTTP 400 Bad Request.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:POST_GenerateCashFlowBusinessReport_InputMessage" />
      <output message="wsdl:POST_GenerateCashFlowBusinessReport_OutputMessage">
        <documentation>The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.</documentation>
      </output>
      <fault name="POST_GenerateCashFlowBusinessReport_400" message="wsdl:POST_GenerateCashFlowBusinessReport_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="POST_GenerateCashFlowBusinessReport_401" message="wsdl:POST_GenerateCashFlowBusinessReport_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="POST_GenerateCashFlowBusinessReport_404" message="wsdl:POST_GenerateCashFlowBusinessReport_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="POST_GenerateCashFlowPersonalReport">
      <documentation>Generate a Cash Flow Report (Personal) report for all checking and savings under the given customer. This service retrieves up to two years of transaction history for the given account. It then uses this information to generate the CFR report.

This report is provided under FCRA rules, with Finicity acting as the CRA (Consumer Reporting Agency). If an individual account is included in the report - for example, with an individual acting as an personal guarantor on the loan - then this version of the report should be used. In case of an adverse action on the loan where the decision was based on this report, then the borrower can be referred to the [Finicity Consumer Portal](https://consumer.finicityreports.com) where they can view this report and submit a dispute if they feel any information in this report is inaccurate.

Before calling this API, a consumer must be created for the given customer ID (see Consumers APIs).

If no account type of checking or savings is found, the service will return HTTP 400 Bad Request.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:POST_GenerateCashFlowPersonalReport_InputMessage" />
      <output message="wsdl:POST_GenerateCashFlowPersonalReport_OutputMessage">
        <documentation>The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.</documentation>
      </output>
      <fault name="POST_GenerateCashFlowPersonalReport_400" message="wsdl:POST_GenerateCashFlowPersonalReport_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="POST_GenerateCashFlowPersonalReport_401" message="wsdl:POST_GenerateCashFlowPersonalReport_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="POST_GenerateCashFlowPersonalReport_404" message="wsdl:POST_GenerateCashFlowPersonalReport_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="POST_GenerateCashFlowAnalytics">
      <documentation>Cash Flow Analytics for Business analyzes cash flow over time to report metrics and identify behavior that may indicate risk.

Calculated metrics include:
* Average transaction value by month over the requested time period
* Net cash flow over the requested time period and broken down by month
* Count and report of weeks in the requested time period where there
  were zero transactions posted to the customer's accounts

* Minimum/maximum/average/sum/count of deposits by month
* Minimum/maximum/average/sum/count of withdrawals by month
* Estimated amount of deposits that can be classified as business
  revenue

* Number of transactions posted incurring a non-sufficient funds (NSF)
  fee, and net amount charged in NSF fees


This version of the API is intended for piloting and integration testing your application with the Cash Flow Analytics product. It does not adhere to FCRA requirements, and should not be used for production/lending purposes. See _Generate Cash Flow Analytics - FCRA_ for the FCRA compliant version of this API.

A successful call to this API will generate analytics and store a report within Finicity. The report can be retrieved via _Get Cash Flow Analytics Report_ (operation: _GetCashFlowAnalyticsReport_).

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:POST_GenerateCashFlowAnalytics_InputMessage" />
      <output message="wsdl:POST_GenerateCashFlowAnalytics_OutputMessage">
        <documentation>Response given when cash flow analytics were generated successfully, providing the caller with a report ID which can be used to retrieve the report as JSON or a PDF.</documentation>
      </output>
      <fault name="POST_GenerateCashFlowAnalytics_400" message="wsdl:POST_GenerateCashFlowAnalytics_400">
        <documentation>A bad request was provided</documentation>
      </fault>
      <fault name="POST_GenerateCashFlowAnalytics_401" message="wsdl:POST_GenerateCashFlowAnalytics_401">
        <documentation>Unauthorized request</documentation>
      </fault>
      <fault name="POST_GenerateCashFlowAnalytics_403" message="wsdl:POST_GenerateCashFlowAnalytics_403">
        <documentation>Access forbidden</documentation>
      </fault>
      <fault name="POST_GenerateCashFlowAnalytics_404" message="wsdl:POST_GenerateCashFlowAnalytics_404">
        <documentation>Resource not found</documentation>
      </fault>
      <fault name="POST_GenerateCashFlowAnalytics_409" message="wsdl:POST_GenerateCashFlowAnalytics_409">
        <documentation>Resource conflict</documentation>
      </fault>
    </operation>
    <operation name="POST_GenerateCashFlowAnalyticsFcra">
      <documentation>Cash Flow Analytics for Business analyzes cash flow over time to report metrics and identify behavior that may indicate risk.

Calculated metrics include:
* Average transaction value by month over the requested time period
* Net cash flow over the requested time period and broken down by month
* Count and report of weeks in the requested time period where there
  were zero transactions posted to the customer's accounts

* Minimum/maximum/average/sum/count of deposits by month
* Minimum/maximum/average/sum/count of withdrawals by month
* Estimated amount of deposits that can be classified as business
  revenue

* Number of transactions posted incurring a non-sufficient funds (NSF)
  fee, and net amount charged in NSF fees


This version of the API is intended for production use. It maintains and enforces all compliance with FCRA rules and requirements.

*Note:* this is a premium service, billable per every successful API call for non-testing customers.

A successful call to this API will generate analytics and store a report within Finicity. The report can be retrieved via _Get Cash Flow Analytics Report - FCRA_ (operation: _GetCashFlowAnalyticsReportFCRA_).

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:POST_GenerateCashFlowAnalyticsFcra_InputMessage" />
      <output message="wsdl:POST_GenerateCashFlowAnalyticsFcra_OutputMessage">
        <documentation>Response given when cash flow analytics (FCRA) were generated successfully, providing the caller with a report ID which can be used to retrieve the report as JSON or a PDF.</documentation>
      </output>
      <fault name="POST_GenerateCashFlowAnalyticsFcra_400" message="wsdl:POST_GenerateCashFlowAnalyticsFcra_400">
        <documentation>A bad request was provided</documentation>
      </fault>
      <fault name="POST_GenerateCashFlowAnalyticsFcra_401" message="wsdl:POST_GenerateCashFlowAnalyticsFcra_401">
        <documentation>Unauthorized request</documentation>
      </fault>
      <fault name="POST_GenerateCashFlowAnalyticsFcra_403" message="wsdl:POST_GenerateCashFlowAnalyticsFcra_403">
        <documentation>Access forbidden</documentation>
      </fault>
      <fault name="POST_GenerateCashFlowAnalyticsFcra_404" message="wsdl:POST_GenerateCashFlowAnalyticsFcra_404">
        <documentation>Resource not found</documentation>
      </fault>
      <fault name="POST_GenerateCashFlowAnalyticsFcra_409" message="wsdl:POST_GenerateCashFlowAnalyticsFcra_409">
        <documentation>Resource conflict</documentation>
      </fault>
    </operation>
    <operation name="POST_GenerateConnectUrl">
      <documentation>Generate a Connect 2.0 URL link to add within your own applications.

In option, use the `experience` parameter to call Connect (per session) in the body of the request. Configure the `experience` parameter to change the brand color, logo, icon, which credit decisioning report to generate when the Connect application completes, and more.

Note: contact your Sales Account Team to set up the `experience` parameter.

MVS Developers: You can pre-populate the consumer's SSN on the "Find employment records" page at the beginning of the MVS payroll app. Pass the SSN value for the consumer in the body of the request call.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:POST_GenerateConnectUrl_InputMessage" />
      <output message="wsdl:POST_GenerateConnectUrl_OutputMessage">
        <documentation>The URL link was successfully generated</documentation>
      </output>
      <fault name="POST_GenerateConnectUrl_400" message="wsdl:POST_GenerateConnectUrl_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="POST_GenerateConnectUrl_401" message="wsdl:POST_GenerateConnectUrl_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
    </operation>
    <operation name="POST_GenerateLiteConnectUrl">
      <documentation>Connect Lite is a variation of Connect Full (`POST /connect/v2/generate`), which has a limited set of features.
* Sign in, user's credentials, and Multi-Factor Authentication (MFA)
* No user account management

The Connect Web SDK isn't a requirement when using Connect lite. However, if you want to use the SDK events, routes, and user events, then you must integrate with the Connect Web SDK.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:POST_GenerateLiteConnectUrl_InputMessage" />
      <output message="wsdl:POST_GenerateLiteConnectUrl_OutputMessage">
        <documentation>The URL link was successfully generated</documentation>
      </output>
      <fault name="POST_GenerateLiteConnectUrl_400" message="wsdl:POST_GenerateLiteConnectUrl_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="POST_GenerateLiteConnectUrl_401" message="wsdl:POST_GenerateLiteConnectUrl_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
    </operation>
    <operation name="POST_GenerateFixConnectUrl">
      <documentation>Use the Connect Fix API when the following conditions occur:
* The connection to the user's financial institution is lost
* The user's credentials were updated (for any number of reasons)
* The user's MFA challenge has expired

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:POST_GenerateFixConnectUrl_InputMessage" />
      <output message="wsdl:POST_GenerateFixConnectUrl_OutputMessage">
        <documentation>The URL link was successfully generated</documentation>
      </output>
      <fault name="POST_GenerateFixConnectUrl_400" message="wsdl:POST_GenerateFixConnectUrl_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="POST_GenerateFixConnectUrl_401" message="wsdl:POST_GenerateFixConnectUrl_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="POST_GenerateFixConnectUrl_404" message="wsdl:POST_GenerateFixConnectUrl_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="POST_SendConnectEmail">
      <documentation>Same as Connect Full (`POST /connect/v2/generate`) but send a Connect email to a consumer.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:POST_SendConnectEmail_InputMessage" />
      <output message="wsdl:POST_SendConnectEmail_OutputMessage">
        <documentation>The URL link was successfully generated and the email sent</documentation>
      </output>
      <fault name="POST_SendConnectEmail_400" message="wsdl:POST_SendConnectEmail_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="POST_SendConnectEmail_401" message="wsdl:POST_SendConnectEmail_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
    </operation>
    <operation name="POST_GenerateJointBorrowerConnectUrl">
      <documentation>Same as Connect Full (`POST /connect/v2/generate`) but for joint borrowers.

MVS prompts both the primary and joint borrower to enter each of their financial, payroll, and paystub information in the same Connect session.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:POST_GenerateJointBorrowerConnectUrl_InputMessage" />
      <output message="wsdl:POST_GenerateJointBorrowerConnectUrl_OutputMessage">
        <documentation>The URL link was successfully generated</documentation>
      </output>
      <fault name="POST_GenerateJointBorrowerConnectUrl_400" message="wsdl:POST_GenerateJointBorrowerConnectUrl_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="POST_GenerateJointBorrowerConnectUrl_401" message="wsdl:POST_GenerateJointBorrowerConnectUrl_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
    </operation>
    <operation name="POST_SendJointBorrowerConnectEmail">
      <documentation>Same as Connect Joint Borrower (`POST /connect/v2/generate/jointBorrower`) but send a Connect email  to at least one of the joint borrower's email addresses. 

When the consumer opens the email, MVS prompts both the primary and joint borrower to enter each of their financial, payroll, and paystub information in the same Connect session.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:POST_SendJointBorrowerConnectEmail_InputMessage" />
      <output message="wsdl:POST_SendJointBorrowerConnectEmail_OutputMessage">
        <documentation>The URL link was successfully generated and the email sent</documentation>
      </output>
      <fault name="POST_SendJointBorrowerConnectEmail_400" message="wsdl:POST_SendJointBorrowerConnectEmail_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="POST_SendJointBorrowerConnectEmail_401" message="wsdl:POST_SendJointBorrowerConnectEmail_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
    </operation>
    <operation name="POST_CreateConsumer">
      <documentation>Create a consumer record associated with the given customer. A consumer persists as the owner of any reports that are generated, even after the original customer is deleted from the system.

A consumer must be created for the given customer before calling any of the Generate Report services.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:POST_CreateConsumer_InputMessage" />
      <output message="wsdl:POST_CreateConsumer_OutputMessage">
        <documentation>The consumer was successfully created</documentation>
      </output>
      <fault name="POST_CreateConsumer_400" message="wsdl:POST_CreateConsumer_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="POST_CreateConsumer_401" message="wsdl:POST_CreateConsumer_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="POST_CreateConsumer_404" message="wsdl:POST_CreateConsumer_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
      <fault name="POST_CreateConsumer_409" message="wsdl:POST_CreateConsumer_409">
        <documentation>The resource already exists</documentation>
      </fault>
    </operation>
    <operation name="GET_GetConsumerForCustomer">
      <documentation>Get the details of a consumer record by customer ID.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:GET_GetConsumerForCustomer_InputMessage" />
      <output message="wsdl:GET_GetConsumerForCustomer_OutputMessage">
        <documentation>The consumer was successfully retrieved</documentation>
      </output>
      <fault name="GET_GetConsumerForCustomer_400" message="wsdl:GET_GetConsumerForCustomer_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="GET_GetConsumerForCustomer_401" message="wsdl:GET_GetConsumerForCustomer_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="GET_GetConsumerForCustomer_404" message="wsdl:GET_GetConsumerForCustomer_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="GET_GetConsumer">
      <documentation>Get the details of a consumer record by consumer ID.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:GET_GetConsumer_InputMessage" />
      <output message="wsdl:GET_GetConsumer_OutputMessage">
        <documentation>The consumer was successfully retrieved</documentation>
      </output>
      <fault name="GET_GetConsumer_400" message="wsdl:GET_GetConsumer_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="GET_GetConsumer_401" message="wsdl:GET_GetConsumer_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="GET_GetConsumer_404" message="wsdl:GET_GetConsumer_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="PUT_ModifyConsumer">
      <documentation>Modify an existing consumer. All fields are required for a consumer record, but individual fields for this call are optional because fields that are not specified will be left unchanged.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:PUT_ModifyConsumer_InputMessage" />
      <output message="wsdl:PUT_ModifyConsumer_OutputMessage">
        <documentation>The consumer was successfully updated</documentation>
      </output>
      <fault name="PUT_ModifyConsumer_400" message="wsdl:PUT_ModifyConsumer_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="PUT_ModifyConsumer_401" message="wsdl:PUT_ModifyConsumer_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="PUT_ModifyConsumer_404" message="wsdl:PUT_ModifyConsumer_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="POST_AddTestingCustomer">
      <documentation>Enroll a testing customer ([Test Drive](https://signup.finicity.com/) accounts).

For using testing customers with FinBank OAuth, you must register a test application with your systems engineer or account manager. Then, use that testing `applicationId` when creating testing customers.

Testing Customers can access FinBank profiles (except "FinBank Billable" profiles), and cannot access live financial institutions.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:POST_AddTestingCustomer_InputMessage" />
      <output message="wsdl:POST_AddTestingCustomer_OutputMessage">
        <documentation>The customer was successfully created</documentation>
      </output>
      <fault name="POST_AddTestingCustomer_400" message="wsdl:POST_AddTestingCustomer_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="POST_AddTestingCustomer_401" message="wsdl:POST_AddTestingCustomer_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
    </operation>
    <operation name="POST_AddCustomer">
      <documentation>Enroll an active customer, which is the actual owner of one or more real-world accounts. This is a billable customer.

Active customers must use the "FinBank Billable" profiles for testing purposes. 

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:POST_AddCustomer_InputMessage" />
      <output message="wsdl:POST_AddCustomer_OutputMessage">
        <documentation>The customer was successfully created</documentation>
      </output>
      <fault name="POST_AddCustomer_400" message="wsdl:POST_AddCustomer_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="POST_AddCustomer_401" message="wsdl:POST_AddCustomer_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="POST_AddCustomer_429" message="wsdl:POST_AddCustomer_429">
        <documentation>The service can't accept more requests or is not available from the [Test Drive](https://signup.finicity.com/).</documentation>
      </fault>
    </operation>
    <operation name="GET_GetCustomers">
      <documentation>Find all customers enrolled by the current partner, where the search text is found in the customer's username or any combination of `firstName` and `lastName` fields. If no search text is provided, all customers will be returned.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:GET_GetCustomers_InputMessage" />
      <output message="wsdl:GET_GetCustomers_OutputMessage">
        <documentation>Customers were successfully retrieved</documentation>
      </output>
      <fault name="GET_GetCustomers_400" message="wsdl:GET_GetCustomers_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="GET_GetCustomers_401" message="wsdl:GET_GetCustomers_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
    </operation>
    <operation name="GET_GetCustomerWithAppData">
      <documentation>Retrieve a customer along with additional details about the OAuth application.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:GET_GetCustomerWithAppData_InputMessage" />
      <output message="wsdl:GET_GetCustomerWithAppData_OutputMessage">
        <documentation>The customer was successfully retrieved</documentation>
      </output>
      <fault name="GET_GetCustomerWithAppData_400" message="wsdl:GET_GetCustomerWithAppData_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="GET_GetCustomerWithAppData_401" message="wsdl:GET_GetCustomerWithAppData_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="GET_GetCustomerWithAppData_404" message="wsdl:GET_GetCustomerWithAppData_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="GET_GetCustomer">
      <documentation>Retrieve a customer by ID.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:GET_GetCustomer_InputMessage" />
      <output message="wsdl:GET_GetCustomer_OutputMessage">
        <documentation>The customer was successfully retrieved</documentation>
      </output>
      <fault name="GET_GetCustomer_400" message="wsdl:GET_GetCustomer_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="GET_GetCustomer_401" message="wsdl:GET_GetCustomer_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="GET_GetCustomer_404" message="wsdl:GET_GetCustomer_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="PUT_ModifyCustomer">
      <documentation>Modify an enrolled customer by ID.

You must specify either `firstName`, `lastName`, or both in the request.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:PUT_ModifyCustomer_InputMessage" />
      <output message="wsdl:PUT_ModifyCustomer_OutputMessage">
        <documentation>The customer was successfully updated</documentation>
      </output>
      <fault name="PUT_ModifyCustomer_400" message="wsdl:PUT_ModifyCustomer_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="PUT_ModifyCustomer_401" message="wsdl:PUT_ModifyCustomer_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="PUT_ModifyCustomer_404" message="wsdl:PUT_ModifyCustomer_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="DELETE_DeleteCustomer">
      <documentation>Completely remove a customer from the system. This will remove the customer and all associated accounts and transactions.

⚠️ Use this service carefully! It will not pause for confirmation before performing the operation!

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:DELETE_DeleteCustomer_InputMessage" />
      <output message="wsdl:DELETE_DeleteCustomer_OutputMessage">
        <documentation>The customer was successfully deleted</documentation>
      </output>
      <fault name="DELETE_DeleteCustomer_401" message="wsdl:DELETE_DeleteCustomer_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="DELETE_DeleteCustomer_404" message="wsdl:DELETE_DeleteCustomer_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="GET_GetCertifiedInstitutionsWithRSSD">
      <documentation>Search for certified financial institutions w/RSSD.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:GET_GetCertifiedInstitutionsWithRSSD_InputMessage" />
      <output message="wsdl:GET_GetCertifiedInstitutionsWithRSSD_OutputMessage">
        <documentation>Institutions were successfully retrieved</documentation>
      </output>
      <fault name="GET_GetCertifiedInstitutionsWithRSSD_400" message="wsdl:GET_GetCertifiedInstitutionsWithRSSD_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="GET_GetCertifiedInstitutionsWithRSSD_401" message="wsdl:GET_GetCertifiedInstitutionsWithRSSD_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
    </operation>
    <operation name="GET_GetInstitutions">
      <documentation>Search for financial institutions.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:GET_GetInstitutions_InputMessage" />
      <output message="wsdl:GET_GetInstitutions_OutputMessage">
        <documentation>Institutions were successfully retrieved</documentation>
      </output>
      <fault name="GET_GetInstitutions_400" message="wsdl:GET_GetInstitutions_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="GET_GetInstitutions_401" message="wsdl:GET_GetInstitutions_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
    </operation>
    <operation name="GET_GetCertifiedInstitutions">
      <documentation>Search for financial institutions by certified product.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:GET_GetCertifiedInstitutions_InputMessage" />
      <output message="wsdl:GET_GetCertifiedInstitutions_OutputMessage">
        <documentation>Institutions were successfully retrieved</documentation>
      </output>
      <fault name="GET_GetCertifiedInstitutions_400" message="wsdl:GET_GetCertifiedInstitutions_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="GET_GetCertifiedInstitutions_401" message="wsdl:GET_GetCertifiedInstitutions_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
    </operation>
    <operation name="GET_GetInstitution">
      <documentation>Get financial institution details by ID.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:GET_GetInstitution_InputMessage" />
      <output message="wsdl:GET_GetInstitution_OutputMessage">
        <documentation>Institution was successfully retrieved</documentation>
      </output>
      <fault name="GET_GetInstitution_400" message="wsdl:GET_GetInstitution_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="GET_GetInstitution_401" message="wsdl:GET_GetInstitution_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="GET_GetInstitution_404" message="wsdl:GET_GetInstitution_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="GET_GetInstitutionBranding">
      <documentation>Return the branding information for a financial institution.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:GET_GetInstitutionBranding_InputMessage" />
      <output message="wsdl:GET_GetInstitutionBranding_OutputMessage">
        <documentation>Institution branding was successfully retrieved</documentation>
      </output>
      <fault name="GET_GetInstitutionBranding_400" message="wsdl:GET_GetInstitutionBranding_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="GET_GetInstitutionBranding_401" message="wsdl:GET_GetInstitutionBranding_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="GET_GetInstitutionBranding_404" message="wsdl:GET_GetInstitutionBranding_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="POST_StoreCustomerPayStatement">
      <documentation>Upload pay statements for a customer.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:POST_StoreCustomerPayStatement_InputMessage" />
      <output message="wsdl:POST_StoreCustomerPayStatement_OutputMessage">
        <documentation>The pay statement was successfully uploaded</documentation>
      </output>
      <fault name="POST_StoreCustomerPayStatement_400" message="wsdl:POST_StoreCustomerPayStatement_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="POST_StoreCustomerPayStatement_401" message="wsdl:POST_StoreCustomerPayStatement_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="POST_StoreCustomerPayStatement_404" message="wsdl:POST_StoreCustomerPayStatement_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="GET_GetAccountOwner">
      <documentation>Retrieve the names and addresses of the account owner from a financial institution.

Note: this is a premium service, billable per every successful API call.

This service retrieves account data from the institution. This usually returns quickly, but in some scenarios may take a few minutes to complete. In the event of a timeout condition, retry the call.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:GET_GetAccountOwner_InputMessage" />
      <output message="wsdl:GET_GetAccountOwner_OutputMessage">
        <documentation>The account owner was successfully retrieved</documentation>
      </output>
      <fault name="GET_GetAccountOwner_400" message="wsdl:GET_GetAccountOwner_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="GET_GetAccountOwner_401" message="wsdl:GET_GetAccountOwner_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="GET_GetAccountOwner_404" message="wsdl:GET_GetAccountOwner_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="GET_GetLoanPaymentDetails">
      <documentation>Return the loan payment details of the customer for a loan-type account.

Note: this is a premium service, billable per every successful API call.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:GET_GetLoanPaymentDetails_InputMessage" />
      <output message="wsdl:GET_GetLoanPaymentDetails_OutputMessage">
        <documentation>The loan payment details were successfully retrieved</documentation>
      </output>
      <fault name="GET_GetLoanPaymentDetails_400" message="wsdl:GET_GetLoanPaymentDetails_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="GET_GetLoanPaymentDetails_401" message="wsdl:GET_GetLoanPaymentDetails_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="GET_GetLoanPaymentDetails_404" message="wsdl:GET_GetLoanPaymentDetails_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="GET_GetAccountACHDetails">
      <documentation>Return the real account number and routing number details for an ACH payment.

Note: this is a premium service, billable per every successful API call.

_Supported account types_: "checking", "savings", "moneyMarket", "loan"

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:GET_GetAccountACHDetails_InputMessage" />
      <output message="wsdl:GET_GetAccountACHDetails_OutputMessage">
        <documentation>Account ACH details were successfully retrieved</documentation>
      </output>
      <fault name="GET_GetAccountACHDetails_400" message="wsdl:GET_GetAccountACHDetails_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="GET_GetAccountACHDetails_401" message="wsdl:GET_GetAccountACHDetails_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="GET_GetAccountACHDetails_404" message="wsdl:GET_GetAccountACHDetails_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="GET_GetAvailableBalanceLive">
      <documentation>Retrieve the available and cleared account balances for a single account in real-time directly from a financial institution.

Note: this is a premium service, billable per every successful API call.

_Supported account types_: "checking", "savings", "moneyMarket", "cd"

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:GET_GetAvailableBalanceLive_InputMessage" />
      <output message="wsdl:GET_GetAvailableBalanceLive_OutputMessage">
        <documentation>The live balance was successfully retrieved</documentation>
      </output>
      <fault name="GET_GetAvailableBalanceLive_400" message="wsdl:GET_GetAvailableBalanceLive_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="GET_GetAvailableBalanceLive_401" message="wsdl:GET_GetAvailableBalanceLive_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="GET_GetAvailableBalanceLive_404" message="wsdl:GET_GetAvailableBalanceLive_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="GET_GetAvailableBalance">
      <documentation>Retrieve the latest cached available and cleared account balances for a customer. Since we update and store balances throughout the day, this is the most accurate balance information available when a connection to a financial institution is unavailable or when a faster response is needed. Only deposit account types are supported: Checking, Savings, Money Market, and CD.

Note: this is a premium service, billable per every successful API call. Enrollment is required.        

_Supported account types_: "checking", "savings", "moneyMarket", "cd"

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:GET_GetAvailableBalance_InputMessage" />
      <output message="wsdl:GET_GetAvailableBalance_OutputMessage">
        <documentation>The balance was successfully retrieved</documentation>
      </output>
      <fault name="GET_GetAvailableBalance_400" message="wsdl:GET_GetAvailableBalance_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="GET_GetAvailableBalance_401" message="wsdl:GET_GetAvailableBalance_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="GET_GetAvailableBalance_404" message="wsdl:GET_GetAvailableBalance_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="GET_GetPortfolioByCustomer">
      <documentation>Return a portfolio of most recently generated reports for each report type for the given customer. If there are multiple reports that were generated for a report type (VOA, VOI, etc.), only the most recently generated report for the type will be returned.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
</documentation>
      <input message="wsdl:GET_GetPortfolioByCustomer_InputMessage" />
      <output message="wsdl:GET_GetPortfolioByCustomer_OutputMessage">
        <documentation>The portfolio was successfully retrieved</documentation>
      </output>
      <fault name="GET_GetPortfolioByCustomer_400" message="wsdl:GET_GetPortfolioByCustomer_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="GET_GetPortfolioByCustomer_401" message="wsdl:GET_GetPortfolioByCustomer_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="GET_GetPortfolioByCustomer_404" message="wsdl:GET_GetPortfolioByCustomer_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="GET_GetPortfolioByConsumer">
      <documentation>Return a portfolio of most recently generated reports for each report type for a given consumer. If there are multiple reports that were generated for a report type (VOA, VOI, etc.), only the most recently generated report for the type will be returned.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:GET_GetPortfolioByConsumer_InputMessage" />
      <output message="wsdl:GET_GetPortfolioByConsumer_OutputMessage">
        <documentation>The portfolio was successfully retrieved</documentation>
      </output>
      <fault name="GET_GetPortfolioByConsumer_400" message="wsdl:GET_GetPortfolioByConsumer_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="GET_GetPortfolioByConsumer_401" message="wsdl:GET_GetPortfolioByConsumer_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="GET_GetPortfolioByConsumer_404" message="wsdl:GET_GetPortfolioByConsumer_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="GET_GetReportByCustomer">
      <documentation>Get a report that has been generated by a previous call to one of the Generate Report services.

The report's `status` field contains "inProgress", "failure", or "success". If the status shows "inProgress", the client app should wait 20 seconds and then call this API again.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:GET_GetReportByCustomer_InputMessage" />
      <output message="wsdl:GET_GetReportByCustomer_OutputMessage">
        <documentation>The report was successfully retrieved</documentation>
      </output>
      <fault name="GET_GetReportByCustomer_400" message="wsdl:GET_GetReportByCustomer_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="GET_GetReportByCustomer_401" message="wsdl:GET_GetReportByCustomer_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="GET_GetReportByCustomer_404" message="wsdl:GET_GetReportByCustomer_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="GET_GetReportByConsumer">
      <documentation>Get a report that has been generated by a previous call to one of the Generate Report services.

The report's `status` field contains "inProgress", "failure", or "success". If the status shows "inProgress", the client app should wait 20 seconds and then call this API again.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:GET_GetReportByConsumer_InputMessage" />
      <output message="wsdl:GET_GetReportByConsumer_OutputMessage">
        <documentation>The report was successfully retrieved</documentation>
      </output>
      <fault name="GET_GetReportByConsumer_400" message="wsdl:GET_GetReportByConsumer_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="GET_GetReportByConsumer_401" message="wsdl:GET_GetReportByConsumer_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="GET_GetReportByConsumer_404" message="wsdl:GET_GetReportByConsumer_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="GET_GetReportsByCustomerId">
      <documentation>Get all reports that have been generated by previous calls to Generate Report services for the given customer.

The `status` fields in the returned list contain "inProgress", "failure", or "success". If the status shows "inProgress", the client app should wait 20 seconds and then call this API again.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:GET_GetReportsByCustomerId_InputMessage" />
      <output message="wsdl:GET_GetReportsByCustomerId_OutputMessage">
        <documentation>The reports summaries were successfully retrieved</documentation>
      </output>
      <fault name="GET_GetReportsByCustomerId_400" message="wsdl:GET_GetReportsByCustomerId_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="GET_GetReportsByCustomerId_401" message="wsdl:GET_GetReportsByCustomerId_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="GET_GetReportsByCustomerId_404" message="wsdl:GET_GetReportsByCustomerId_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
      <fault name="GET_GetReportsByCustomerId_429" message="wsdl:GET_GetReportsByCustomerId_429">
        <documentation>The service can't accept more requests or is not available from the [Test Drive](https://signup.finicity.com/).</documentation>
      </fault>
    </operation>
    <operation name="GET_GetReportsByConsumerId">
      <documentation>Get all reports that have been generated by previous calls to Generate Report services for the given consumer.

The `status` fields in the returned list contain "inProgress", "failure", or "success". If the status shows "inProgress", the client app should wait 20 seconds and then call this API again.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:GET_GetReportsByConsumerId_InputMessage" />
      <output message="wsdl:GET_GetReportsByConsumerId_OutputMessage">
        <documentation>The reports summaries were successfully retrieved</documentation>
      </output>
      <fault name="GET_GetReportsByConsumerId_400" message="wsdl:GET_GetReportsByConsumerId_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="GET_GetReportsByConsumerId_401" message="wsdl:GET_GetReportsByConsumerId_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="GET_GetReportsByConsumerId_404" message="wsdl:GET_GetReportsByConsumerId_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
      <fault name="GET_GetReportsByConsumerId_429" message="wsdl:GET_GetReportsByConsumerId_429">
        <documentation>The service can't accept more requests or is not available from the [Test Drive](https://signup.finicity.com/).</documentation>
      </fault>
    </operation>
    <operation name="POST_LoadHistoricTransactionsForCustomerAccount">
      <documentation>Connect to the account's financial institution and load up to 24 months of historic transactions for the account. Length of history varies by institution.

This is a premium service. The billable event is a call to this service specifying a customer ID that has not been seen before by this service. (If this service is called multiple times with the same customer ID, to load transactions from multiple accounts, only one billable event has occurred.)

The recommended timeout setting for this request is 180 seconds in order to receive a response. However, you can terminate the connection after making the call the operation will still complete. You will have to pull the account records to check for an updated aggregation attempt date to know when the refresh is complete.

The date range sent to the institution is calculated from the account's `createdDate`. This means that calling this service a second time for the same account normally will not add any new transactions for the account. For this reason, a second call to this service for a known account ID will usually return immediately.

In a few specific scenarios, it may be desirable to force a second connection to the institution for a known account ID. Some examples are:

* The institution's policy has changed, making more transactions available
* Finicity has now added a longer transaction history support for the institution
* The first call encountered an error, and the resulting Aggregation Ticket has now been fixed by the Finicity Support Team

In these cases, the POST request can contain the parameter `force=true` in the request body to force the second connection.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:POST_LoadHistoricTransactionsForCustomerAccount_InputMessage" />
      <output message="wsdl:POST_LoadHistoricTransactionsForCustomerAccount_OutputMessage">
        <documentation>The response contains an MFA challenge in XML or JSON format. Contact your Account Manager or Systems Engineers to determine the best route to handle this error.</documentation>
      </output>
      <fault name="POST_LoadHistoricTransactionsForCustomerAccount_400" message="wsdl:POST_LoadHistoricTransactionsForCustomerAccount_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="POST_LoadHistoricTransactionsForCustomerAccount_401" message="wsdl:POST_LoadHistoricTransactionsForCustomerAccount_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="POST_LoadHistoricTransactionsForCustomerAccount_404" message="wsdl:POST_LoadHistoricTransactionsForCustomerAccount_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="GET_GetAllCustomerTransactions">
      <documentation>Get all transactions available for this customer within the given date range, across all accounts. This service supports paging and sorting by `transactionDate` (or `postedDate` if no transaction date is provided), with a maximum of 1000 transactions per request.

Standard consumer aggregation provides up to 180 days of transactions prior to the date each account was added to the Finicity system. To access older transactions, you must first call the service Load Historic Transactions for Account.

There is no limit for the size of the window between `fromDate` and `toDate`, however, the maximum number of transactions returned on one page is 1000.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:GET_GetAllCustomerTransactions_InputMessage" />
      <output message="wsdl:GET_GetAllCustomerTransactions_OutputMessage">
        <documentation>The transactions were successfully retrieved</documentation>
      </output>
      <fault name="GET_GetAllCustomerTransactions_400" message="wsdl:GET_GetAllCustomerTransactions_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="GET_GetAllCustomerTransactions_401" message="wsdl:GET_GetAllCustomerTransactions_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="GET_GetAllCustomerTransactions_404" message="wsdl:GET_GetAllCustomerTransactions_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="GET_GetCustomerTransaction">
      <documentation>Get details for the given transaction.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:GET_GetCustomerTransaction_InputMessage" />
      <output message="wsdl:GET_GetCustomerTransaction_OutputMessage">
        <documentation>The transaction was successfully retrieved</documentation>
      </output>
      <fault name="GET_GetCustomerTransaction_400" message="wsdl:GET_GetCustomerTransaction_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="GET_GetCustomerTransaction_401" message="wsdl:GET_GetCustomerTransaction_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="GET_GetCustomerTransaction_404" message="wsdl:GET_GetCustomerTransaction_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="GET_GetCustomerAccountTransactions">
      <documentation>Get all transactions available for this customer account within the given date range. This service supports paging and sorting by `transactionDate` (or `postedDate` if no transaction date is provided), with a maximum of 1000 transactions per request.

Standard consumer aggregation provides up to 180 days of transactions prior to the date each account was added to the Finicity system. To access older transactions, you must first call the Cash Flow Verification service Load Historic Transactions for Account.

There is no limit for the size of the window between `fromDate` and `toDate`, however, the maximum number of transactions returned on one page is 1000.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:GET_GetCustomerAccountTransactions_InputMessage" />
      <output message="wsdl:GET_GetCustomerAccountTransactions_OutputMessage">
        <documentation>The transactions were successfully retrieved</documentation>
      </output>
      <fault name="GET_GetCustomerAccountTransactions_400" message="wsdl:GET_GetCustomerAccountTransactions_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="GET_GetCustomerAccountTransactions_401" message="wsdl:GET_GetCustomerAccountTransactions_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="GET_GetCustomerAccountTransactions_404" message="wsdl:GET_GetCustomerAccountTransactions_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="POST_GenerateTransactionsReport">
      <documentation>Generate a Transaction Report for the given accounts under the given customer. This service retrieves up to 24 months of transaction history for the given customer. It then uses this information to generate the Transaction Report.

This is a premium service. A billable event will be created upon the successful generation of the Transactions Report. 

Before calling this API, a consumer must be created for the given customer ID (see Consumers APIs).

There cannot be more than 24 months between `fromDate` and `toDate`.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:POST_GenerateTransactionsReport_InputMessage" />
      <output message="wsdl:POST_GenerateTransactionsReport_OutputMessage">
        <documentation>The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.</documentation>
      </output>
      <fault name="POST_GenerateTransactionsReport_400" message="wsdl:POST_GenerateTransactionsReport_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="POST_GenerateTransactionsReport_401" message="wsdl:POST_GenerateTransactionsReport_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="POST_GenerateTransactionsReport_404" message="wsdl:POST_GenerateTransactionsReport_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="POST_SubscribeToTxPushNotifications">
      <documentation>Register a client app's TxPush Listener to receive TxPush notifications related to the given account.

Each call to this service will return two records, one with class account and one with class transaction. Account events are sent when values change in the account's fields (such as `balance` or `interestRate`). Transaction events are sent whenever a new transaction is posted for the account. For institutions that do not provide TxPush services, notifications are sent as soon as Finicity finds a new transaction or new account data through regular aggregation processes.

The listener's URL must be secure (HTTPS) for any real-world account. In addition, the client's TxPush Listener will need to be verified. HTTP and HTTPS connections are only allowed on the standard ports 80 (HTTP) and 443 (HTTPS). The use of other ports will result with the call failing.

For additional details on this process, see [TxPush Listener Service](https://docs.finicity.com/txpush-listener-service/).

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:POST_SubscribeToTxPushNotifications_InputMessage" />
      <output message="wsdl:POST_SubscribeToTxPushNotifications_OutputMessage">
        <documentation>The subscription was successfully created</documentation>
      </output>
      <fault name="POST_SubscribeToTxPushNotifications_400" message="wsdl:POST_SubscribeToTxPushNotifications_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="POST_SubscribeToTxPushNotifications_401" message="wsdl:POST_SubscribeToTxPushNotifications_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="POST_SubscribeToTxPushNotifications_404" message="wsdl:POST_SubscribeToTxPushNotifications_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="DELETE_DisableTxPushNotifications">
      <documentation>Delete all TxPush subscriptions with their notifications for the given account. No more notifications will be sent for account or transaction events.

For additional details on this process, see [TxPush Listener Service](https://docs.finicity.com/txpush-listener-service/).

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:DELETE_DisableTxPushNotifications_InputMessage" />
      <output message="wsdl:DELETE_DisableTxPushNotifications_OutputMessage">
        <documentation>Subscriptions were successfully deleted for the given account</documentation>
      </output>
      <fault name="DELETE_DisableTxPushNotifications_400" message="wsdl:DELETE_DisableTxPushNotifications_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="DELETE_DisableTxPushNotifications_401" message="wsdl:DELETE_DisableTxPushNotifications_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="DELETE_DisableTxPushNotifications_404" message="wsdl:DELETE_DisableTxPushNotifications_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="POST_CreateTxPushTestTransaction">
      <documentation>Inject a transaction into the transaction list for a testing account. This allows an app to trigger TxPush notifications for the account in order to test the app's TxPush Listener service. This causes the platform to send one transaction event and one account event (showing that the account balance has changed). This service is only supported for testing accounts.

For additional details on this process, see [TxPush Listener Service](https://docs.finicity.com/txpush-listener-service/).

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:POST_CreateTxPushTestTransaction_InputMessage" />
      <output message="wsdl:POST_CreateTxPushTestTransaction_OutputMessage">
        <documentation>The test notification was successfully sent</documentation>
      </output>
      <fault name="POST_CreateTxPushTestTransaction_400" message="wsdl:POST_CreateTxPushTestTransaction_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="POST_CreateTxPushTestTransaction_401" message="wsdl:POST_CreateTxPushTestTransaction_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="POST_CreateTxPushTestTransaction_404" message="wsdl:POST_CreateTxPushTestTransaction_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="DELETE_DeleteTxPushSubscription">
      <documentation>Delete a specific subscription to TxPush notifications for the given account. This could be individual deleting the account or transactions events. No more events will be sent for that specific subscription.

For additional details on this process, see [TxPush Listener Service](https://docs.finicity.com/txpush-listener-service/).

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:DELETE_DeleteTxPushSubscription_InputMessage" />
      <output message="wsdl:DELETE_DeleteTxPushSubscription_OutputMessage">
        <documentation>The subscription was successfully deleted</documentation>
      </output>
      <fault name="DELETE_DeleteTxPushSubscription_400" message="wsdl:DELETE_DeleteTxPushSubscription_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="DELETE_DeleteTxPushSubscription_401" message="wsdl:DELETE_DeleteTxPushSubscription_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="DELETE_DeleteTxPushSubscription_404" message="wsdl:DELETE_DeleteTxPushSubscription_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="POST_GenerateVOAReport">
      <documentation>Generate a Verification of Assets (VOA) report for all checking, savings, money market, and investment accounts for the given customer. This service retrieves up to twelve months of transaction history for each account and uses this information to generate the VOA report.

This is a premium service. The billing rate is the variable rate for Verification of Assets under the current subscription plan. The billable event is the successful generation of a VOA report.

Before calling this API, a consumer must be created for the given customer ID (see Consumers APIs).

If no account of type checking, savings, money market, or investment is found, the service will return HTTP 400 Bad Request.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:POST_GenerateVOAReport_InputMessage" />
      <output message="wsdl:POST_GenerateVOAReport_OutputMessage">
        <documentation>The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.</documentation>
      </output>
      <fault name="POST_GenerateVOAReport_400" message="wsdl:POST_GenerateVOAReport_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="POST_GenerateVOAReport_401" message="wsdl:POST_GenerateVOAReport_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="POST_GenerateVOAReport_404" message="wsdl:POST_GenerateVOAReport_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="POST_GenerateVOAWithIncomeReport">
      <documentation>Generate a Verification of Assets with Income (VOAI) report for all checking, savings, money market, and investment accounts for the given customer. This service retrieves up to 24 months of transaction history for each account and uses this information to generate the VOAI report. The report includes 1 - 6 months of all debit and credit transactions for asset verification. By default, the history is set to 61 days, however, you can change the transaction history in this section by setting the `fromDate` parameter. The report also includes up to 24 months of income credit transactions (ordered by account and confidence level) regardless of `fromDate` for income verification.

This is a premium service. The billable event is the successful generation of a VOAI report.

Before calling this API, a consumer must be created for the given customer ID (see Consumers APIs).

If no account of type checking, savings, money market, or investment is found, the service will return HTTP 400 Bad Request.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:POST_GenerateVOAWithIncomeReport_InputMessage" />
      <output message="wsdl:POST_GenerateVOAWithIncomeReport_OutputMessage">
        <documentation>The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.</documentation>
      </output>
      <fault name="POST_GenerateVOAWithIncomeReport_400" message="wsdl:POST_GenerateVOAWithIncomeReport_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="POST_GenerateVOAWithIncomeReport_401" message="wsdl:POST_GenerateVOAWithIncomeReport_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="POST_GenerateVOAWithIncomeReport_404" message="wsdl:POST_GenerateVOAWithIncomeReport_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="POST_GeneratePrequalificationCRAReport">
      <documentation>Retrieve all checking, savings, money market, and investment accounts for a consumer. The account, owner information, and the number of insufficient funds (NSFs) for checking accounts are also provided.

If no account of type checking, savings, money market, or investment is found, the service will return HTTP 400 Bad Request.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:POST_GeneratePrequalificationCRAReport_InputMessage" />
      <output message="wsdl:POST_GeneratePrequalificationCRAReport_OutputMessage">
        <documentation>The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.</documentation>
      </output>
      <fault name="POST_GeneratePrequalificationCRAReport_400" message="wsdl:POST_GeneratePrequalificationCRAReport_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="POST_GeneratePrequalificationCRAReport_401" message="wsdl:POST_GeneratePrequalificationCRAReport_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="POST_GeneratePrequalificationCRAReport_404" message="wsdl:POST_GeneratePrequalificationCRAReport_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="POST_GeneratePrequalificationNonCRAReport">
      <documentation>Retrieve all checking, savings, money market, and investment accounts for a customer. The account, owner information, and the number of insufficient funds (NSFs) for checking accounts are also provided.

If no account type of checking, savings, money market, or investment is found, the service will return HTTP 400 Bad Request.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:POST_GeneratePrequalificationNonCRAReport_InputMessage" />
      <output message="wsdl:POST_GeneratePrequalificationNonCRAReport_OutputMessage">
        <documentation>The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.</documentation>
      </output>
      <fault name="POST_GeneratePrequalificationNonCRAReport_400" message="wsdl:POST_GeneratePrequalificationNonCRAReport_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="POST_GeneratePrequalificationNonCRAReport_401" message="wsdl:POST_GeneratePrequalificationNonCRAReport_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="POST_GeneratePrequalificationNonCRAReport_404" message="wsdl:POST_GeneratePrequalificationNonCRAReport_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="POST_GenerateVOIReport">
      <documentation>Generate a Verification of Income (VOI) report for all checking, savings, and money market accounts for the given customer. This service retrieves up to two years of transaction history for each account and uses this information to generate the VOI report.

This is a premium service. The billing rate is the variable rate for Verification of Income under the current subscription plan. The billable event is the successful generation of a VOI report.

If no account of type checking, savings, or money market is found, the service will return HTTP 400 Bad Request.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:POST_GenerateVOIReport_InputMessage" />
      <output message="wsdl:POST_GenerateVOIReport_OutputMessage">
        <documentation>The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.</documentation>
      </output>
      <fault name="POST_GenerateVOIReport_400" message="wsdl:POST_GenerateVOIReport_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="POST_GenerateVOIReport_401" message="wsdl:POST_GenerateVOIReport_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="POST_GenerateVOIReport_404" message="wsdl:POST_GenerateVOIReport_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="POST_GenerateVOEPayrollReport">
      <documentation>Premium Service: A billable event when the API response is successful. 

MVS Implementation Options: Direct API Integration.

Used as a complementary report to the VOIE-Payroll report. This report is used to fulfill the pre-close VOE requirements. It retrieves the customer's employment details and employment status through the payroll source without any income information. 

To generate this report, pass the values from the customer SSN, DOB, and the report ID from the first VOIE-Payroll report generated after the Connect session.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:POST_GenerateVOEPayrollReport_InputMessage" />
      <output message="wsdl:POST_GenerateVOEPayrollReport_OutputMessage">
        <documentation>The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.</documentation>
      </output>
      <fault name="POST_GenerateVOEPayrollReport_400" message="wsdl:POST_GenerateVOEPayrollReport_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="POST_GenerateVOEPayrollReport_401" message="wsdl:POST_GenerateVOEPayrollReport_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="POST_GenerateVOEPayrollReport_404" message="wsdl:POST_GenerateVOEPayrollReport_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="POST_GenerateVOETransactionsReport">
      <documentation>Premium Service: A billable event when the API response is successful.

MVS-Direct integration developers only.

Used as a complimentary report to the VOA with Income and VOIE - Paystub (with TXVerify) reports and used to fulfill the pre-close VOE requirements. 

Retrieve the latest credit transaction information from the borrower's connected bank accounts and groups them into income streams so that you can view their payment history to ensure a direct deport was made within the expected cadence. The report displays transaction descriptions without any dollar amounts so that income re-verification isn't necessary.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:POST_GenerateVOETransactionsReport_InputMessage" />
      <output message="wsdl:POST_GenerateVOETransactionsReport_OutputMessage">
        <documentation>The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.</documentation>
      </output>
      <fault name="POST_GenerateVOETransactionsReport_400" message="wsdl:POST_GenerateVOETransactionsReport_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="POST_GenerateVOETransactionsReport_401" message="wsdl:POST_GenerateVOETransactionsReport_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="POST_GenerateVOETransactionsReport_404" message="wsdl:POST_GenerateVOETransactionsReport_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="POST_GeneratePayStatementReport">
      <documentation>Generate Pay Statement Extraction Report for the given customer. This service accepts asset IDs of the stored pay statements to generate a Pay Statement Extraction Report. 

This is a premium service. The billing rate is the variable rate for Pay Statement Extraction Report under the current subscription plan. The billable event is the successful generation of a Pay Statement Extraction Report.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:POST_GeneratePayStatementReport_InputMessage" />
      <output message="wsdl:POST_GeneratePayStatementReport_OutputMessage">
        <documentation>The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.</documentation>
      </output>
      <fault name="POST_GeneratePayStatementReport_400" message="wsdl:POST_GeneratePayStatementReport_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="POST_GeneratePayStatementReport_401" message="wsdl:POST_GeneratePayStatementReport_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="POST_GeneratePayStatementReport_404" message="wsdl:POST_GeneratePayStatementReport_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="POST_GenerateVOIEPaystubWithTXVerifyReport">
      <documentation>Generate a VOIE - Paystub (with TXVerify) report for all checking and savings under the given customer. This service retrieves up to two years of transaction history for the given accounts. It then uses this information as well as the provided paystub(s), which are passed into the request body as asset IDs (generated using the Store Customer Pay Statement API) to generate the VOIE - Paystub (with TXVerify) report.

Note: if you are using this API to refresh the bank transactions, use the same asset ID from the first report. A new paystub is not required unless the paystub is too old for underwriting requirements. Using the same asset ID that was on the original report and the previously extracted details will be used to speed up report generation response time.

This is a premium service. The billing rate is the variable rate for VOIE TXVerify under the current subscription plan. The billable event is the successful generation of a VOIE TXVerify Report.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:POST_GenerateVOIEPaystubWithTXVerifyReport_InputMessage" />
      <output message="wsdl:POST_GenerateVOIEPaystubWithTXVerifyReport_OutputMessage">
        <documentation>The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.</documentation>
      </output>
      <fault name="POST_GenerateVOIEPaystubWithTXVerifyReport_400" message="wsdl:POST_GenerateVOIEPaystubWithTXVerifyReport_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="POST_GenerateVOIEPaystubWithTXVerifyReport_401" message="wsdl:POST_GenerateVOIEPaystubWithTXVerifyReport_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="POST_GenerateVOIEPaystubWithTXVerifyReport_404" message="wsdl:POST_GenerateVOIEPaystubWithTXVerifyReport_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="POST_GenerateVOIEPaystubReport">
      <documentation>Generate a VOIE - Paystub report. This service uses the provided paystub(s), which are passed into the request body as asset IDs (generated using the Store Customer Pay Statement API) to generate the VOIE - Paystub report with digitized paystub details.

This is a premium service. The billing rate is the variable rate for VOIE - Paystub under the current subscription plan. The billable event is the successful generation of a VOIE - Paystub Report.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:POST_GenerateVOIEPaystubReport_InputMessage" />
      <output message="wsdl:POST_GenerateVOIEPaystubReport_OutputMessage">
        <documentation>The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.</documentation>
      </output>
      <fault name="POST_GenerateVOIEPaystubReport_400" message="wsdl:POST_GenerateVOIEPaystubReport_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="POST_GenerateVOIEPaystubReport_401" message="wsdl:POST_GenerateVOIEPaystubReport_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="POST_GenerateVOIEPaystubReport_404" message="wsdl:POST_GenerateVOIEPaystubReport_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
    <operation name="POST_RefreshVOIEPayrollReport">
      <documentation>The VOIE – Payroll report generates when the customer completes Connect. Lenders, who commonly use this report for pre-close verification employment check, can refresh this report by passing the consumer's SSN, DOB, and the report ID from the first VOIE – Payroll report they received.

We'll refresh this report and update any new pay histories since the first report generated, including borrower's employment status as active or not.

Note: lenders can only refresh this report one time in a 60-day period starting from the date of the first report. Any further report refreshes will incur additional charges.

_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)</documentation>
      <input message="wsdl:POST_RefreshVOIEPayrollReport_InputMessage" />
      <output message="wsdl:POST_RefreshVOIEPayrollReport_OutputMessage">
        <documentation>The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.</documentation>
      </output>
      <fault name="POST_RefreshVOIEPayrollReport_400" message="wsdl:POST_RefreshVOIEPayrollReport_400">
        <documentation>The request was rejected</documentation>
      </fault>
      <fault name="POST_RefreshVOIEPayrollReport_401" message="wsdl:POST_RefreshVOIEPayrollReport_401">
        <documentation>The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".</documentation>
      </fault>
      <fault name="POST_RefreshVOIEPayrollReport_404" message="wsdl:POST_RefreshVOIEPayrollReport_404">
        <documentation>The resource doesn't exist</documentation>
      </fault>
    </operation>
  </portType>
  <binding name="Finicity_x0020_APIs_Binding" type="wsdl:Finicity_x0020_APIs_PortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
    <operation name="GET_GetCustomerAccountsByInstitutionLogin">
      <soap:operation soapAction="GET_GetCustomerAccountsByInstitutionLogin" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetCustomerAccountsByInstitutionLogin_400">
        <soap:fault use="literal" name="GET_GetCustomerAccountsByInstitutionLogin_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetCustomerAccountsByInstitutionLogin_401">
        <soap:fault use="literal" name="GET_GetCustomerAccountsByInstitutionLogin_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetCustomerAccountsByInstitutionLogin_404">
        <soap:fault use="literal" name="GET_GetCustomerAccountsByInstitutionLogin_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_RefreshCustomerAccountsByInstitutionLogin">
      <soap:operation soapAction="POST_RefreshCustomerAccountsByInstitutionLogin" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_RefreshCustomerAccountsByInstitutionLogin_400">
        <soap:fault use="literal" name="POST_RefreshCustomerAccountsByInstitutionLogin_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_RefreshCustomerAccountsByInstitutionLogin_401">
        <soap:fault use="literal" name="POST_RefreshCustomerAccountsByInstitutionLogin_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_RefreshCustomerAccountsByInstitutionLogin_404">
        <soap:fault use="literal" name="POST_RefreshCustomerAccountsByInstitutionLogin_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="DELETE_DeleteCustomerAccountsByInstitutionLogin">
      <soap:operation soapAction="DELETE_DeleteCustomerAccountsByInstitutionLogin" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="DELETE_DeleteCustomerAccountsByInstitutionLogin_400">
        <soap:fault use="literal" name="DELETE_DeleteCustomerAccountsByInstitutionLogin_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_DeleteCustomerAccountsByInstitutionLogin_401">
        <soap:fault use="literal" name="DELETE_DeleteCustomerAccountsByInstitutionLogin_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_DeleteCustomerAccountsByInstitutionLogin_404">
        <soap:fault use="literal" name="DELETE_DeleteCustomerAccountsByInstitutionLogin_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetCustomerAccount">
      <soap:operation soapAction="GET_GetCustomerAccount" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetCustomerAccount_400">
        <soap:fault use="literal" name="GET_GetCustomerAccount_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetCustomerAccount_401">
        <soap:fault use="literal" name="GET_GetCustomerAccount_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetCustomerAccount_404">
        <soap:fault use="literal" name="GET_GetCustomerAccount_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="DELETE_DeleteCustomerAccount">
      <soap:operation soapAction="DELETE_DeleteCustomerAccount" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="DELETE_DeleteCustomerAccount_400">
        <soap:fault use="literal" name="DELETE_DeleteCustomerAccount_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_DeleteCustomerAccount_401">
        <soap:fault use="literal" name="DELETE_DeleteCustomerAccount_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_DeleteCustomerAccount_404">
        <soap:fault use="literal" name="DELETE_DeleteCustomerAccount_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetCustomerAccounts">
      <soap:operation soapAction="GET_GetCustomerAccounts" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetCustomerAccounts_400">
        <soap:fault use="literal" name="GET_GetCustomerAccounts_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetCustomerAccounts_401">
        <soap:fault use="literal" name="GET_GetCustomerAccounts_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetCustomerAccounts_404">
        <soap:fault use="literal" name="GET_GetCustomerAccounts_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_RefreshCustomerAccounts">
      <soap:operation soapAction="POST_RefreshCustomerAccounts" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_RefreshCustomerAccounts_400">
        <soap:fault use="literal" name="POST_RefreshCustomerAccounts_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_RefreshCustomerAccounts_401">
        <soap:fault use="literal" name="POST_RefreshCustomerAccounts_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_RefreshCustomerAccounts_404">
        <soap:fault use="literal" name="POST_RefreshCustomerAccounts_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetCustomerAccountsByInstitution">
      <soap:operation soapAction="GET_GetCustomerAccountsByInstitution" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetCustomerAccountsByInstitution_400">
        <soap:fault use="literal" name="GET_GetCustomerAccountsByInstitution_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetCustomerAccountsByInstitution_401">
        <soap:fault use="literal" name="GET_GetCustomerAccountsByInstitution_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetCustomerAccountsByInstitution_404">
        <soap:fault use="literal" name="GET_GetCustomerAccountsByInstitution_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_GenerateConsumerAttributes">
      <soap:operation soapAction="POST_GenerateConsumerAttributes" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_GenerateConsumerAttributes_400">
        <soap:fault use="literal" name="POST_GenerateConsumerAttributes_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateConsumerAttributes_401">
        <soap:fault use="literal" name="POST_GenerateConsumerAttributes_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateConsumerAttributes_404">
        <soap:fault use="literal" name="POST_GenerateConsumerAttributes_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_ListConsumerAttributes">
      <soap:operation soapAction="GET_ListConsumerAttributes" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_ListConsumerAttributes_400">
        <soap:fault use="literal" name="GET_ListConsumerAttributes_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_ListConsumerAttributes_401">
        <soap:fault use="literal" name="GET_ListConsumerAttributes_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_ListConsumerAttributes_404">
        <soap:fault use="literal" name="GET_ListConsumerAttributes_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_GenerateFCRAConsumerAttributes">
      <soap:operation soapAction="POST_GenerateFCRAConsumerAttributes" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_GenerateFCRAConsumerAttributes_400">
        <soap:fault use="literal" name="POST_GenerateFCRAConsumerAttributes_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateFCRAConsumerAttributes_401">
        <soap:fault use="literal" name="POST_GenerateFCRAConsumerAttributes_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateFCRAConsumerAttributes_404">
        <soap:fault use="literal" name="POST_GenerateFCRAConsumerAttributes_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetConsumerAttributesByID">
      <soap:operation soapAction="GET_GetConsumerAttributesByID" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetConsumerAttributesByID_400">
        <soap:fault use="literal" name="GET_GetConsumerAttributesByID_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetConsumerAttributesByID_401">
        <soap:fault use="literal" name="GET_GetConsumerAttributesByID_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetConsumerAttributesByID_404">
        <soap:fault use="literal" name="GET_GetConsumerAttributesByID_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetFCRAConsumerAttributesByID">
      <soap:operation soapAction="GET_GetFCRAConsumerAttributesByID" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetFCRAConsumerAttributesByID_400">
        <soap:fault use="literal" name="GET_GetFCRAConsumerAttributesByID_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetFCRAConsumerAttributesByID_401">
        <soap:fault use="literal" name="GET_GetFCRAConsumerAttributesByID_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetFCRAConsumerAttributesByID_404">
        <soap:fault use="literal" name="GET_GetFCRAConsumerAttributesByID_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_RegisterApp">
      <soap:operation soapAction="POST_RegisterApp" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_RegisterApp_400">
        <soap:fault use="literal" name="POST_RegisterApp_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_RegisterApp_401">
        <soap:fault use="literal" name="POST_RegisterApp_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="PUT_ModifyAppRegistration">
      <soap:operation soapAction="PUT_ModifyAppRegistration" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="PUT_ModifyAppRegistration_400">
        <soap:fault use="literal" name="PUT_ModifyAppRegistration_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_ModifyAppRegistration_401">
        <soap:fault use="literal" name="PUT_ModifyAppRegistration_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_ModifyAppRegistration_404">
        <soap:fault use="literal" name="PUT_ModifyAppRegistration_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetAppRegistrationStatus">
      <soap:operation soapAction="GET_GetAppRegistrationStatus" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetAppRegistrationStatus_400">
        <soap:fault use="literal" name="GET_GetAppRegistrationStatus_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAppRegistrationStatus_401">
        <soap:fault use="literal" name="GET_GetAppRegistrationStatus_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAppRegistrationStatus_404">
        <soap:fault use="literal" name="GET_GetAppRegistrationStatus_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="PUT_SetCustomerAppID">
      <soap:operation soapAction="PUT_SetCustomerAppID" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="PUT_SetCustomerAppID_400">
        <soap:fault use="literal" name="PUT_SetCustomerAppID_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_SetCustomerAppID_401">
        <soap:fault use="literal" name="PUT_SetCustomerAppID_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_SetCustomerAppID_404">
        <soap:fault use="literal" name="PUT_SetCustomerAppID_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="PUT_MigrateInstitutionLoginAccounts">
      <soap:operation soapAction="PUT_MigrateInstitutionLoginAccounts" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="PUT_MigrateInstitutionLoginAccounts_400">
        <soap:fault use="literal" name="PUT_MigrateInstitutionLoginAccounts_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_MigrateInstitutionLoginAccounts_401">
        <soap:fault use="literal" name="PUT_MigrateInstitutionLoginAccounts_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_MigrateInstitutionLoginAccounts_404">
        <soap:fault use="literal" name="PUT_MigrateInstitutionLoginAccounts_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetAssetByCustomerID">
      <soap:operation soapAction="GET_GetAssetByCustomerID" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetAssetByCustomerID_400">
        <soap:fault use="literal" name="GET_GetAssetByCustomerID_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAssetByCustomerID_401">
        <soap:fault use="literal" name="GET_GetAssetByCustomerID_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAssetByCustomerID_404">
        <soap:fault use="literal" name="GET_GetAssetByCustomerID_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_CreateToken">
      <soap:operation soapAction="POST_CreateToken" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_CreateToken_400">
        <soap:fault use="literal" name="POST_CreateToken_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateToken_401">
        <soap:fault use="literal" name="POST_CreateToken_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="PUT_ModifyPartnerSecret">
      <soap:operation soapAction="PUT_ModifyPartnerSecret" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="PUT_ModifyPartnerSecret_400">
        <soap:fault use="literal" name="PUT_ModifyPartnerSecret_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_ModifyPartnerSecret_401">
        <soap:fault use="literal" name="PUT_ModifyPartnerSecret_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_GenerateBalanceAnalytics">
      <soap:operation soapAction="POST_GenerateBalanceAnalytics" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_GenerateBalanceAnalytics_400">
        <soap:fault use="literal" name="POST_GenerateBalanceAnalytics_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateBalanceAnalytics_401">
        <soap:fault use="literal" name="POST_GenerateBalanceAnalytics_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateBalanceAnalytics_403">
        <soap:fault use="literal" name="POST_GenerateBalanceAnalytics_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateBalanceAnalytics_404">
        <soap:fault use="literal" name="POST_GenerateBalanceAnalytics_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateBalanceAnalytics_409">
        <soap:fault use="literal" name="POST_GenerateBalanceAnalytics_409" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_GenerateBalanceAnalyticsFcra">
      <soap:operation soapAction="POST_GenerateBalanceAnalyticsFcra" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_GenerateBalanceAnalyticsFcra_400">
        <soap:fault use="literal" name="POST_GenerateBalanceAnalyticsFcra_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateBalanceAnalyticsFcra_401">
        <soap:fault use="literal" name="POST_GenerateBalanceAnalyticsFcra_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateBalanceAnalyticsFcra_403">
        <soap:fault use="literal" name="POST_GenerateBalanceAnalyticsFcra_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateBalanceAnalyticsFcra_404">
        <soap:fault use="literal" name="POST_GenerateBalanceAnalyticsFcra_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateBalanceAnalyticsFcra_409">
        <soap:fault use="literal" name="POST_GenerateBalanceAnalyticsFcra_409" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetObbAnalyticsReport">
      <soap:operation soapAction="GET_GetObbAnalyticsReport" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetObbAnalyticsReport_404">
        <soap:fault use="literal" name="GET_GetObbAnalyticsReport_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetObbAnalyticsReportFcra">
      <soap:operation soapAction="GET_GetObbAnalyticsReportFcra" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetObbAnalyticsReportFcra_404">
        <soap:fault use="literal" name="GET_GetObbAnalyticsReportFcra_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetCustomerAccountStatement">
      <soap:operation soapAction="GET_GetCustomerAccountStatement" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetCustomerAccountStatement_400">
        <soap:fault use="literal" name="GET_GetCustomerAccountStatement_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetCustomerAccountStatement_401">
        <soap:fault use="literal" name="GET_GetCustomerAccountStatement_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetCustomerAccountStatement_404">
        <soap:fault use="literal" name="GET_GetCustomerAccountStatement_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_GenerateStatementReport">
      <soap:operation soapAction="POST_GenerateStatementReport" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_GenerateStatementReport_400">
        <soap:fault use="literal" name="POST_GenerateStatementReport_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateStatementReport_401">
        <soap:fault use="literal" name="POST_GenerateStatementReport_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateStatementReport_404">
        <soap:fault use="literal" name="POST_GenerateStatementReport_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_GenerateCashFlowBusinessReport">
      <soap:operation soapAction="POST_GenerateCashFlowBusinessReport" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_GenerateCashFlowBusinessReport_400">
        <soap:fault use="literal" name="POST_GenerateCashFlowBusinessReport_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateCashFlowBusinessReport_401">
        <soap:fault use="literal" name="POST_GenerateCashFlowBusinessReport_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateCashFlowBusinessReport_404">
        <soap:fault use="literal" name="POST_GenerateCashFlowBusinessReport_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_GenerateCashFlowPersonalReport">
      <soap:operation soapAction="POST_GenerateCashFlowPersonalReport" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_GenerateCashFlowPersonalReport_400">
        <soap:fault use="literal" name="POST_GenerateCashFlowPersonalReport_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateCashFlowPersonalReport_401">
        <soap:fault use="literal" name="POST_GenerateCashFlowPersonalReport_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateCashFlowPersonalReport_404">
        <soap:fault use="literal" name="POST_GenerateCashFlowPersonalReport_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_GenerateCashFlowAnalytics">
      <soap:operation soapAction="POST_GenerateCashFlowAnalytics" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_GenerateCashFlowAnalytics_400">
        <soap:fault use="literal" name="POST_GenerateCashFlowAnalytics_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateCashFlowAnalytics_401">
        <soap:fault use="literal" name="POST_GenerateCashFlowAnalytics_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateCashFlowAnalytics_403">
        <soap:fault use="literal" name="POST_GenerateCashFlowAnalytics_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateCashFlowAnalytics_404">
        <soap:fault use="literal" name="POST_GenerateCashFlowAnalytics_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateCashFlowAnalytics_409">
        <soap:fault use="literal" name="POST_GenerateCashFlowAnalytics_409" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_GenerateCashFlowAnalyticsFcra">
      <soap:operation soapAction="POST_GenerateCashFlowAnalyticsFcra" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_GenerateCashFlowAnalyticsFcra_400">
        <soap:fault use="literal" name="POST_GenerateCashFlowAnalyticsFcra_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateCashFlowAnalyticsFcra_401">
        <soap:fault use="literal" name="POST_GenerateCashFlowAnalyticsFcra_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateCashFlowAnalyticsFcra_403">
        <soap:fault use="literal" name="POST_GenerateCashFlowAnalyticsFcra_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateCashFlowAnalyticsFcra_404">
        <soap:fault use="literal" name="POST_GenerateCashFlowAnalyticsFcra_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateCashFlowAnalyticsFcra_409">
        <soap:fault use="literal" name="POST_GenerateCashFlowAnalyticsFcra_409" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_GenerateConnectUrl">
      <soap:operation soapAction="POST_GenerateConnectUrl" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_GenerateConnectUrl_400">
        <soap:fault use="literal" name="POST_GenerateConnectUrl_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateConnectUrl_401">
        <soap:fault use="literal" name="POST_GenerateConnectUrl_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_GenerateLiteConnectUrl">
      <soap:operation soapAction="POST_GenerateLiteConnectUrl" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_GenerateLiteConnectUrl_400">
        <soap:fault use="literal" name="POST_GenerateLiteConnectUrl_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateLiteConnectUrl_401">
        <soap:fault use="literal" name="POST_GenerateLiteConnectUrl_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_GenerateFixConnectUrl">
      <soap:operation soapAction="POST_GenerateFixConnectUrl" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_GenerateFixConnectUrl_400">
        <soap:fault use="literal" name="POST_GenerateFixConnectUrl_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateFixConnectUrl_401">
        <soap:fault use="literal" name="POST_GenerateFixConnectUrl_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateFixConnectUrl_404">
        <soap:fault use="literal" name="POST_GenerateFixConnectUrl_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_SendConnectEmail">
      <soap:operation soapAction="POST_SendConnectEmail" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_SendConnectEmail_400">
        <soap:fault use="literal" name="POST_SendConnectEmail_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_SendConnectEmail_401">
        <soap:fault use="literal" name="POST_SendConnectEmail_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_GenerateJointBorrowerConnectUrl">
      <soap:operation soapAction="POST_GenerateJointBorrowerConnectUrl" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_GenerateJointBorrowerConnectUrl_400">
        <soap:fault use="literal" name="POST_GenerateJointBorrowerConnectUrl_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateJointBorrowerConnectUrl_401">
        <soap:fault use="literal" name="POST_GenerateJointBorrowerConnectUrl_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_SendJointBorrowerConnectEmail">
      <soap:operation soapAction="POST_SendJointBorrowerConnectEmail" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_SendJointBorrowerConnectEmail_400">
        <soap:fault use="literal" name="POST_SendJointBorrowerConnectEmail_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_SendJointBorrowerConnectEmail_401">
        <soap:fault use="literal" name="POST_SendJointBorrowerConnectEmail_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_CreateConsumer">
      <soap:operation soapAction="POST_CreateConsumer" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_CreateConsumer_400">
        <soap:fault use="literal" name="POST_CreateConsumer_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateConsumer_401">
        <soap:fault use="literal" name="POST_CreateConsumer_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateConsumer_404">
        <soap:fault use="literal" name="POST_CreateConsumer_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateConsumer_409">
        <soap:fault use="literal" name="POST_CreateConsumer_409" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetConsumerForCustomer">
      <soap:operation soapAction="GET_GetConsumerForCustomer" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetConsumerForCustomer_400">
        <soap:fault use="literal" name="GET_GetConsumerForCustomer_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetConsumerForCustomer_401">
        <soap:fault use="literal" name="GET_GetConsumerForCustomer_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetConsumerForCustomer_404">
        <soap:fault use="literal" name="GET_GetConsumerForCustomer_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetConsumer">
      <soap:operation soapAction="GET_GetConsumer" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetConsumer_400">
        <soap:fault use="literal" name="GET_GetConsumer_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetConsumer_401">
        <soap:fault use="literal" name="GET_GetConsumer_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetConsumer_404">
        <soap:fault use="literal" name="GET_GetConsumer_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="PUT_ModifyConsumer">
      <soap:operation soapAction="PUT_ModifyConsumer" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="PUT_ModifyConsumer_400">
        <soap:fault use="literal" name="PUT_ModifyConsumer_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_ModifyConsumer_401">
        <soap:fault use="literal" name="PUT_ModifyConsumer_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_ModifyConsumer_404">
        <soap:fault use="literal" name="PUT_ModifyConsumer_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_AddTestingCustomer">
      <soap:operation soapAction="POST_AddTestingCustomer" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_AddTestingCustomer_400">
        <soap:fault use="literal" name="POST_AddTestingCustomer_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_AddTestingCustomer_401">
        <soap:fault use="literal" name="POST_AddTestingCustomer_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_AddCustomer">
      <soap:operation soapAction="POST_AddCustomer" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_AddCustomer_400">
        <soap:fault use="literal" name="POST_AddCustomer_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_AddCustomer_401">
        <soap:fault use="literal" name="POST_AddCustomer_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_AddCustomer_429">
        <soap:fault use="literal" name="POST_AddCustomer_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetCustomers">
      <soap:operation soapAction="GET_GetCustomers" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetCustomers_400">
        <soap:fault use="literal" name="GET_GetCustomers_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetCustomers_401">
        <soap:fault use="literal" name="GET_GetCustomers_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetCustomerWithAppData">
      <soap:operation soapAction="GET_GetCustomerWithAppData" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetCustomerWithAppData_400">
        <soap:fault use="literal" name="GET_GetCustomerWithAppData_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetCustomerWithAppData_401">
        <soap:fault use="literal" name="GET_GetCustomerWithAppData_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetCustomerWithAppData_404">
        <soap:fault use="literal" name="GET_GetCustomerWithAppData_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetCustomer">
      <soap:operation soapAction="GET_GetCustomer" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetCustomer_400">
        <soap:fault use="literal" name="GET_GetCustomer_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetCustomer_401">
        <soap:fault use="literal" name="GET_GetCustomer_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetCustomer_404">
        <soap:fault use="literal" name="GET_GetCustomer_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="PUT_ModifyCustomer">
      <soap:operation soapAction="PUT_ModifyCustomer" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="PUT_ModifyCustomer_400">
        <soap:fault use="literal" name="PUT_ModifyCustomer_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_ModifyCustomer_401">
        <soap:fault use="literal" name="PUT_ModifyCustomer_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_ModifyCustomer_404">
        <soap:fault use="literal" name="PUT_ModifyCustomer_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="DELETE_DeleteCustomer">
      <soap:operation soapAction="DELETE_DeleteCustomer" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="DELETE_DeleteCustomer_401">
        <soap:fault use="literal" name="DELETE_DeleteCustomer_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_DeleteCustomer_404">
        <soap:fault use="literal" name="DELETE_DeleteCustomer_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetCertifiedInstitutionsWithRSSD">
      <soap:operation soapAction="GET_GetCertifiedInstitutionsWithRSSD" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetCertifiedInstitutionsWithRSSD_400">
        <soap:fault use="literal" name="GET_GetCertifiedInstitutionsWithRSSD_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetCertifiedInstitutionsWithRSSD_401">
        <soap:fault use="literal" name="GET_GetCertifiedInstitutionsWithRSSD_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetInstitutions">
      <soap:operation soapAction="GET_GetInstitutions" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetInstitutions_400">
        <soap:fault use="literal" name="GET_GetInstitutions_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInstitutions_401">
        <soap:fault use="literal" name="GET_GetInstitutions_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetCertifiedInstitutions">
      <soap:operation soapAction="GET_GetCertifiedInstitutions" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetCertifiedInstitutions_400">
        <soap:fault use="literal" name="GET_GetCertifiedInstitutions_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetCertifiedInstitutions_401">
        <soap:fault use="literal" name="GET_GetCertifiedInstitutions_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetInstitution">
      <soap:operation soapAction="GET_GetInstitution" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetInstitution_400">
        <soap:fault use="literal" name="GET_GetInstitution_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInstitution_401">
        <soap:fault use="literal" name="GET_GetInstitution_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInstitution_404">
        <soap:fault use="literal" name="GET_GetInstitution_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetInstitutionBranding">
      <soap:operation soapAction="GET_GetInstitutionBranding" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetInstitutionBranding_400">
        <soap:fault use="literal" name="GET_GetInstitutionBranding_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInstitutionBranding_401">
        <soap:fault use="literal" name="GET_GetInstitutionBranding_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInstitutionBranding_404">
        <soap:fault use="literal" name="GET_GetInstitutionBranding_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_StoreCustomerPayStatement">
      <soap:operation soapAction="POST_StoreCustomerPayStatement" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_StoreCustomerPayStatement_400">
        <soap:fault use="literal" name="POST_StoreCustomerPayStatement_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_StoreCustomerPayStatement_401">
        <soap:fault use="literal" name="POST_StoreCustomerPayStatement_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_StoreCustomerPayStatement_404">
        <soap:fault use="literal" name="POST_StoreCustomerPayStatement_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetAccountOwner">
      <soap:operation soapAction="GET_GetAccountOwner" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetAccountOwner_400">
        <soap:fault use="literal" name="GET_GetAccountOwner_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountOwner_401">
        <soap:fault use="literal" name="GET_GetAccountOwner_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountOwner_404">
        <soap:fault use="literal" name="GET_GetAccountOwner_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetLoanPaymentDetails">
      <soap:operation soapAction="GET_GetLoanPaymentDetails" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetLoanPaymentDetails_400">
        <soap:fault use="literal" name="GET_GetLoanPaymentDetails_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetLoanPaymentDetails_401">
        <soap:fault use="literal" name="GET_GetLoanPaymentDetails_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetLoanPaymentDetails_404">
        <soap:fault use="literal" name="GET_GetLoanPaymentDetails_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetAccountACHDetails">
      <soap:operation soapAction="GET_GetAccountACHDetails" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetAccountACHDetails_400">
        <soap:fault use="literal" name="GET_GetAccountACHDetails_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountACHDetails_401">
        <soap:fault use="literal" name="GET_GetAccountACHDetails_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountACHDetails_404">
        <soap:fault use="literal" name="GET_GetAccountACHDetails_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetAvailableBalanceLive">
      <soap:operation soapAction="GET_GetAvailableBalanceLive" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetAvailableBalanceLive_400">
        <soap:fault use="literal" name="GET_GetAvailableBalanceLive_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAvailableBalanceLive_401">
        <soap:fault use="literal" name="GET_GetAvailableBalanceLive_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAvailableBalanceLive_404">
        <soap:fault use="literal" name="GET_GetAvailableBalanceLive_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetAvailableBalance">
      <soap:operation soapAction="GET_GetAvailableBalance" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetAvailableBalance_400">
        <soap:fault use="literal" name="GET_GetAvailableBalance_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAvailableBalance_401">
        <soap:fault use="literal" name="GET_GetAvailableBalance_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAvailableBalance_404">
        <soap:fault use="literal" name="GET_GetAvailableBalance_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetPortfolioByCustomer">
      <soap:operation soapAction="GET_GetPortfolioByCustomer" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetPortfolioByCustomer_400">
        <soap:fault use="literal" name="GET_GetPortfolioByCustomer_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetPortfolioByCustomer_401">
        <soap:fault use="literal" name="GET_GetPortfolioByCustomer_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetPortfolioByCustomer_404">
        <soap:fault use="literal" name="GET_GetPortfolioByCustomer_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetPortfolioByConsumer">
      <soap:operation soapAction="GET_GetPortfolioByConsumer" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetPortfolioByConsumer_400">
        <soap:fault use="literal" name="GET_GetPortfolioByConsumer_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetPortfolioByConsumer_401">
        <soap:fault use="literal" name="GET_GetPortfolioByConsumer_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetPortfolioByConsumer_404">
        <soap:fault use="literal" name="GET_GetPortfolioByConsumer_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetReportByCustomer">
      <soap:operation soapAction="GET_GetReportByCustomer" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetReportByCustomer_400">
        <soap:fault use="literal" name="GET_GetReportByCustomer_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetReportByCustomer_401">
        <soap:fault use="literal" name="GET_GetReportByCustomer_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetReportByCustomer_404">
        <soap:fault use="literal" name="GET_GetReportByCustomer_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetReportByConsumer">
      <soap:operation soapAction="GET_GetReportByConsumer" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetReportByConsumer_400">
        <soap:fault use="literal" name="GET_GetReportByConsumer_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetReportByConsumer_401">
        <soap:fault use="literal" name="GET_GetReportByConsumer_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetReportByConsumer_404">
        <soap:fault use="literal" name="GET_GetReportByConsumer_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetReportsByCustomerId">
      <soap:operation soapAction="GET_GetReportsByCustomerId" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetReportsByCustomerId_400">
        <soap:fault use="literal" name="GET_GetReportsByCustomerId_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetReportsByCustomerId_401">
        <soap:fault use="literal" name="GET_GetReportsByCustomerId_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetReportsByCustomerId_404">
        <soap:fault use="literal" name="GET_GetReportsByCustomerId_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetReportsByCustomerId_429">
        <soap:fault use="literal" name="GET_GetReportsByCustomerId_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetReportsByConsumerId">
      <soap:operation soapAction="GET_GetReportsByConsumerId" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetReportsByConsumerId_400">
        <soap:fault use="literal" name="GET_GetReportsByConsumerId_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetReportsByConsumerId_401">
        <soap:fault use="literal" name="GET_GetReportsByConsumerId_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetReportsByConsumerId_404">
        <soap:fault use="literal" name="GET_GetReportsByConsumerId_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetReportsByConsumerId_429">
        <soap:fault use="literal" name="GET_GetReportsByConsumerId_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_LoadHistoricTransactionsForCustomerAccount">
      <soap:operation soapAction="POST_LoadHistoricTransactionsForCustomerAccount" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_LoadHistoricTransactionsForCustomerAccount_400">
        <soap:fault use="literal" name="POST_LoadHistoricTransactionsForCustomerAccount_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_LoadHistoricTransactionsForCustomerAccount_401">
        <soap:fault use="literal" name="POST_LoadHistoricTransactionsForCustomerAccount_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_LoadHistoricTransactionsForCustomerAccount_404">
        <soap:fault use="literal" name="POST_LoadHistoricTransactionsForCustomerAccount_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetAllCustomerTransactions">
      <soap:operation soapAction="GET_GetAllCustomerTransactions" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetAllCustomerTransactions_400">
        <soap:fault use="literal" name="GET_GetAllCustomerTransactions_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAllCustomerTransactions_401">
        <soap:fault use="literal" name="GET_GetAllCustomerTransactions_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAllCustomerTransactions_404">
        <soap:fault use="literal" name="GET_GetAllCustomerTransactions_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetCustomerTransaction">
      <soap:operation soapAction="GET_GetCustomerTransaction" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetCustomerTransaction_400">
        <soap:fault use="literal" name="GET_GetCustomerTransaction_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetCustomerTransaction_401">
        <soap:fault use="literal" name="GET_GetCustomerTransaction_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetCustomerTransaction_404">
        <soap:fault use="literal" name="GET_GetCustomerTransaction_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetCustomerAccountTransactions">
      <soap:operation soapAction="GET_GetCustomerAccountTransactions" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetCustomerAccountTransactions_400">
        <soap:fault use="literal" name="GET_GetCustomerAccountTransactions_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetCustomerAccountTransactions_401">
        <soap:fault use="literal" name="GET_GetCustomerAccountTransactions_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetCustomerAccountTransactions_404">
        <soap:fault use="literal" name="GET_GetCustomerAccountTransactions_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_GenerateTransactionsReport">
      <soap:operation soapAction="POST_GenerateTransactionsReport" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_GenerateTransactionsReport_400">
        <soap:fault use="literal" name="POST_GenerateTransactionsReport_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateTransactionsReport_401">
        <soap:fault use="literal" name="POST_GenerateTransactionsReport_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateTransactionsReport_404">
        <soap:fault use="literal" name="POST_GenerateTransactionsReport_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_SubscribeToTxPushNotifications">
      <soap:operation soapAction="POST_SubscribeToTxPushNotifications" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_SubscribeToTxPushNotifications_400">
        <soap:fault use="literal" name="POST_SubscribeToTxPushNotifications_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_SubscribeToTxPushNotifications_401">
        <soap:fault use="literal" name="POST_SubscribeToTxPushNotifications_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_SubscribeToTxPushNotifications_404">
        <soap:fault use="literal" name="POST_SubscribeToTxPushNotifications_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="DELETE_DisableTxPushNotifications">
      <soap:operation soapAction="DELETE_DisableTxPushNotifications" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="DELETE_DisableTxPushNotifications_400">
        <soap:fault use="literal" name="DELETE_DisableTxPushNotifications_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_DisableTxPushNotifications_401">
        <soap:fault use="literal" name="DELETE_DisableTxPushNotifications_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_DisableTxPushNotifications_404">
        <soap:fault use="literal" name="DELETE_DisableTxPushNotifications_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_CreateTxPushTestTransaction">
      <soap:operation soapAction="POST_CreateTxPushTestTransaction" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_CreateTxPushTestTransaction_400">
        <soap:fault use="literal" name="POST_CreateTxPushTestTransaction_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateTxPushTestTransaction_401">
        <soap:fault use="literal" name="POST_CreateTxPushTestTransaction_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateTxPushTestTransaction_404">
        <soap:fault use="literal" name="POST_CreateTxPushTestTransaction_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="DELETE_DeleteTxPushSubscription">
      <soap:operation soapAction="DELETE_DeleteTxPushSubscription" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="DELETE_DeleteTxPushSubscription_400">
        <soap:fault use="literal" name="DELETE_DeleteTxPushSubscription_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_DeleteTxPushSubscription_401">
        <soap:fault use="literal" name="DELETE_DeleteTxPushSubscription_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_DeleteTxPushSubscription_404">
        <soap:fault use="literal" name="DELETE_DeleteTxPushSubscription_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_GenerateVOAReport">
      <soap:operation soapAction="POST_GenerateVOAReport" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_GenerateVOAReport_400">
        <soap:fault use="literal" name="POST_GenerateVOAReport_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateVOAReport_401">
        <soap:fault use="literal" name="POST_GenerateVOAReport_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateVOAReport_404">
        <soap:fault use="literal" name="POST_GenerateVOAReport_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_GenerateVOAWithIncomeReport">
      <soap:operation soapAction="POST_GenerateVOAWithIncomeReport" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_GenerateVOAWithIncomeReport_400">
        <soap:fault use="literal" name="POST_GenerateVOAWithIncomeReport_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateVOAWithIncomeReport_401">
        <soap:fault use="literal" name="POST_GenerateVOAWithIncomeReport_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateVOAWithIncomeReport_404">
        <soap:fault use="literal" name="POST_GenerateVOAWithIncomeReport_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_GeneratePrequalificationCRAReport">
      <soap:operation soapAction="POST_GeneratePrequalificationCRAReport" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_GeneratePrequalificationCRAReport_400">
        <soap:fault use="literal" name="POST_GeneratePrequalificationCRAReport_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GeneratePrequalificationCRAReport_401">
        <soap:fault use="literal" name="POST_GeneratePrequalificationCRAReport_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GeneratePrequalificationCRAReport_404">
        <soap:fault use="literal" name="POST_GeneratePrequalificationCRAReport_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_GeneratePrequalificationNonCRAReport">
      <soap:operation soapAction="POST_GeneratePrequalificationNonCRAReport" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_GeneratePrequalificationNonCRAReport_400">
        <soap:fault use="literal" name="POST_GeneratePrequalificationNonCRAReport_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GeneratePrequalificationNonCRAReport_401">
        <soap:fault use="literal" name="POST_GeneratePrequalificationNonCRAReport_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GeneratePrequalificationNonCRAReport_404">
        <soap:fault use="literal" name="POST_GeneratePrequalificationNonCRAReport_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_GenerateVOIReport">
      <soap:operation soapAction="POST_GenerateVOIReport" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_GenerateVOIReport_400">
        <soap:fault use="literal" name="POST_GenerateVOIReport_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateVOIReport_401">
        <soap:fault use="literal" name="POST_GenerateVOIReport_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateVOIReport_404">
        <soap:fault use="literal" name="POST_GenerateVOIReport_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_GenerateVOEPayrollReport">
      <soap:operation soapAction="POST_GenerateVOEPayrollReport" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_GenerateVOEPayrollReport_400">
        <soap:fault use="literal" name="POST_GenerateVOEPayrollReport_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateVOEPayrollReport_401">
        <soap:fault use="literal" name="POST_GenerateVOEPayrollReport_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateVOEPayrollReport_404">
        <soap:fault use="literal" name="POST_GenerateVOEPayrollReport_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_GenerateVOETransactionsReport">
      <soap:operation soapAction="POST_GenerateVOETransactionsReport" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_GenerateVOETransactionsReport_400">
        <soap:fault use="literal" name="POST_GenerateVOETransactionsReport_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateVOETransactionsReport_401">
        <soap:fault use="literal" name="POST_GenerateVOETransactionsReport_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateVOETransactionsReport_404">
        <soap:fault use="literal" name="POST_GenerateVOETransactionsReport_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_GeneratePayStatementReport">
      <soap:operation soapAction="POST_GeneratePayStatementReport" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_GeneratePayStatementReport_400">
        <soap:fault use="literal" name="POST_GeneratePayStatementReport_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GeneratePayStatementReport_401">
        <soap:fault use="literal" name="POST_GeneratePayStatementReport_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GeneratePayStatementReport_404">
        <soap:fault use="literal" name="POST_GeneratePayStatementReport_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_GenerateVOIEPaystubWithTXVerifyReport">
      <soap:operation soapAction="POST_GenerateVOIEPaystubWithTXVerifyReport" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_GenerateVOIEPaystubWithTXVerifyReport_400">
        <soap:fault use="literal" name="POST_GenerateVOIEPaystubWithTXVerifyReport_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateVOIEPaystubWithTXVerifyReport_401">
        <soap:fault use="literal" name="POST_GenerateVOIEPaystubWithTXVerifyReport_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateVOIEPaystubWithTXVerifyReport_404">
        <soap:fault use="literal" name="POST_GenerateVOIEPaystubWithTXVerifyReport_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_GenerateVOIEPaystubReport">
      <soap:operation soapAction="POST_GenerateVOIEPaystubReport" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_GenerateVOIEPaystubReport_400">
        <soap:fault use="literal" name="POST_GenerateVOIEPaystubReport_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateVOIEPaystubReport_401">
        <soap:fault use="literal" name="POST_GenerateVOIEPaystubReport_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_GenerateVOIEPaystubReport_404">
        <soap:fault use="literal" name="POST_GenerateVOIEPaystubReport_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_RefreshVOIEPayrollReport">
      <soap:operation soapAction="POST_RefreshVOIEPayrollReport" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_RefreshVOIEPayrollReport_400">
        <soap:fault use="literal" name="POST_RefreshVOIEPayrollReport_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_RefreshVOIEPayrollReport_401">
        <soap:fault use="literal" name="POST_RefreshVOIEPayrollReport_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_RefreshVOIEPayrollReport_404">
        <soap:fault use="literal" name="POST_RefreshVOIEPayrollReport_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
  </binding>
  <service name="Finicity_x0020_APIs">
    <documentation>OpenAPI specification for Finicity APIs

![](https://raw.githubusercontent.com/Mastercard/finicity-openapi/main/res/logo.png)</documentation>
    <port name="default_Port" binding="wsdl:Finicity_x0020_APIs_Binding">
      <soap:address location="https://api.finicity.com" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
    </port>
  </service>
</definitions>